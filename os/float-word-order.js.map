{"version":3,"sources":["@stdlib/os/float-word-order/lib/main.js","@stdlib/os/float-word-order/lib/index.js"],"names":["FLOAT_WORD_ORDER","BYTE_ORDER","__var_0__"],"mappings":"+BAsBA,IAWIA,EAXAC,EAAaC,EAoBjBA,EAPCF,EADmB,kBAZHE,GAYqC,eAZrCA,EAAAA,EAeG,UCEhBF,EAAmBE","sourcesContent":["import __var_0__ from '@stdlib/os/byte-order';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar BYTE_ORDER = __var_0__;\n\n\n// MAIN //\n\n/**\n* Platform float word order.\n*\n* @constant\n* @type {string}\n*/\nvar FLOAT_WORD_ORDER;\nif ( BYTE_ORDER === 'little-endian' || BYTE_ORDER === 'big-endian' ) {\n\tFLOAT_WORD_ORDER = BYTE_ORDER;\n} else {\n\tFLOAT_WORD_ORDER = 'unknown';\n}\n\n\n// EXPORTS //\nexport default FLOAT_WORD_ORDER;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Platform float word order.\n*\n* @module @stdlib/os/float-word-order\n*\n* @example\n* var FLOAT_WORD_ORDER = require( '@stdlib/os/float-word-order' );\n*\n* if ( FLOAT_WORD_ORDER === 'little-endian' ) {\n*     console.log( 'Least significant word comes first...' );\n* } else if ( FLOAT_WORD_ORDER === 'big-endian' ) {\n*     console.log( 'Most significant word comes first...' );\n* } else {\n*     console.log( 'This is uncommon...' );\n* }\n*/\n\n// MODULES //\nvar FLOAT_WORD_ORDER = __var_0__;\n\n\n// EXPORTS //\nexport default FLOAT_WORD_ORDER;\n"]}