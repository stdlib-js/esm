{"version":3,"sources":["@stdlib/simulate/iter/lib/index.js"],"names":["setReadOnly","__var_0__","ns","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__","__var_11__","__var_12__","__var_13__","__var_14__","__var_15__","__var_16__"],"mappings":"8vDA0CA,IAAIA,EAAcC,EAUdC,EAAK,GASTF,EAAaE,EAAI,WAAYC,GAS7BH,EAAaE,EAAI,WAAYE,GAS7BJ,EAAaE,EAAI,WAAYG,GAS7BL,EAAaE,EAAI,wBAAyBI,GAS1CN,EAAaE,EAAI,oBAAqBK,GAStCP,EAAaE,EAAI,iBAAkBM,GASnCR,EAAaE,EAAI,gBAAiBO,GASlCT,EAAaE,EAAI,mBAAoBQ,GASrCV,EAAaE,EAAI,gBAAiBS,GASlCX,EAAaE,EAAI,mBAAoBU,GASrCZ,EAAaE,EAAI,mBAAoBW,GASrCb,EAAaE,EAAI,YAAaY,GAS9Bd,EAAaE,EAAI,mBAAoBa,GASrCf,EAAaE,EAAI,eAAgBc,GASjChB,EAAaE,EAAI,iBAAkBe,GASnCjB,EAAaE,EAAI,mBAAoBgB","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/simulate/iter/awgn';\nimport __var_2__ from '@stdlib/simulate/iter/awln';\nimport __var_3__ from '@stdlib/simulate/iter/awun';\nimport __var_4__ from '@stdlib/simulate/iter/bartlett-hann-pulse';\nimport __var_5__ from '@stdlib/simulate/iter/bartlett-pulse';\nimport __var_6__ from '@stdlib/simulate/iter/cosine-wave';\nimport __var_7__ from '@stdlib/simulate/iter/dirac-comb';\nimport __var_8__ from '@stdlib/simulate/iter/flat-top-pulse';\nimport __var_9__ from '@stdlib/simulate/iter/hann-pulse';\nimport __var_10__ from '@stdlib/simulate/iter/lanczos-pulse';\nimport __var_11__ from '@stdlib/simulate/iter/periodic-sinc';\nimport __var_12__ from '@stdlib/simulate/iter/pulse';\nimport __var_13__ from '@stdlib/simulate/iter/sawtooth-wave';\nimport __var_14__ from '@stdlib/simulate/iter/sine-wave';\nimport __var_15__ from '@stdlib/simulate/iter/square-wave';\nimport __var_16__ from '@stdlib/simulate/iter/triangle-wave';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name iterawgn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awgn}\n*/\nsetReadOnly( ns, 'iterawgn', __var_1__);\n\n/**\n* @name iterawln\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awln}\n*/\nsetReadOnly( ns, 'iterawln', __var_2__);\n\n/**\n* @name iterawun\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awun}\n*/\nsetReadOnly( ns, 'iterawun', __var_3__);\n\n/**\n* @name iterBartlettHannPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/bartlett-hann-pulse}\n*/\nsetReadOnly( ns, 'iterBartlettHannPulse', __var_4__);\n\n/**\n* @name iterBartlettPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/bartlett-pulse}\n*/\nsetReadOnly( ns, 'iterBartlettPulse', __var_5__);\n\n/**\n* @name iterCosineWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/cosine-wave}\n*/\nsetReadOnly( ns, 'iterCosineWave', __var_6__);\n\n/**\n* @name iterDiracComb\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/dirac-comb}\n*/\nsetReadOnly( ns, 'iterDiracComb', __var_7__);\n\n/**\n* @name iterFlatTopPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/flat-top-pulse}\n*/\nsetReadOnly( ns, 'iterFlatTopPulse', __var_8__);\n\n/**\n* @name iterHannPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/hann-pulse}\n*/\nsetReadOnly( ns, 'iterHannPulse', __var_9__);\n\n/**\n* @name iterLanczosPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/lanczos-pulse}\n*/\nsetReadOnly( ns, 'iterLanczosPulse', __var_10__);\n\n/**\n* @name iterPeriodicSinc\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/periodic-sinc}\n*/\nsetReadOnly( ns, 'iterPeriodicSinc', __var_11__);\n\n/**\n* @name iterPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/pulse}\n*/\nsetReadOnly( ns, 'iterPulse', __var_12__);\n\n/**\n* @name iterSawtoothWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/sawtooth-wave}\n*/\nsetReadOnly( ns, 'iterSawtoothWave', __var_13__);\n\n/**\n* @name iterSineWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/sine-wave}\n*/\nsetReadOnly( ns, 'iterSineWave', __var_14__);\n\n/**\n* @name iterSquareWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/square-wave}\n*/\nsetReadOnly( ns, 'iterSquareWave', __var_15__);\n\n/**\n* @name iterTriangleWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/triangle-wave}\n*/\nsetReadOnly( ns, 'iterTriangleWave', __var_16__);\n\n\n// EXPORTS //\nexport default ns;\n\nexport { __var_1__ as iterawgn, __var_2__ as iterawln, __var_3__ as iterawun, __var_4__ as iterBartlettHannPulse, __var_5__ as iterBartlettPulse, __var_6__ as iterCosineWave, __var_7__ as iterDiracComb, __var_8__ as iterFlatTopPulse, __var_9__ as iterHannPulse, __var_10__ as iterLanczosPulse, __var_11__ as iterPeriodicSinc, __var_12__ as iterPulse, __var_13__ as iterSawtoothWave, __var_14__ as iterSineWave, __var_15__ as iterSquareWave, __var_16__ as iterTriangleWave};"]}