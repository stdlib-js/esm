{"version":3,"sources":["@stdlib/simulate/iter/flat-top-pulse/lib/validate.js","@stdlib/simulate/iter/flat-top-pulse/lib/main.js","@stdlib/simulate/iter/flat-top-pulse/lib/index.js"],"names":["isPlainObject","__var_0__","hasOwnProp","__var_1__","isPositiveNumber","__var_2__","isPrimitive","isInteger","__var_3__","isPositiveInteger","__var_4__","isNonNegativeInteger","__var_5__","validate","opts","options","duration","TypeError","period","amplitude","offset","iter","setReadOnly","iteratorSymbol","cospi","A0","A1","A2","A3","A4","flatTop","t","A","tau","s","iterFlatTopPulse","FLG","err","i","arguments","length","RangeError","next","end","factory","done","value","iterator"],"mappings":"odA2BA,IAAIA,EAAgBC,EAChBC,EAAaC,EACbC,EAAmBC,EAAUC,YAC7BC,EAAYC,EAAUF,YACtBG,EAAoBC,EAAUJ,YAC9BK,EAAuBC,EAAUN,YA4BrC,SAASO,EAAUC,EAAMC,GACxB,OAAMf,EAAee,GAGhBb,EAAYa,EAAS,cACzBD,EAAKE,SAAWD,EAAQC,UAClBP,EAAmBM,EAAQC,WACzB,IAAIC,UAAW,0EAA4EF,EAAQC,SAAW,MAGlHd,EAAYa,EAAS,YACzBD,EAAKI,OAASH,EAAQG,QAChBT,EAAmBM,EAAQG,SACzB,IAAID,UAAW,wEAA0EF,EAAQG,OAAS,MAG9GhB,EAAYa,EAAS,eACzBD,EAAKK,UAAYJ,EAAQI,WACnBf,EAAkBW,EAAQI,YACxB,IAAIF,UAAW,0EAA4EF,EAAQI,UAAY,MAGnHjB,EAAYa,EAAS,YACzBD,EAAKM,OAASL,EAAQK,QAChBb,EAAWQ,EAAQK,SACjB,IAAIH,UAAW,gEAAkEF,EAAQK,OAAS,MAGtGlB,EAAYa,EAAS,UACzBD,EAAKO,KAAON,EAAQM,MACdV,EAAsBI,EAAQM,OAC5B,IAAIJ,UAAW,yEAA2EF,EAAQM,KAAO,MAG3G,KAhCC,IAAIJ,UAAW,iEAAmEF,EAAU,MCrCrG,IAAIO,EAAcrB,EACdsB,EAAiBpB,EACjBqB,EAAQnB,EACRQ,EAAWL,EAKXiB,EAAK,UACLC,EAAK,UACLC,EAAK,WACLC,EAAK,WACLC,EAAK,WAcT,SAASC,EAASC,EAAGC,EAAGC,GACvB,IAAIC,EAAI,GAAOD,EAAI,GACnB,OAAOD,GAAKP,EAAMC,EAAGF,EAAMU,EAAEH,GAAOJ,EAAGH,EAAM,EAAIU,EAAEH,GAAOH,EAAGJ,EAAM,EAAIU,EAAEH,GAAOF,EAAGL,EAAM,EAAIU,EAAEH,IAuChG,SAASI,EAAkBpB,GAC1B,IAAID,EACAO,EACAe,EACAC,EACAN,EACAO,EASJ,GAPAxB,EAAO,CACNE,UAAa,EACbE,OAAU,IACVC,UAAa,EACbC,OAAU,EACVC,KAAQ,OAEJkB,UAAUC,SACdH,EAAMxB,EAAUC,EAAMC,IAErB,MAAMsB,EAMR,IAHwB,IAAnBvB,EAAKE,WACTF,EAAKE,SAAWF,EAAKI,QAEjBJ,EAAKE,SAAWF,EAAKI,OACzB,MAAM,IAAIuB,WAAY,wFAA0F3B,EAAKE,SAAW,MAEjI,GAAKF,EAAKE,UAAY,EACrB,MAAM,IAAIyB,WAAY,sEAAwE3B,EAAKE,SAAW,MAkB/G,OAhBAe,GAAMjB,EAAKI,OAAOJ,EAAKM,QAAWN,EAAKI,QAC9B,IACRa,GAAKjB,EAAKI,QAEXa,GAAK,EACLO,EAAI,EAIJhB,EADAD,EAAO,GACY,OAAQqB,GAC3BpB,EAAaD,EAAM,SAAUsB,GAGxBpB,GACJD,EAAaD,EAAME,EAAgBqB,GAE7BvB,EAQP,SAASqB,IAER,OADAJ,GAAK,EACAF,GAAOE,EAAIxB,EAAKO,KACb,CACNwB,MAAQ,GAIH,CACNC,OAFDf,GAAKA,EAAE,GAAKjB,EAAKI,QAEDJ,EAAKE,SAAac,EAASC,EAAGjB,EAAKK,UAAWL,EAAKE,UAAa,EAC/E6B,MAAQ,GAWV,SAASF,EAAKG,GAEb,OADAV,GAAM,EACDG,UAAUC,OACP,CACNM,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASD,IACR,OAAOT,EAAkBrB,IC3IxB,IAACiC,EAAW9C","sourcesContent":["import __var_0__ from '@stdlib/assert/is-plain-object';\nimport __var_1__ from '@stdlib/assert/has-own-property';\nimport __var_2__ from '@stdlib/assert/is-positive-number';\nimport __var_3__ from '@stdlib/assert/is-integer';\nimport __var_4__ from '@stdlib/assert/is-positive-integer';\nimport __var_5__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPlainObject = __var_0__;\nvar hasOwnProp = __var_1__;\nvar isPositiveNumber = __var_2__.isPrimitive;\nvar isInteger = __var_3__.isPrimitive;\nvar isPositiveInteger = __var_4__.isPrimitive;\nvar isNonNegativeInteger = __var_5__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration] - pulse duration\n* @param {PositiveNumber} [options.amplitude] - amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t}\n\tif ( hasOwnProp( options, 'duration' ) ) {\n\t\topts.duration = options.duration;\n\t\tif ( !isPositiveInteger( options.duration ) ) {\n\t\t\treturn new TypeError( 'invalid option. `duration` option must be a positive integer. Option: `' + options.duration + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) ) {\n\t\t\treturn new TypeError( 'invalid option. `period` option must be a positive integer. Option: `' + options.period + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'amplitude' ) ) {\n\t\topts.amplitude = options.amplitude;\n\t\tif ( !isPositiveNumber( options.amplitude ) ) {\n\t\t\treturn new TypeError( 'invalid option. `amplitude` option must be a positive number. Option: `' + options.amplitude + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( 'invalid option. `offset` option must be an integer. Option: `' + options.offset + '`.' );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( 'invalid option. `iter` option must be a nonnegative integer. Option: `' + options.iter + '`.' );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default validate;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/symbol/iterator';\nimport __var_2__ from '@stdlib/math/base/special/cospi';\nimport __var_3__ from './validate.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar iteratorSymbol = __var_1__;\nvar cospi = __var_2__;\nvar validate = __var_3__;\n\n\n// VARIABLES //\n\nvar A0 = 0.21557895;\nvar A1 = 0.41663158;\nvar A2 = 0.277263158;\nvar A3 = 0.083578947;\nvar A4 = 0.006947368;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the flat top window function.\n*\n* @private\n* @param {integer} t - value at which to evaluate the function\n* @param {number} A - amplitude\n* @param {integer} tau - period\n* @returns {number} function value\n*/\nfunction flatTop( t, A, tau ) {\n\tvar s = 2.0 / (tau-1);\n\treturn A * (A0 - (A1*cospi(s*t)) + (A2*cospi(2.0*s*t)) - (A3*cospi(3.0*s*t)) + (A4*cospi(4.0*s*t))); // eslint-disable-line max-len\n}\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a flat top pulse waveform.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=100] - number of iterations before a waveform repeats\n* @param {PositiveInteger} [options.duration=options.period] - pulse duration\n* @param {PositiveNumber} [options.amplitude=1.0] - amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} pulse duration must be less than the period\n* @throws {RangeError} pulse duration must be greater than `2`\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterFlatTopPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterFlatTopPulse( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar i;\n\n\topts = {\n\t\t'duration': -1,\n\t\t'period': 100,\n\t\t'amplitude': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.duration === -1 ) {\n\t\topts.duration = opts.period;\n\t}\n\tif ( opts.duration > opts.period ) {\n\t\tthrow new RangeError( 'invalid option. `duration` option must be less than or equal to the period. Option: `' + opts.duration + '`.' );\n\t}\n\tif ( opts.duration <= 2 ) {\n\t\tthrow new RangeError( 'invalid option. `duration` option must be greater than 2. Option: `' + opts.duration + '`.' );\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt = (t+1) % opts.period;\n\t\treturn {\n\t\t\t'value': ( t < opts.duration ) ? flatTop( t, opts.amplitude, opts.duration ) : 0.0,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterFlatTopPulse( opts );\n\t}\n}\n\n\n// EXPORTS //\nexport default iterFlatTopPulse;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a flat top pulse waveform.\n*\n* @module @stdlib/simulate/iter/flat-top-pulse\n*\n* @example\n* var iterFlatTopPulse = require( '@stdlib/simulate/iter/flat-top-pulse' );\n*\n* var opts = {\n*     'period': 10\n* };\n*\n* var iter = iterFlatTopPulse( opts );\n*\n* var v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* v = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\nvar iterator = __var_0__;\n\n\n// EXPORTS //\nexport default iterator;\n"]}