{"version":3,"sources":["@stdlib/plot/base/ctor/lib/defaults.js","@stdlib/plot/base/ctor/lib/view/stdout/index.js","@stdlib/plot/base/ctor/lib/view/view.js","@stdlib/plot/base/ctor/lib/view/index.js","@stdlib/plot/base/ctor/lib/props/auto-render/set.js","@stdlib/plot/base/ctor/lib/props/auto-render/get.js","@stdlib/plot/base/ctor/lib/props/auto-view/set.js","@stdlib/plot/base/ctor/lib/props/auto-view/get.js","@stdlib/plot/base/ctor/lib/props/description/set.js","@stdlib/plot/base/ctor/lib/props/description/get.js","@stdlib/plot/base/ctor/lib/props/engine/set.js","@stdlib/plot/base/ctor/lib/props/engine/get.js","@stdlib/plot/base/ctor/lib/props/graph-height/get.js","@stdlib/plot/base/ctor/lib/props/graph-width/get.js","@stdlib/plot/base/ctor/lib/props/height/set.js","@stdlib/plot/base/ctor/lib/props/height/get.js","@stdlib/plot/base/ctor/lib/props/labels/set.js","@stdlib/plot/base/ctor/lib/props/labels/get.js","@stdlib/plot/base/ctor/lib/props/line-opacity/set.js","@stdlib/plot/base/ctor/lib/props/line-opacity/get.js","@stdlib/plot/base/ctor/lib/props/line-style/set.js","@stdlib/plot/base/ctor/lib/props/line-style/get.js","@stdlib/plot/base/ctor/lib/props/line-width/set.js","@stdlib/plot/base/ctor/lib/props/line-width/get.js","@stdlib/plot/base/ctor/lib/props/padding-bottom/set.js","@stdlib/plot/base/ctor/lib/props/padding-bottom/get.js","@stdlib/plot/base/ctor/lib/props/padding-left/set.js","@stdlib/plot/base/ctor/lib/props/padding-left/get.js","@stdlib/plot/base/ctor/lib/props/padding-right/set.js","@stdlib/plot/base/ctor/lib/props/padding-right/get.js","@stdlib/plot/base/ctor/lib/props/padding-top/set.js","@stdlib/plot/base/ctor/lib/props/padding-top/get.js","@stdlib/plot/base/ctor/lib/render/index.js","@stdlib/plot/base/ctor/lib/render/stub.js","@stdlib/plot/base/ctor/lib/props/render-format/set.js","@stdlib/plot/base/ctor/lib/props/render-format/get.js","@stdlib/plot/base/ctor/lib/props/title/set.js","@stdlib/plot/base/ctor/lib/props/title/get.js","@stdlib/plot/base/ctor/lib/props/viewer/set.js","@stdlib/plot/base/ctor/lib/props/viewer/get.js","@stdlib/plot/base/ctor/lib/props/width/set.js","@stdlib/plot/base/ctor/lib/props/width/get.js","@stdlib/plot/base/ctor/lib/props/x-axis-orient/set.js","@stdlib/plot/base/ctor/lib/props/x-axis-orient/get.js","@stdlib/plot/base/ctor/lib/props/x-domain/get.js","@stdlib/plot/base/ctor/lib/props/x-label/set.js","@stdlib/plot/base/ctor/lib/props/x-label/get.js","@stdlib/plot/base/ctor/lib/props/x-num-ticks/set.js","@stdlib/plot/base/ctor/lib/props/x-num-ticks/get.js","@stdlib/plot/base/ctor/lib/props/x-pos/get.js","@stdlib/plot/base/ctor/lib/props/x-range/get.js","@stdlib/plot/base/ctor/lib/props/x-tick-format/set.js","@stdlib/plot/base/ctor/lib/props/x-tick-format/get.js","@stdlib/plot/base/ctor/lib/props/y-axis-orient/set.js","@stdlib/plot/base/ctor/lib/props/y-axis-orient/get.js","@stdlib/plot/base/ctor/lib/props/y-domain/get.js","@stdlib/plot/base/ctor/lib/props/y-label/set.js","@stdlib/plot/base/ctor/lib/props/y-label/get.js","@stdlib/plot/base/ctor/lib/props/y-num-ticks/set.js","@stdlib/plot/base/ctor/lib/props/y-num-ticks/get.js","@stdlib/plot/base/ctor/lib/props/y-pos/get.js","@stdlib/plot/base/ctor/lib/props/y-range/get.js","@stdlib/plot/base/ctor/lib/props/y-tick-format/set.js","@stdlib/plot/base/ctor/lib/props/y-tick-format/get.js","@stdlib/plot/base/ctor/lib/main.js","@stdlib/plot/base/ctor/lib/index.js"],"names":["isNodeREPL","__var_0__","defaults","isREPL","o","autoRender","autoView","description","engine","height","labels","lineOpacity","lineStyle","lineWidth","paddingBottom","paddingLeft","paddingRight","paddingTop","renderFormat","title","viewer","width","xAxisOrient","xLabel","xMax","xMin","xNumTicks","xTickFormat","yAxisOrient","yLabel","yMax","yMin","yNumTicks","yTickFormat","view","plot","console","log","JSON","stringify","stdout","vtree","Error","logger","createView","__var_1__","debug","tmp","this","arguments","length","render","isBoolean","isPrimitive","set","bool","TypeError","_autoRender","emit","get","_autoView","isString","str","_description","contains","ENGINES","__var_2__","join","_engine","_height","_paddingTop","_paddingBottom","_width","_paddingLeft","_paddingRight","isPositiveNumber","isEmptyArray","isStringArray","primitives","_labels","slice","isNumber","isNumberArray","v","i","isNum","RangeError","_lineOpacity","indexOf","__var_3__","LINESTYLES","__var_4__","isStr","_lineStyle","isNonNegativeInteger","isNonNegativeIntegerArray","isInt","_lineWidth","padding","format","out","fmt","_render","FORMATS","_renderFormat","_title","VIEWERS","_viewer","ORIENTATIONS","orientation","_xAxisOrient","label","_xLabel","isNull","ticks","_xNumTicks","scale","xScale","d","px","graphWidth","_xTickFormat","_xScale","timeFormat","_yAxisOrient","_yLabel","_yNumTicks","yScale","graphHeight","_yTickFormat","EventEmitter","objectKeys","inherit","copy","mergeFcn","__var_5__","factory","defineProperty","__var_6__","setReadOnly","__var_7__","isObject","__var_8__","minstd","__var_9__","__var_10__","__var_11__","setAutoRender","__var_12__","getAutoRender","__var_13__","setAutoView","__var_14__","getAutoView","__var_15__","setDescription","__var_16__","getDescription","__var_17__","setEngine","__var_18__","getEngine","__var_19__","getGraphHeight","__var_20__","getGraphWidth","__var_21__","setHeight","__var_22__","getHeight","__var_23__","setLabels","__var_24__","getLabels","__var_25__","setLineOpacity","__var_26__","getLineOpacity","__var_27__","setLineStyle","__var_28__","getLineStyle","__var_29__","setLineWidth","__var_30__","getLineWidth","__var_31__","setPaddingBottom","__var_32__","getPaddingBottom","__var_33__","setPaddingLeft","__var_34__","getPaddingLeft","__var_35__","setPaddingRight","__var_36__","getPaddingRight","__var_37__","setPaddingTop","__var_38__","getPaddingTop","__var_39__","__var_40__","stub","__var_41__","setRenderFormat","__var_42__","getRenderFormat","__var_43__","setTitle","__var_44__","getTitle","__var_45__","setViewer","__var_46__","getViewer","__var_47__","setWidth","__var_48__","getWidth","__var_49__","setXAxisOrient","__var_50__","getXAxisOrient","__var_51__","getXDomain","__var_52__","setXLabel","__var_53__","getXLabel","__var_54__","setXNumTicks","__var_55__","getXNumTicks","__var_56__","getXPos","__var_57__","getXRange","__var_58__","setXTickFormat","__var_59__","getXTickFormat","__var_60__","setYAxisOrient","__var_61__","getYAxisOrient","__var_62__","getYDomain","__var_63__","setYLabel","__var_64__","getYLabel","__var_65__","setYNumTicks","__var_66__","getYNumTicks","__var_67__","getYPos","__var_68__","getYRange","__var_69__","setYTickFormat","__var_70__","getYTickFormat","__var_71__","PRIVATE_PROPS","merge","extend","Plot","options","nargs","keys","self","opts","key","call","configurable","enumerable","writable","value","toString","$","on","onChange","onRender","prototype"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/assert/is-node-repl';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNodeREPL = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\tvar isREPL;\n\tvar o;\n\n\tisREPL = isNodeREPL();\n\to = {};\n\n\t// Boolean indicating whether to re-render on a change event:\n\to.autoRender = false;\n\n\t// Boolean indicating whether to generate an updated view on a render event:\n\to.autoView = false;\n\n\t// Plot description:\n\to.description = '';\n\n\t// Rendering engine:\n\to.engine = 'svg';\n\n\t// Plot height:\n\to.height = 400; // px\n\n\t// Data labels:\n\to.labels = [];\n\n\t// Line opacity:\n\to.lineOpacity = 0.9; // [0,1]\n\n\t// Line style:\n\to.lineStyle = '-';\n\n\t// Data line width(s):\n\to.lineWidth = 2; // px\n\n\t// FIXME: padding props depend on orientation (may require using `null` to flag)\n\n\t// Bottom padding:\n\to.paddingBottom = 80; // px\n\n\t// Left padding:\n\to.paddingLeft = 90; // px\n\n\t// Right padding:\n\to.paddingRight = 20; // px\n\n\t// Top padding:\n\to.paddingTop = 80; // px\n\n\t// Render format:\n\to.renderFormat = 'vdom';\n\n\t// Plot title:\n\to.title = '';\n\n\t// Plot viewer:\n\tif ( isREPL ) {\n\t\to.viewer = 'window';\n\t} else {\n\t\to.viewer = 'none';\n\t}\n\t// Plot width:\n\to.width = 400; // px\n\n\t// x-axis orientation:\n\to.xAxisOrient = 'bottom';\n\n\t// x-axis label:\n\to.xLabel = 'x';\n\n\t// Maximum value of x-axis domain:\n\to.xMax = null;\n\n\t// Minimum value of x-axis domain:\n\to.xMin = null;\n\n\t// Number of x-axis tick marks:\n\to.xNumTicks = 5;\n\n\t// x-axis tick format:\n\to.xTickFormat = null;\n\n\t// y-axis orientation:\n\to.yAxisOrient = 'left';\n\n\t// y-axis label:\n\to.yLabel = 'y';\n\n\t// Maximum value of y-axis domain:\n\to.yMax = null;\n\n\t// Minimum value of y-axis domain:\n\to.yMin = null;\n\n\t// Number of y-axis tick marks:\n\to.yNumTicks = 5;\n\n\t// y-axis tick format:\n\to.yTickFormat = null;\n\n\treturn o;\n}\n\n\n// EXPORTS //\nexport default defaults;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Writes a plot (rendered as a virtual DOM tree) to `stdout`.\n*\n* @private\n* @param {VTree} plot - virtual tree\n*/\nfunction view( plot ) {\n\tconsole.log( JSON.stringify( plot ) );\n}\n\n\n// EXPORTS //\nexport default view;\n","import __var_0__ from './stdout/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar stdout = __var_0__;\n\n\n// MAIN //\n\n/**\n* Generates a plot view.\n*\n* @private\n* @param {Plot} plot - plot context\n* @param {string} viewer - plot viewer\n* @param {VTree} vtree - virtual tree\n* @throws {Error} must specify a supported viewer\n* @returns {void}\n*/\nfunction view( plot, viewer, vtree ) {\n\tif ( viewer === 'none' ) {\n\t\treturn;\n\t}\n\tif ( viewer === 'stdout' ) {\n\t\treturn stdout( vtree );\n\t}\n\tif ( viewer === 'browser' ) {\n\t\tthrow new Error( 'invalid argument. Must provide a supported viewer. Value: `'+viewer+'`.' );\n\t}\n\tif ( viewer === 'terminal' ) {\n\t\t// TODO: ASCII\n\t\treturn;\n\t}\n\tthrow new Error( 'invalid argument. Must provide a supported viewer. Value: `'+viewer+'`.' );\n}\n\n\n// EXPORTS //\nexport default view;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './view.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar createView = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:view' );\n\n\n// MAIN //\n\n/**\n* Generates a plot view.\n*\n* @private\n* @param {string} viewer - plot viewer\n*/\nfunction view( viewer ) {\n\t/* eslint-disable no-invalid-this */\n\tvar tmp = this.viewer;\n\tif ( arguments.length ) {\n\t\t// Temporarily set the viewer:\n\t\tthis.viewer = viewer;\n\t}\n\tdebug( 'Viewer: %s.', this.viewer );\n\tdebug( 'Generating view...' );\n\tcreateView( this, this.viewer, this.render() );\n\tif ( arguments.length ) {\n\t\t// Restore the viewer:\n\t\tthis.viewer = tmp;\n\t}\n}\n\n\n// EXPORTS //\nexport default view;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:auto-render' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tif ( bool !== this._autoRender ) {\n\t\tdebug( 'Current value: %s.', this._autoRender );\n\n\t\tthis._autoRender = bool;\n\t\tdebug( 'New Value: %s.', this._autoRender );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:auto-view' );\n\n\n// MAIN //\n\n/**\n* Sets the viewing mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to generate an updated view on a render event\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoView` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tif ( bool !== this._autoView ) {\n\t\tdebug( 'Current value: %s.', this._autoView );\n\n\t\tthis._autoView = bool;\n\t\tdebug( 'New Value: %s.', this._autoView );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the viewing mode.\n*\n* @private\n* @returns {boolean} viewing mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoView;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:description' );\n\n\n// MAIN //\n\n/**\n* Sets the description.\n*\n* @private\n* @param {string} str - description\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( str ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid value. `description` must be a string. Value: `' + str + '.`' );\n\t}\n\tif ( str !== this._description ) {\n\t\tdebug( 'Current value: %s.', this._description );\n\n\t\tthis._description = str;\n\t\tdebug( 'New value: %s.', this._description );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the description.\n*\n* @private\n* @returns {string} description\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._description;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/contains';\nimport __var_2__ from './engines.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar contains = __var_1__;\nvar ENGINES = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:engine' );\n\n\n// MAIN //\n\n/**\n* Sets the engine.\n*\n* @private\n* @param {string} engine - engine\n* @throws {TypeError} must be a recognized engine\n*/\nfunction set( engine ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !contains( ENGINES, engine ) ) {\n\t\tthrow new TypeError( 'invalid value. `engine` must be one of `[' + ENGINES.join( ', ' ) + ']`. Value: `' + engine + '.`' );\n\t}\n\tif ( engine !== this._engine ) {\n\t\tdebug( 'Current value: %s.', this._engine );\n\n\t\tthis._engine = engine;\n\t\tdebug( 'New value: %s.', this._engine );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the render engine.\n*\n* @private\n* @returns {string} engine\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._engine;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the expected graph height.\n*\n* @private\n* @returns {number} graph height\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._height - this._paddingTop - this._paddingBottom;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the expected graph width.\n*\n* @private\n* @returns {number} graph width\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._width - this._paddingLeft - this._paddingRight;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isPositiveNumber = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:height' );\n\n\n// MAIN //\n\n/**\n* Sets the height.\n*\n* @private\n* @param {PositiveNumber} height - height\n* @throws {TypeError} must be a positive number\n*/\nfunction set( height ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isPositiveNumber( height ) ) {\n\t\tthrow new TypeError( 'invalid value. `height` must be a positive number. Value: `' + height + '.`' );\n\t}\n\tif ( height !== this._height ) {\n\t\tdebug( 'Current value: %d.', this._height );\n\n\t\tthis._height = height;\n\t\tdebug( 'New Value: %d.', this._height );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the height.\n*\n* @private\n* @returns {number} height\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._height;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-empty-array';\nimport __var_2__ from '@stdlib/assert/is-string-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isEmptyArray = __var_1__;\nvar isStringArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:labels' );\n\n\n// MAIN //\n\n/**\n* Sets the data labels.\n*\n* @private\n* @param {(StringArray|EmptyArray)} labels - data labels\n* @throws {TypeError} must be either an array of strings or an empty array\n*/\nfunction set( labels ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isEmptyArray( labels ) && !isStringArray( labels ) ) {\n\t\tthrow new TypeError( 'invalid value. `labels` must be either an array of strings or an empty array. Value: `' + labels + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._labels ) );\n\n\tthis._labels = labels.slice();\n\tdebug( 'New Value: %s.', JSON.stringify( this._labels ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data labels.\n*\n* @private\n* @returns {(EmptyArray|StringArray)} labels\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._labels.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-number-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\nvar isNumberArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:line-opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the line opacity.\n*\n* @private\n* @param {(number|NumberArray)} v - opacity\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isNum = isNumber( v );\n\tvar i;\n\tif ( !isNum && !isNumberArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `lineOpacity` must be a number or number array. Value: `' + v + '.`' );\n\t}\n\tif ( isNum ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( v[ i ] < 0.0 || v[ i ] > 1.0 ) {\n\t\t\tthrow new RangeError( 'invalid value. A `lineOpacity` must be a number on the interval `[0,1]`. Value: `' + v[i] + '`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._lineOpacity ) );\n\n\tthis._lineOpacity = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._lineOpacity ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the line opacity.\n*\n* @private\n* @returns {NumberArray} line opacity\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._lineOpacity.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-string-array';\nimport __var_3__ from '@stdlib/utils/index-of';\nimport __var_4__ from './line_styles.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isStringArray = __var_2__.primitives;\nvar indexOf = __var_3__;\nvar LINESTYLES = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:line-style' );\n\n\n// MAIN //\n\n/**\n* Sets the line style(s).\n*\n* @private\n* @param {(string|StringArray)} v - line style(s)\n* @throws {TypeError} must be a string or string array\n* @throws {Error} must be a supported line style\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isStr = isString( v );\n\tvar i;\n\tif ( !isStr && !isStringArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `lineStyle` must be a string or a string array. Value: `'+v+'.`' );\n\t}\n\tif ( isStr ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( indexOf( LINESTYLES, v[i] ) === -1 ) {\n\t\t\tthrow new Error( 'invalid value. Unsupported/unrecognized line style. Must be one of `['+LINESTYLES.join(',')+']`. Value: `'+v[i]+'`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._lineStyle ) );\n\n\tthis._lineStyle = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._lineStyle ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the line style(s).\n*\n* @private\n* @returns {StringArray} line style(s)\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._lineStyle.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\nvar isNonNegativeIntegerArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:line-width' );\n\n\n// MAIN //\n\n/**\n* Sets the line width(s).\n*\n* @private\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} v - width\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isInt = isNonNegativeInteger( v );\n\tif ( !isInt && !isNonNegativeIntegerArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `lineWidth` must be a nonnegative integer or nonnegative integer array. Value: `' + v + '.`' );\n\t}\n\tif ( isInt ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._lineWidth ) );\n\n\tthis._lineWidth = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._lineWidth ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the line width.\n*\n* @private\n* @returns {Array<NonNegativeInteger>} line width(s)\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._lineWidth.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:padding-bottom' );\n\n\n// MAIN //\n\n/**\n* Sets the bottom padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingBottom` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingBottom ) {\n\t\tdebug( 'Current value: %d.', this._paddingBottom );\n\n\t\tthis._paddingBottom = padding;\n\t\tdebug( 'New value: %d.', this._paddingBottom );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the bottom padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingBottom;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:padding-left' );\n\n\n// MAIN //\n\n/**\n* Sets the left padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingLeft` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingLeft ) {\n\t\tdebug( 'Current value: %d.', this._paddingLeft );\n\n\t\tthis._paddingLeft = padding;\n\t\tdebug( 'New value: %d.', this._paddingLeft );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the left padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingLeft;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:padding-right' );\n\n\n// MAIN //\n\n/**\n* Sets the right padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingRight` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingRight ) {\n\t\tdebug( 'Current value: %d.', this._paddingRight );\n\n\t\tthis._paddingRight = padding;\n\t\tdebug( 'New value: %d.', this._paddingRight );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the right padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingRight;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:padding-top' );\n\n\n// MAIN //\n\n/**\n* Sets the top padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingTop` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingTop ) {\n\t\tdebug( 'Current value: %d.', this._paddingTop );\n\n\t\tthis._paddingTop = padding;\n\t\tdebug( 'New value: %d.', this._paddingTop );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the top padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingTop;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:render' );\n\n\n// MAIN //\n\n/**\n* Renders a plot.\n*\n* @private\n* @param {string} [format] - render format\n* @returns {(VTree|string)} virtual tree or a string\n*/\nfunction render( format ) {\n\t/* eslint-disable no-invalid-this */\n\tvar out;\n\tvar tmp;\n\tvar fmt;\n\n\ttmp = this.renderFormat;\n\tif ( arguments.length ) {\n\t\t// Temporarily set the render format:\n\t\tthis.renderFormat = format;\n\t\tfmt = format;\n\t} else {\n\t\tfmt = tmp;\n\t}\n\tdebug( 'Render format: %s.', this.renderFormat );\n\n\tdebug( 'Rendering...' );\n\tout = this._render( fmt );\n\tthis.emit( 'render', out );\n\n\tif ( arguments.length ) {\n\t\t// Restore the render format:\n\t\tthis.renderFormat = tmp;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Placeholder `render` function.\n*\n* @private\n* @param {string} fmt - render format\n* @throws {Error} must be implemented by descendant classes\n*/\nfunction render() {\n\tthrow new Error( 'method not implemented.' );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './formats.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar FORMATS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:render-format' );\n\n\n// MAIN //\n\n/**\n* Sets the render format.\n*\n* @private\n* @param {string} format - format\n* @throws {TypeError} must be a recognized render format\n*/\nfunction set( format ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( FORMATS, format ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. Unrecognized/unsupported `format`. Must be one of `[' + FORMATS.join( ', ' ) + ']`. Value: `' + format + '.`' );\n\t}\n\tif ( format !== this._renderFormat ) {\n\t\tdebug( 'Current value: %s.', this._renderFormat );\n\n\t\tthis._renderFormat = format;\n\t\tdebug( 'New value: %s.', this._renderFormat );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the render format.\n*\n* @private\n* @returns {string} format\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._renderFormat;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:title' );\n\n\n// MAIN //\n\n/**\n* Sets the title.\n*\n* @private\n* @param {string} str - title\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( str ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid value. `title` must be a string. Value: `' + str + '.`' );\n\t}\n\tif ( str !== this._title ) {\n\t\tdebug( 'Current value: %s.', this._title );\n\n\t\tthis._title = str;\n\t\tdebug( 'New value: %s.', this._title );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the title.\n*\n* @private\n* @returns {string} title\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._title;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './viewers.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar VIEWERS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:viewer' );\n\n\n// MAIN //\n\n/**\n* Sets the viewer.\n*\n* @private\n* @param {string} viewer - viewer\n* @throws {TypeError} must be a recognized viewer\n*/\nfunction set( viewer ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( VIEWERS, viewer ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. Unrecognized/unsupported `viewer`. Value: `' + viewer + '.`' );\n\t}\n\tif ( viewer !== this._viewer ) {\n\t\tdebug( 'Current value: %s.', this._viewer );\n\n\t\tthis._viewer = viewer;\n\t\tdebug( 'New value: %s.', this._viewer );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the plot viewer.\n*\n* @private\n* @returns {string} viewer\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._viewer;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isPositiveNumber = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:width' );\n\n\n// MAIN //\n\n/**\n* Sets the width.\n*\n* @private\n* @param {PositiveNumber} width - width\n* @throws {TypeError} must be a positive number\n*/\nfunction set( width ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isPositiveNumber( width ) ) {\n\t\tthrow new TypeError( 'invalid value. `width` must be a positive number. Value: `' + width + '.`' );\n\t}\n\tif ( width !== this._width ) {\n\t\tdebug( 'Current value: %d.', this._width );\n\n\t\tthis._width = width;\n\t\tdebug( 'New value: %d.', this._width );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the width.\n*\n* @private\n* @returns {number} width\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._width;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar ORIENTATIONS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:x-axis-orient' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis orientation.\n*\n* @private\n* @param {string} orientation - axis orientation\n* @throws {TypeError} must be either `'bottom'` or `'top'`\n*/\nfunction set( orientation ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( ORIENTATIONS, orientation ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. `xAxisOrient` must be one of `[' + ORIENTATIONS.join( ', ' ) + ']`. Value: `' + orientation + '.`' );\n\t}\n\tif ( orientation !== this._xAxisOrient ) {\n\t\tdebug( 'Current value: %s.', this._xAxisOrient );\n\n\t\tthis._xAxisOrient = orientation;\n\t\tdebug( 'New value: %s.', this._xAxisOrient );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis orientation.\n*\n* @private\n* @returns {string} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xAxisOrient;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis domain.\n*\n* @private\n* @returns {Array} domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ this.xMin, this.xMax ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:x-label' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis label.\n*\n* @private\n* @param {string} label - axis label\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( label ) ) {\n\t\tthrow new TypeError( 'invalid value. `xLabel` must be a string. Value: `' + label + '.`' );\n\t}\n\tif ( label !== this._xLabel ) {\n\t\tdebug( 'Current value: %s.', this._xLabel );\n\n\t\tthis._xLabel = label;\n\t\tdebug( 'New value: %s.', this._xLabel );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis label.\n*\n* @private\n* @returns {string} label\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xLabel;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNonNegativeInteger = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:x-num-ticks' );\n\n\n// MAIN //\n\n/**\n* Sets the number of x-axis tick marks.\n*\n* @private\n* @param {(NonNegativeInteger|null)} ticks - number of ticks\n* @throws {TypeError} must be a nonnegative integer or null\n*/\nfunction set( ticks ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( ticks ) && !isNonNegativeInteger( ticks ) ) {\n\t\tthrow new TypeError( 'invalid value. `xNumTicks` must be a nonnegative integer or null. Value: `' + ticks + '.`' );\n\t}\n\tif ( ticks !== this._xNumTicks ) {\n\t\tdebug( 'Current value: %d.', this._xNumTicks );\n\n\t\tthis._xNumTicks = ticks;\n\t\tdebug( 'New value: %d.', this._xNumTicks );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the number of x-axis tick marks.\n*\n* @private\n* @returns {(NonNegativeInteger|null)} number of ticks\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xNumTicks;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:x-pos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to x-axis coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.xScale;\n\treturn xPos;\n\n\t/**\n\t* Maps a value to a x-axis coordinate value.\n\t*\n\t* @private\n\t* @param {number} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction xPos( d ) {\n\t\tvar px = scale( d );\n\t\tdebug( 'Value: %d => Pixel: %d.', d, px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis range.\n*\n* @private\n* @returns {NumberArray} range\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ 0, this.graphWidth ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isString = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:x-tick-format' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis tick format.\n*\n* @private\n* @param {(string|null)} fmt - axis tick format\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( fmt ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( fmt ) && !isString( fmt ) ) {\n\t\tthrow new TypeError( 'invalid value. `xTickFormat` must be a string or null. Value: `' + fmt + '.`' );\n\t}\n\tif ( fmt !== this._xTickFormat ) {\n\t\tdebug( 'Current value: %s.', this._xTickFormat );\n\n\t\tthis._xTickFormat = fmt;\n\t\tdebug( 'New value: %s.', this._xTickFormat );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {format as format} from '@stdlib/vendor/d3-format.js'; // TODO: remove\nimport {timeFormat as timeFormat} from '@stdlib/vendor/d3-time-format.js'; // TODO: remove\nvar isNull = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns the x-axis tick format.\n*\n* @private\n* @returns {(Function|null)} format function or null\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tif ( isNull( this._xTickFormat ) ) {\n\t\treturn this._xTickFormat;\n\t}\n\tif ( this._xScale === 'time' ) {\n\t\treturn timeFormat( this._xTickFormat );\n\t}\n\treturn format( this._xTickFormat );\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar ORIENTATIONS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:y-axis-orient' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis orientation.\n*\n* @private\n* @param {string} orientation - axis orientation\n* @throws {TypeError} must be either `'left'` or `'right'`\n*/\nfunction set( orientation ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( ORIENTATIONS, orientation ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. `yAxisOrient` must be one of `[' + ORIENTATIONS.join( ', ' ) + ']`. Value: `' + orientation + '.`' );\n\t}\n\tif ( orientation !== this._yAxisOrient ) {\n\t\tdebug( 'Current value: %s.', this._yAxisOrient );\n\n\t\tthis._yAxisOrient = orientation;\n\t\tdebug( 'New value: %s.', this._yAxisOrient );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis orientation.\n*\n* @private\n* @returns {string} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yAxisOrient;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis domain.\n*\n* @private\n* @returns {Array} domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ this.yMin, this.yMax ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:y-label' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis label.\n*\n* @private\n* @param {string} label - axis label\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( label ) ) {\n\t\tthrow new TypeError( 'invalid value. `yLabel` must be a string. Value: `' + label + '.`' );\n\t}\n\tif ( label !== this._yLabel ) {\n\t\tdebug( 'Current value: %s.', this._yLabel );\n\n\t\tthis._yLabel = label;\n\t\tdebug( 'New value: %s.', this._yLabel );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis label.\n*\n* @private\n* @returns {string} label\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yLabel;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNonNegativeInteger = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:y-num-ticks' );\n\n\n// MAIN //\n\n/**\n* Sets the number of y-axis tick marks.\n*\n* @private\n* @param {(NonNegativeInteger|null)} ticks - number of ticks\n* @throws {TypeError} must be a nonnegative integer or null\n*/\nfunction set( ticks ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( ticks ) && !isNonNegativeInteger( ticks ) ) {\n\t\tthrow new TypeError( 'invalid value. `yNumTicks` must be a nonnegative integer or null. Value: `' + ticks + '.`' );\n\t}\n\tif ( ticks !== this._yNumTicks ) {\n\t\tdebug( 'Current value: %d.', this._yNumTicks );\n\n\t\tthis._yNumTicks = ticks;\n\t\tdebug( 'New value: %d.', this._yNumTicks );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the number of y-axis tick marks.\n*\n* @private\n* @returns {(NonNegativeInteger|null)} number of ticks\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yNumTicks;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:y-pos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to y-axis coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.yScale;\n\treturn yPos;\n\n\t/**\n\t* Maps a value to a y-axis coordinate value.\n\t*\n\t* @private\n\t* @param {number} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction yPos( d ) {\n\t\tvar px = scale( d );\n\t\tdebug( 'Value: %d => Pixel: %d.', d, px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis range.\n*\n* @private\n* @returns {NumberArray} range\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ this.graphHeight, 0 ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isString = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:set:y-tick-format' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis tick format.\n*\n* @private\n* @param {(string|null)} fmt - axis tick format\n* @throws {TypeError} must be a string primitive or null\n*/\nfunction set( fmt ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( fmt ) && !isString( fmt ) ) {\n\t\tthrow new TypeError( 'invalid value. `yTickFormat` must be a string or null. Value: `' + fmt + '.`' );\n\t}\n\tif ( fmt !== this._yTickFormat ) {\n\t\tdebug( 'Current value: %s.', this._yTickFormat );\n\n\t\tthis._yTickFormat = fmt;\n\t\tdebug( 'New value: %s.', this._yTickFormat );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {format as format} from '@stdlib/vendor/d3-format.js'; // TODO: remove\nvar isNull = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns the y-axis tick format.\n*\n* @private\n* @returns {(Function|null)} format function or null\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tif ( isNull( this._yTickFormat ) ) {\n\t\treturn this._yTickFormat;\n\t}\n\treturn format( this._yTickFormat );\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/keys';\nimport __var_3__ from '@stdlib/utils/inherit';\nimport __var_4__ from '@stdlib/utils/copy';\nimport __var_5__ from '@stdlib/utils/merge';\nimport __var_6__ from '@stdlib/utils/define-property';\nimport __var_7__ from '@stdlib/utils/define-read-only-property';\nimport __var_8__ from '@stdlib/assert/is-plain-object';\nimport __var_9__ from '@stdlib/random/base/minstd';\nimport __var_10__ from './defaults.js';\nimport __var_11__ from './view/index.js';\nimport __var_12__ from './props/auto-render/set.js';\nimport __var_13__ from './props/auto-render/get.js';\nimport __var_14__ from './props/auto-view/set.js';\nimport __var_15__ from './props/auto-view/get.js';\nimport __var_16__ from './props/description/set.js';\nimport __var_17__ from './props/description/get.js';\nimport __var_18__ from './props/engine/set.js';\nimport __var_19__ from './props/engine/get.js';\nimport __var_20__ from './props/graph-height/get.js';\nimport __var_21__ from './props/graph-width/get.js';\nimport __var_22__ from './props/height/set.js';\nimport __var_23__ from './props/height/get.js';\nimport __var_24__ from './props/labels/set.js';\nimport __var_25__ from './props/labels/get.js';\nimport __var_26__ from './props/line-opacity/set.js';\nimport __var_27__ from './props/line-opacity/get.js';\nimport __var_28__ from './props/line-style/set.js';\nimport __var_29__ from './props/line-style/get.js';\nimport __var_30__ from './props/line-width/set.js';\nimport __var_31__ from './props/line-width/get.js';\nimport __var_32__ from './props/padding-bottom/set.js';\nimport __var_33__ from './props/padding-bottom/get.js';\nimport __var_34__ from './props/padding-left/set.js';\nimport __var_35__ from './props/padding-left/get.js';\nimport __var_36__ from './props/padding-right/set.js';\nimport __var_37__ from './props/padding-right/get.js';\nimport __var_38__ from './props/padding-top/set.js';\nimport __var_39__ from './props/padding-top/get.js';\nimport __var_40__ from './render/index.js';\nimport __var_41__ from './render/stub.js';\nimport __var_42__ from './props/render-format/set.js';\nimport __var_43__ from './props/render-format/get.js';\nimport __var_44__ from './props/title/set.js';\nimport __var_45__ from './props/title/get.js';\nimport __var_46__ from './props/viewer/set.js';\nimport __var_47__ from './props/viewer/get.js';\nimport __var_48__ from './props/width/set.js';\nimport __var_49__ from './props/width/get.js';\nimport __var_50__ from './props/x-axis-orient/set.js';\nimport __var_51__ from './props/x-axis-orient/get.js';\nimport __var_52__ from './props/x-domain/get.js';\nimport __var_53__ from './props/x-label/set.js';\nimport __var_54__ from './props/x-label/get.js';\nimport __var_55__ from './props/x-num-ticks/set.js';\nimport __var_56__ from './props/x-num-ticks/get.js';\nimport __var_57__ from './props/x-pos/get.js';\nimport __var_58__ from './props/x-range/get.js';\nimport __var_59__ from './props/x-tick-format/set.js';\nimport __var_60__ from './props/x-tick-format/get.js';\nimport __var_61__ from './props/y-axis-orient/set.js';\nimport __var_62__ from './props/y-axis-orient/get.js';\nimport __var_63__ from './props/y-domain/get.js';\nimport __var_64__ from './props/y-label/set.js';\nimport __var_65__ from './props/y-label/get.js';\nimport __var_66__ from './props/y-num-ticks/set.js';\nimport __var_67__ from './props/y-num-ticks/get.js';\nimport __var_68__ from './props/y-pos/get.js';\nimport __var_69__ from './props/y-range/get.js';\nimport __var_70__ from './props/y-tick-format/set.js';\nimport __var_71__ from './props/y-tick-format/get.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nvar objectKeys = __var_2__;\nvar inherit = __var_3__;\nvar copy = __var_4__;\nvar mergeFcn = __var_5__.factory;\nvar defineProperty = __var_6__;\nvar setReadOnly = __var_7__;\nvar isObject = __var_8__;\nvar minstd = __var_9__;\nvar defaults = __var_10__;\nvar view = __var_11__;\nvar setAutoRender = __var_12__;\nvar getAutoRender = __var_13__;\nvar setAutoView = __var_14__;\nvar getAutoView = __var_15__;\nvar setDescription = __var_16__;\nvar getDescription = __var_17__;\nvar setEngine = __var_18__;\nvar getEngine = __var_19__;\nvar getGraphHeight = __var_20__;\nvar getGraphWidth = __var_21__;\nvar setHeight = __var_22__;\nvar getHeight = __var_23__;\nvar setLabels = __var_24__;\nvar getLabels = __var_25__;\nvar setLineOpacity = __var_26__;\nvar getLineOpacity = __var_27__;\nvar setLineStyle = __var_28__;\nvar getLineStyle = __var_29__;\nvar setLineWidth = __var_30__;\nvar getLineWidth = __var_31__;\nvar setPaddingBottom = __var_32__;\nvar getPaddingBottom = __var_33__;\nvar setPaddingLeft = __var_34__;\nvar getPaddingLeft = __var_35__;\nvar setPaddingRight = __var_36__;\nvar getPaddingRight = __var_37__;\nvar setPaddingTop = __var_38__;\nvar getPaddingTop = __var_39__;\nvar render = __var_40__;\nvar stub = __var_41__;\nvar setRenderFormat = __var_42__;\nvar getRenderFormat = __var_43__;\nvar setTitle = __var_44__;\nvar getTitle = __var_45__;\nvar setViewer = __var_46__;\nvar getViewer = __var_47__;\nvar setWidth = __var_48__;\nvar getWidth = __var_49__;\nvar setXAxisOrient = __var_50__;\nvar getXAxisOrient = __var_51__;\nvar getXDomain = __var_52__;\nvar setXLabel = __var_53__;\nvar getXLabel = __var_54__;\nvar setXNumTicks = __var_55__;\nvar getXNumTicks = __var_56__;\nvar getXPos = __var_57__;\nvar getXRange = __var_58__;\nvar setXTickFormat = __var_59__;\nvar getXTickFormat = __var_60__;\nvar setYAxisOrient = __var_61__;\nvar getYAxisOrient = __var_62__;\nvar getYDomain = __var_63__;\nvar setYLabel = __var_64__;\nvar getYLabel = __var_65__;\nvar setYNumTicks = __var_66__;\nvar getYNumTicks = __var_67__;\nvar getYPos = __var_68__;\nvar getYRange = __var_69__;\nvar setYTickFormat = __var_70__;\nvar getYTickFormat = __var_71__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:base:main' );\nvar PRIVATE_PROPS = [\n\t'_autoRender',\n\t'_autoView',\n\t'_description',\n\t'_engine',\n\t'_height',\n\t'_isDefined',\n\t'_labels',\n\t'_lineOpacity',\n\t'_lineStyle',\n\t'_lineWidth',\n\t'_paddingBottom',\n\t'_paddingLeft',\n\t'_paddingRight',\n\t'_paddingTop',\n\t'_renderFormat',\n\t'_title',\n\t'_viewer',\n\t'_width',\n\t'_xAxisOrient',\n\t'_xData',\n\t'_xLabel',\n\t'_xMax',\n\t'_xMin',\n\t'_xNumTicks',\n\t'_xScale',\n\t'_xTickFormat',\n\t'_yAxisOrient',\n\t'_yData',\n\t'_yLabel',\n\t'_yMax',\n\t'_yMin',\n\t'_yNumTicks',\n\t'_yScale',\n\t'_yTickFormat'\n];\n\n\n// FUNCTIONS //\n\nvar merge = mergeFcn({\n\t'extend': false\n});\n\n\n// MAIN //\n\n/**\n* Base plot constructor.\n*\n* @constructor\n* @param {Array} [x] - x values\n* @param {Array} [y] - y values\n* @param {Options} [options] - constructor options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a change event\n* @param {boolean} [options.autoView=false] - indicates whether to generate an updated view on a render event\n* @param {string} [options.description=''] - description\n* @param {string} [options.engine='svg'] - render engine\n* @param {PositiveNumber} [options.height=400] - plot height\n* @param {(StringArray|EmptyArray)} [options.labels] - data labels\n* @param {(number|NumberArray)} [options.lineOpacity=0.9] - line opacity\n* @param {(string|StringArray)} [options.lineStyle='-'] - line style(s)\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} [options.lineWidth=2] - line width(s)\n* @param {NonNegativeInteger} [options.paddingBottom=80] - bottom padding\n* @param {NonNegativeInteger} [options.paddingLeft=90] - left padding\n* @param {NonNegativeInteger} [options.paddingRight=20] - right padding\n* @param {NonNegativeInteger} [options.paddingTop=80] - top padding\n* @param {string} [options.renderFormat='vdom'] - render format\n* @param {string} [options.title=''] - title\n* @param {string} [options.viewer='none'] - viewer\n* @param {PositiveNumber} [options.width=400] - plot width\n* @param {string} [options.xAxisOrient='bottom'] - x-axis orientation\n* @param {string} [options.xLabel='x'] - x-axis label\n* @param {(Date|FiniteNumber|null)} [options.xMax=null] - maximum value of x-axis domain\n* @param {(Date|FiniteNumber|null)} [options.xMin=null] - minimum value of x-axis domain\n* @param {(NonNegativeInteger|null)} [options.xNumTicks=5] - number of x-axis tick marks\n* @param {(string|null)} [options.xTickFormat=null] - x-axis tick format\n* @param {string} [options.yAxisOrient='left'] - y-axis orientation\n* @param {string} [options.yLabel='y'] - y-axis label\n* @param {(FiniteNumber|null)} [options.yMax=null] - maximum value of y-axis domain\n* @param {(FiniteNumber|null)} [options.yMin=null] - minimum value of y-axis domain\n* @param {(NonNegativeInteger|null)} [options.yNumTicks=5] - number of y-axis tick marks\n* @param {(string|null)} [options.yTickFormat=null] - y-axis tick format\n* @throws {TypeError} must provide valid options\n* @returns {Plot} Plot instance\n*\n* @example\n* var plot = new Plot();\n*/\nfunction Plot() {\n\tvar options;\n\tvar nargs;\n\tvar keys;\n\tvar self;\n\tvar opts;\n\tvar key;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Plot) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Plot();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Plot( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Plot( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Plot( arguments[0], arguments[1], arguments[2] );\n\t}\n\tself = this;\n\n\topts = defaults();\n\tif ( nargs === 0 ) {\n\t\toptions = {};\n\t} else if ( nargs === 1 ) {\n\t\toptions = arguments[ 0 ];\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an `object`. Value: `' + options + '`.' );\n\t\t}\n\t} else if ( nargs === 2 ) {\n\t\toptions = {};\n\t} else if ( nargs > 2 ) {\n\t\tif ( !isObject( arguments[ 2 ] ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an `object`. Value: `' + arguments[2] + '`.' );\n\t\t}\n\t\toptions = copy( arguments[ 2 ] ); // avoid mutation\n\t}\n\topts = merge( opts, options );\n\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\t// Set a clipping path id:\n\tdefineProperty( this, '_clipPathId', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': minstd().toString() // TODO: uuid\n\t});\n\n\t// Initialize an internal cache for renderers...\n\tdefineProperty( this, '$', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': {}\n\t});\n\tdefineProperty( this.$, 'svg', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': {}\n\t});\n\n\t// Set options...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\n\t// Add event listeners:\n\tthis.on( 'change', onChange );\n\tthis.on( 'render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\t/* eslint-disable no-underscore-dangle */\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) {\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon receiving a render event.\n\t*\n\t* @private\n\t* @param {*} plot - rendered plot\n\t*/\n\tfunction onRender( plot ) {\n\t\t/* eslint-disable no-underscore-dangle */\n\t\tdebug( 'Received a render event.' );\n\t\tif ( self._autoView ) {\n\t\t\tdebug( 'Viewer: %s.', self._viewer );\n\t\t\tdebug( 'Generating view...' );\n\t\t\tview( self, self._viewer, plot );\n\t\t}\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Plot, EventEmitter );\n\n/**\n* Rendering mode.\n*\n* ## Notes\n*\n* -   If `true`, an instance re-renders on each `'change'` event.\n*\n* @name autoRender\n* @memberof Plot.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default true\n*\n* @example\n* var plot = new Plot({\n*     'autoRender': true\n* });\n*\n* var mode = plot.autoRender;\n* // returns true\n*/\ndefineProperty( Plot.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Viewer mode.\n*\n* ## Notes\n*\n* -   If `true`, an instance generates an updated view on each render event.\n*\n* @name autoView\n* @memberof Plot.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var plot = new Plot({\n*     'autoView': false\n* });\n*\n* var mode = plot.autoView;\n* // returns false\n*/\ndefineProperty( Plot.prototype, 'autoView', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoView,\n\t'get': getAutoView\n});\n\n/**\n* Plot description.\n*\n* @name description\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default ''\n*\n* @example\n* var plot = new Plot();\n* plot.description = 'A plot description.';\n*\n* @example\n* var plot = new Plot({\n*     'description': 'A plot description.'\n* });\n* var desc = plot.description;\n* // returns 'A plot description.'\n*/\ndefineProperty( Plot.prototype, 'description', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setDescription,\n\t'get': getDescription\n});\n\n/**\n* Render engine.\n*\n* @name engine\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a recognized engine\n* @default 'svg'\n*\n* @example\n* var plot = new Plot();\n* plot.engine = 'svg';\n*\n* @example\n* var plot = new Plot({\n*     'engine': 'svg'\n* });\n* var engine = plot.engine;\n* // returns 'svg'\n*/\ndefineProperty( Plot.prototype, 'engine', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setEngine,\n\t'get': getEngine\n});\n\n/**\n* Expected graph height.\n*\n* @name graphHeight\n* @memberof Plot.prototype\n* @type {number}\n*\n* @example\n* var plot = new Plot({\n*     'height': 100,\n*     'paddingTop': 10,\n*     'paddingBottom': 20\n* });\n* var height = plot.graphHeight;\n* // returns 70\n*/\ndefineProperty( Plot.prototype, 'graphHeight', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getGraphHeight\n});\n\n/**\n* Expected graph width.\n*\n* @name graphWidth\n* @memberof Plot.prototype\n* @type {number}\n*\n* @example\n* var plot = new Plot({\n*     'width': 100,\n*     'paddingLeft': 10,\n*     'paddingRight': 10\n* });\n* var width = plot.graphWidth;\n* // returns 80\n*/\ndefineProperty( Plot.prototype, 'graphWidth', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getGraphWidth\n});\n\n/**\n* Plot height.\n*\n* @name height\n* @memberof Plot.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.height = 100;\n*\n* @example\n* var plot = new Plot({\n*     'height': 360\n* });\n* var height = plot.height;\n* // returns 360\n*/\ndefineProperty( Plot.prototype, 'height', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setHeight,\n\t'get': getHeight\n});\n\n/**\n* Data labels.\n*\n* @name labels\n* @memberof Plot.prototype\n* @type {(StringArray|EmptyArray)}\n* @throws {TypeError} must be either an array of strings or an empty array\n* @default []\n*\n* @example\n* var plot = new Plot();\n* plot.labels = [ 'beep', 'boop' ];\n*\n* @example\n* var plot = new Plot({\n*     'labels': [ 'beep', 'boop' ]\n* });\n* var labels = plot.labels;\n* // returns [ 'beep', 'boop' ]\n*/\ndefineProperty( Plot.prototype, 'labels', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLabels,\n\t'get': getLabels\n});\n\n/**\n* Line opacity.\n*\n* ## Notes\n*\n* -   When retrieved, the returned value is always an `array`.\n*\n* @name lineOpacity\n* @memberof Plot.prototype\n* @type {(number|NumberArray)}\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default '0.9'\n*\n* @example\n* var plot = new Plot();\n* plot.lineOpacity = [ 1.0, 0.5 ];\n*\n* @example\n* var plot = new Plot({\n*     'lineOpacity': 0.5\n* });\n* var opacity = plot.lineOpacity;\n* // returns [ 0.5 ]\n*/\ndefineProperty( Plot.prototype, 'lineOpacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLineOpacity,\n\t'get': getLineOpacity\n});\n\n/**\n* Line style(s).\n*\n* ## Notes\n*\n* -   When retrieved, the returned value is always an `array`.\n*\n* @name lineStyle\n* @memberof Plot.prototype\n* @type {(string|StringArray)}\n* @throws {TypeError} must be a string or string array\n* @throws {Error} must be a supported line style\n* @default '-'\n*\n* @example\n* var plot = new Plot();\n* plot.lineStyle = [ '-', 'none' ];\n*\n* @example\n* var plot = new Plot({\n*     'lineStyle': 'none'\n* });\n* var lineStyle = plot.lineStyle;\n* // returns [ 'none' ]\n*/\ndefineProperty( Plot.prototype, 'lineStyle', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLineStyle,\n\t'get': getLineStyle\n});\n\n/**\n* Line width.\n*\n* ## Notes\n*\n* -   When retrieved, the returned value is always an `array`.\n*\n* @name lineWidth\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|NonNegativeIntegerArray)}\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n* @default 2\n*\n* @example\n* var plot = new Plot();\n* plot.lineWidth = 1;\n*\n* @example\n* var plot = new Plot({\n*     'lineWidth': [ 1, 3 ]\n* });\n* var width = plot.lineWidth;\n* // returns [ 1, 3 ]\n*/\ndefineProperty( Plot.prototype, 'lineWidth', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLineWidth,\n\t'get': getLineWidth\n});\n\n/**\n* Plot bottom padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a bottom-oriented y-axis.\n*\n* @name paddingBottom\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 80 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingBottom = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingBottom': 100\n* });\n* var padding = plot.paddingBottom;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingBottom', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingBottom,\n\t'get': getPaddingBottom\n});\n\n/**\n* Plot left padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a left-oriented y-axis.\n*\n* @name paddingLeft\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 90 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingLeft = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingLeft': 100\n* });\n* var padding = plot.paddingLeft;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingLeft', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingLeft,\n\t'get': getPaddingLeft\n});\n\n/**\n* Plot right padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a right-oriented y-axis.\n*\n* @name paddingRight\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 20 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingRight = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingRight': 100\n* });\n* var padding = plot.paddingRight;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingRight', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingRight,\n\t'get': getPaddingRight\n});\n\n/**\n* Plot top padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a title or top-oriented x-axis.\n*\n* @name paddingTop\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 80 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingTop = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingTop': 100\n* });\n* var padding = plot.paddingTop;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingTop', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingTop,\n\t'get': getPaddingTop\n});\n\n/**\n* Renders a plot.\n*\n* @name render\n* @memberof Plot.prototype\n* @type {Function}\n* @param {string} [format] - render format\n* @throws {TypeError} must provide a recognized format\n* @returns {(VTree|string)} virtual tree or string\n*\n* @example\n* var plot = new Plot();\n* var out = plot.render();\n*\n* @example\n* var plot = new Plot();\n* var out = plot.render( 'html' );\n*/\nsetReadOnly( Plot.prototype, 'render', render );\n\n/**\n* Renders a plot.\n*\n* ## Notes\n*\n* -   This method **should** be implemented by descendants.\n*\n* @private\n* @name _render\n* @memberof Plot.prototype\n* @type {Function}\n* @param {string} format - render format\n* @returns {(VTree|string)} rendered plot\n*/\nsetReadOnly( Plot.prototype, '_render', stub );\n\n/**\n* Render format.\n*\n* @name renderFormat\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a recognized format\n* @default 'vdom'\n*\n* @example\n* var plot = new Plot();\n* plot.renderFormat = 'vdom';\n*\n* @example\n* var plot = new Plot({\n*     'renderFormat': 'html'\n* });\n* var fmt = plot.renderFormat;\n* // returns 'html'\n*/\ndefineProperty( Plot.prototype, 'renderFormat', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setRenderFormat,\n\t'get': getRenderFormat\n});\n\n/**\n* Plot title.\n*\n* @name title\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default ''\n*\n* @example\n* var plot = new Plot();\n* plot.title = 'Plot';\n*\n* @example\n* var plot = new Plot({\n*     'title': 'Plot'\n* });\n* var t = plot.title;\n* // returns 'Plot'\n*/\ndefineProperty( Plot.prototype, 'title', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setTitle,\n\t'get': getTitle\n});\n\n/**\n* Plot viewer.\n*\n* @name viewer\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a recognized viewer\n* @default 'none'\n*\n* @example\n* var plot = new Plot();\n* plot.viewer = 'none';\n*\n* @example\n* var plot = new Plot({\n*     'viewer': 'none'\n* });\n* var viewer = plot.viewer;\n* // returns 'none'\n*/\ndefineProperty( Plot.prototype, 'viewer', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setViewer,\n\t'get': getViewer\n});\n\n/**\n* Plot width.\n*\n* @name width\n* @memberof Plot.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.width = 100;\n*\n* @example\n* var plot = new Plot({\n*     'width': 480\n* });\n* var width = plot.width;\n* // returns 480\n*/\ndefineProperty( Plot.prototype, 'width', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setWidth,\n\t'get': getWidth\n});\n\n/**\n* x-axis orientation.\n*\n* @name xAxisOrient\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be either `'top'` or `'bottom'`\n* @default 'bottom'\n*\n* @example\n* var plot = new Plot();\n* plot.xAxisOrient = 'bottom';\n*\n* @example\n* var plot = new Plot({\n*     'xAxisOrient': 'bottom'\n* });\n* var orientation = plot.xAxisOrient;\n* // returns 'bottom'\n*/\ndefineProperty( Plot.prototype, 'xAxisOrient', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXAxisOrient,\n\t'get': getXAxisOrient\n});\n\n/**\n* x-axis domain.\n*\n* @name xDomain\n* @memberof Plot.prototype\n* @type {Array}\n*\n* @example\n* var plot = new Plot({\n*     'xMin': 0,\n*     'xMax': 100\n* });\n* var domain = plot.xDomain;\n* // returns [ 0, 100 ]\n*/\ndefineProperty( Plot.prototype, 'xDomain', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXDomain\n});\n\n/**\n* x-axis label.\n*\n* @name xLabel\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default 'x'\n*\n* @example\n* var plot = new Plot();\n* plot.xLabel = 'time';\n*\n* @example\n* var plot = new Plot({\n*     'xLabel': 'time'\n* });\n* var xLabel = plot.xLabel;\n* // returns 'time'\n*/\ndefineProperty( Plot.prototype, 'xLabel', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXLabel,\n\t'get': getXLabel\n});\n\n/**\n* Number of x-axis tick marks.\n*\n* @name xNumTicks\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|null)}\n* @throws {TypeError} must be a nonnegative integer or null\n* @default 5\n*\n* @example\n* var plot = new Plot();\n* plot.xNumTicks = 10;\n*\n* @example\n* var plot = new Plot({\n*     'xNumTicks': 10\n* });\n* var ticks = plot.xNumTicks;\n* // returns 10\n*/\ndefineProperty( Plot.prototype, 'xNumTicks', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXNumTicks,\n\t'get': getXNumTicks\n});\n\n/**\n* Function to map values to x-axis coordinate values.\n*\n* @name xPos\n* @memberof Plot.prototype\n* @type {Function}\n*\n* @example\n* var plot = new Plot();\n* var xPos = plot.xPos;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'xPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXPos\n});\n\n/**\n* x-axis range.\n*\n* @name xRange\n* @memberof Plot.prototype\n* @type {NumberArray}\n*\n* @example\n* var plot = new Plot({\n*     'width': 100,\n*     'paddingLeft': 10,\n*     'paddingRight': 10\n* });\n* var range = plot.xRange;\n* // returns [ 0, 80 ]\n*/\ndefineProperty( Plot.prototype, 'xRange', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXRange\n});\n\n/**\n* x-axis tick format.\n*\n* ## Notes\n*\n* -   When retrieved, if the value is not `null`, the returned value is a formatting function.\n*\n* @name xTickFormat\n* @memberof Plot.prototype\n* @type {(string|null)}\n* @throws {TypeError} must be a string primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.xScale = 'time';\n* plot.xTickFormat = '%H:%M';\n*\n* @example\n* var plot = new Plot({\n*     'xScale': 'time',\n*     'xTickFormat': '%H:%M'\n* });\n* var fmt = plot.xTickFormat;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'xTickFormat', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXTickFormat,\n\t'get': getXTickFormat\n});\n\n/**\n* y-axis orientation.\n*\n* @name yAxisOrient\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be either `'left'` or `'right'`\n* @default 'left'\n*\n* @example\n* var plot = new Plot();\n* plot.yAxisOrient = 'left';\n*\n* @example\n* var plot = new Plot({\n*     'yAxisOrient': 'left'\n* });\n* var orientation = plot.yAxisOrient;\n* // returns 'left'\n*/\ndefineProperty( Plot.prototype, 'yAxisOrient', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYAxisOrient,\n\t'get': getYAxisOrient\n});\n\n/**\n* y-axis domain.\n*\n* @name yDomain\n* @memberof Plot.prototype\n* @type {Array}\n*\n* @example\n* var plot = new Plot({\n*     'yMin': 0,\n*     'yMax': 100\n* });\n* var domain = plot.yDomain;\n* // returns [ 0, 100 ]\n*/\ndefineProperty( Plot.prototype, 'yDomain', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYDomain\n});\n\n/**\n* y-axis label.\n*\n* @name yLabel\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default 'y'\n*\n* @example\n* var plot = new Plot();\n* plot.yLabel = 'value';\n*\n* @example\n* var plot = new Plot({\n*     'yLabel': 'value'\n* });\n* var yLabel = plot.yLabel;\n* // returns 'value'\n*/\ndefineProperty( Plot.prototype, 'yLabel', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYLabel,\n\t'get': getYLabel\n});\n\n/**\n* Number of y-axis tick marks.\n*\n* @name yNumTicks\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|null)}\n* @throws {TypeError} must be a nonnegative integer or null\n* @default 5\n*\n* @example\n* var plot = new Plot();\n* plot.yNumTicks = 10;\n*\n* @example\n* var plot = new Plot({\n*     'yNumTicks': 10\n* });\n* var ticks = plot.yNumTicks;\n* // returns 10\n*/\ndefineProperty( Plot.prototype, 'yNumTicks', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYNumTicks,\n\t'get': getYNumTicks\n});\n\n/**\n* Function to map values to y-axis coordinate values.\n*\n* @name yPos\n* @memberof Plot.prototype\n* @type {Function}\n*\n* @example\n* var plot = new Plot();\n* var yPos = plot.yPos;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'yPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYPos\n});\n\n/**\n* y-axis range.\n*\n* @name yRange\n* @memberof Plot.prototype\n* @type {NumberArray}\n*\n* @example\n* var plot = new Plot({\n*     'height': 100,\n*     'paddingTop': 10,\n*     'paddingBottom': 20\n* });\n* var range = plot.yRange;\n* // returns [ 70, 0 ]\n*/\ndefineProperty( Plot.prototype, 'yRange', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYRange\n});\n\n/**\n* y-axis tick format.\n*\n* ## Notes\n*\n* -   If the value is not `null`, when retrieved, the returned value is a formatting function.\n*\n* @name yTickFormat\n* @memberof Plot.prototype\n* @type {(string|null)}\n* @throws {TypeError} must be a string primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.yTickFormat = '.0%';\n*\n* @example\n* var plot = new Plot({\n*     'yTickFormat': '.0%'\n* });\n* var fmt = plot.yTickFormat;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'yTickFormat', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYTickFormat,\n\t'get': getYTickFormat\n});\n\n/**\n* Generates a plot view.\n*\n* @name view\n* @memberof Plot.prototype\n* @type {Function}\n* @param {string} [viewer] - viewer\n* @throws {TypeError} must provide a recognized viewer\n*\n* @example\n* var plot = new Plot();\n* plot.x = [ [ 1, 2, 3 ] ];\n* plot.view( 'stdout' );\n*/\nsetReadOnly( Plot.prototype, 'view', view );\n\n\n// EXPORTS //\nexport default Plot;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Base constructor for a 2-dimensional plot.\n*\n* @module @stdlib/plot/base/ctor\n*\n* @example\n* var Plot = require( '@stdlib/plot/base/ctor' );\n*\n* var plot = new Plot();\n*/\n\n// MODULES //\nvar Plot = __var_0__;\n\n\n// EXPORTS //\nexport default Plot;\n"]}