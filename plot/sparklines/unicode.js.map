{"version":3,"sources":["@stdlib/plot/sparklines/unicode/lib/defaults.js","@stdlib/plot/sparklines/unicode/lib/props/infinities/set.js","@stdlib/plot/sparklines/unicode/lib/props/infinities/get.js","@stdlib/plot/sparklines/unicode/lib/props/type/set.js","@stdlib/plot/sparklines/unicode/lib/props/type/get.js","@stdlib/plot/sparklines/unicode/lib/props/y-max/set.js","@stdlib/plot/sparklines/unicode/lib/props/y-max/get.js","@stdlib/plot/sparklines/unicode/lib/props/y-min/set.js","@stdlib/plot/sparklines/unicode/lib/props/y-min/get.js","@stdlib/plot/sparklines/unicode/lib/render.js","@stdlib/plot/sparklines/unicode/lib/main.js","@stdlib/plot/sparklines/unicode/lib/index.js"],"names":["defaults","out","infinities","type","yMax","yMin","logger","__var_0__","isBoolean","__var_1__","isPrimitive","debug","set","bool","TypeError","this","_infinities","emit","get","contains","CHART_TYPES","__var_2__","join","_type","isFiniteNumber","isNull","max","_yMax","PINF","NINF","len","d","i","_data","length","_isDefined","min","_yMin","ColumnChart","LineChart","TristateChart","__var_3__","UpDownChart","__var_4__","WinLossChart","__var_5__","render","prototype","_render","call","defineProperty","objectKeys","isArrayLike","mergeFcn","factory","pick","inherit","__var_6__","Sparkline","__var_7__","__var_8__","setInfinities","__var_9__","getInfinities","__var_10__","setType","__var_11__","getType","__var_12__","setYMax","__var_13__","getYMax","__var_14__","setYMin","__var_15__","getYMin","__var_16__","__var_17__","merge","extend","PRIVATE_PROPS","OPTIONS_PROPS","UnicodeSparkline","options","nargs","opts","keys","key","arguments","JSON","stringify","configurable","enumerable","writable","value","sparkline"],"mappings":"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","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\tvar out = {};\n\n\t// Boolean indicating whether to encode infinite values:\n\tout.infinities = false;\n\n\t// Chart type:\n\tout.type = 'column';\n\n\t// Maximum value of the y-axis domain:\n\tout.yMax = null;\n\n\t// Minimum value of the y-axis domain:\n\tout.yMin = null;\n\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default defaults;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:unicode:set:infinities' );\n\n\n// MAIN //\n\n/**\n* Sets a flag indicating whether to encode infinite values.\n*\n* @private\n* @param {boolean} bool - boolean flag\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `infinities` must be a boolean primitive. Value: `' + bool + '`.' );\n\t}\n\tif ( bool !== this._infinities ) {\n\t\tdebug( 'Current value: %s.', this._infinities );\n\n\t\tthis._infinities = bool;\n\t\tdebug( 'New value: %s.', this._infinities );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a flag indicating whether to encode infinite values.\n*\n* @private\n* @returns {boolean} boolean indicating whether to encode infinite values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._infinities;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/contains';\nimport __var_2__ from './chart_types.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar contains = __var_1__;\nvar CHART_TYPES = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:unicode:set:type' );\n\n\n// MAIN //\n\n/**\n* Sets the sparkline chart type.\n*\n* @private\n* @param {string} type - chart type\n* @throws {TypeError} must be a supported chart type\n*/\nfunction set( type ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !contains( CHART_TYPES, type ) ) {\n\t\tthrow new TypeError( 'invalid value. `type` must be one of `[' + CHART_TYPES.join( ', ' ) + ']`. Value: `' + type + '`.' );\n\t}\n\tif ( type !== this._type ) {\n\t\tdebug( 'Current value: %s.', this._type );\n\n\t\tthis._type = type;\n\t\tdebug( 'New value: %s.', this._type );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the sparkline chart type.\n*\n* @private\n* @returns {string} sparkline chart type\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._type;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-finite';\nimport __var_2__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFiniteNumber = __var_1__.isPrimitive;\nvar isNull = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:unicode:set:y-max' );\n\n\n// MAIN //\n\n/**\n* Sets the maximum value of the y-axis domain.\n*\n* @private\n* @param {(FiniteNumber|null)} max - maximum value\n* @throws {TypeError} must be a finite number primitive or null\n*/\nfunction set( max ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFiniteNumber( max ) && !isNull( max ) ) {\n\t\tthrow new TypeError( 'invalid value. `yMax` must be a finite number primitive or null. Value: `' + max + '`.' );\n\t}\n\tif ( max !== this._yMax ) {\n\t\tdebug( 'Current value: %s.', this._yMax );\n\n\t\tthis._yMax = max;\n\t\tdebug( 'New value: %s.', this._yMax );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/constants/math/float64-pinf';\nimport __var_1__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar PINF = __var_0__;\nvar NINF = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of the y-axis domain.\n*\n* @private\n* @returns {(FiniteNumber|null)} maximum value of the y-axis domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar max;\n\tvar len;\n\tvar d;\n\tvar i;\n\n\tif ( this._yMax === null ) {\n\t\tlen = this._data.length;\n\t\tmax = NINF;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td = this._data[ i ];\n\t\t\tif ( this._isDefined( d ) && d !== PINF && d > max ) {\n\t\t\t\tmax = d;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n\treturn this._yMax;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-finite';\nimport __var_2__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFiniteNumber = __var_1__.isPrimitive;\nvar isNull = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:unicode:set:y-min' );\n\n\n// MAIN //\n\n/**\n* Sets the minimum value of the y-axis domain.\n*\n* @private\n* @param {(FiniteNumber|null)} min - minimum value\n* @throws {TypeError} must be a finite number primitive or null\n*/\nfunction set( min ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFiniteNumber( min ) && !isNull( min ) ) {\n\t\tthrow new TypeError( 'invalid value. `yMin` must be a finite number primitive or null. Value: `' + min + '`.' );\n\t}\n\tif ( min !== this._yMin ) {\n\t\tdebug( 'Current value: %s.', this._yMin );\n\n\t\tthis._yMin = min;\n\t\tdebug( 'New value: %s.', this._yMin );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/constants/math/float64-pinf';\nimport __var_1__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar PINF = __var_0__;\nvar NINF = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns the minimum value of the y-axis domain.\n*\n* @private\n* @returns {number} minimum value of the y-axis domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar min;\n\tvar len;\n\tvar d;\n\tvar i;\n\n\tif ( this._yMin === null ) {\n\t\tlen = this._data.length;\n\t\tmin = PINF;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td = this._data[ i ];\n\t\t\tif ( this._isDefined( d ) && d !== NINF && d < min ) {\n\t\t\t\tmin = d;\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}\n\treturn this._yMin;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/plot/sparklines/unicode/column';\nimport __var_2__ from '@stdlib/plot/sparklines/unicode/line';\nimport __var_3__ from '@stdlib/plot/sparklines/unicode/tristate';\nimport __var_4__ from '@stdlib/plot/sparklines/unicode/up-down';\nimport __var_5__ from '@stdlib/plot/sparklines/unicode/win-loss';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar ColumnChart = __var_1__;\nvar LineChart = __var_2__;\nvar TristateChart = __var_3__;\nvar UpDownChart = __var_4__;\nvar WinLossChart = __var_5__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:unicode:render' );\n\n\n// MAIN //\n\n/**\n* Renders a chart.\n*\n* @private\n* @returns {string} rendered chart\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar out;\n\n\tdebug( 'Rendering...' );\n\n\tswitch ( this._type ) { // eslint-disable-line default-case\n\tcase 'column':\n\t\tout = ColumnChart.prototype._render.call( this ); // eslint-disable-line no-underscore-dangle\n\t\tbreak;\n\tcase 'line':\n\t\tout = LineChart.prototype._render.call( this ); // eslint-disable-line no-underscore-dangle\n\t\tbreak;\n\tcase 'tristate':\n\t\tout = TristateChart.prototype._render.call( this ); // eslint-disable-line no-underscore-dangle\n\t\tbreak;\n\tcase 'up-down':\n\t\tout = UpDownChart.prototype._render.call( this ); // eslint-disable-line no-underscore-dangle\n\t\tbreak;\n\tcase 'win-loss':\n\t\tout = WinLossChart.prototype._render.call( this ); // eslint-disable-line no-underscore-dangle\n\t\tbreak;\n\t}\n\n\tthis.emit( 'render', out );\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/define-property';\nimport __var_2__ from '@stdlib/utils/keys';\nimport __var_3__ from '@stdlib/assert/is-array-like';\nimport __var_4__ from '@stdlib/utils/merge';\nimport __var_5__ from '@stdlib/utils/pick';\nimport __var_6__ from '@stdlib/utils/inherit';\nimport __var_7__ from '@stdlib/plot/sparklines/base/ctor';\nimport __var_8__ from './defaults.js';\nimport __var_9__ from './props/infinities/set.js';\nimport __var_10__ from './props/infinities/get.js';\nimport __var_11__ from './props/type/set.js';\nimport __var_12__ from './props/type/get.js';\nimport __var_13__ from './props/y-max/set.js';\nimport __var_14__ from './props/y-max/get.js';\nimport __var_15__ from './props/y-min/set.js';\nimport __var_16__ from './props/y-min/get.js';\nimport __var_17__ from './render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar defineProperty = __var_1__;\nvar objectKeys = __var_2__;\nvar isArrayLike = __var_3__;\nvar mergeFcn = __var_4__.factory;\nvar pick = __var_5__;\nvar inherit = __var_6__;\nvar Sparkline = __var_7__;\nvar defaults = __var_8__;\nvar setInfinities = __var_9__;\nvar getInfinities = __var_10__;\nvar setType = __var_11__;\nvar getType = __var_12__;\nvar setYMax = __var_13__;\nvar getYMax = __var_14__;\nvar setYMin = __var_15__;\nvar getYMin = __var_16__;\nvar render = __var_17__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:unicode:main' );\n\nvar merge = mergeFcn({\n\t'extend': false\n});\n\n// List of private properties (note: keep in alphabetical order):\nvar PRIVATE_PROPS = [\n\t'_infinities',\n\t'_type',\n\t'_yMax',\n\t'_yMin'\n];\n\n// List of options properties (note: keep in alphabetical order):\nvar OPTIONS_PROPS = [\n\t'infinities',\n\t'type',\n\t'yMax',\n\t'yMin'\n];\n\n\n// MAIN //\n\n/**\n* Unicode sparkline constructor.\n*\n* @constructor\n* @param {(ArrayLike|ndarrayLike)} [data] - chart data\n* @param {Options} [options] - chart options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a `change` event\n* @param {(PositiveInteger|null)} [options.bufferSize] - data buffer size\n* @param {(ArrayLikeObject|ndarrayLike)} [options.data] - data\n* @param {string} [options.description=''] - chart description\n* @param {boolean} [options.infinities=false] - boolean indicating whether to encode infinite values\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {string} [options.label] - data label\n* @param {string} [options.type='column'] - chart type\n* @param {(FiniteNumber|null)} [options.yMax] - maximum value of the y-axis domain\n* @param {(FiniteNumber|null)} [options.yMin] - minimum value of the y-axis domain\n* @throws {TypeError} must provide valid options\n* @returns {UnicodeSparkline} chart instance\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = new UnicodeSparkline( data );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n* var opts = {\n*     'data': data\n* };\n* var chart = new UnicodeSparkline( opts );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*/\nfunction UnicodeSparkline() {\n\tvar options;\n\tvar nargs;\n\tvar opts;\n\tvar keys;\n\tvar key;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof UnicodeSparkline) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new UnicodeSparkline();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new UnicodeSparkline( arguments[ 0 ] );\n\t\t}\n\t\treturn new UnicodeSparkline( arguments[ 0 ], arguments[ 1 ] );\n\t}\n\t// Invoke parent constructor...\n\tif ( nargs === 0 ) {\n\t\tSparkline.call( this );\n\t} else if ( nargs === 1 ) {\n\t\tSparkline.call( this, arguments[ 0 ] );\n\t} else {\n\t\tSparkline.call( this, arguments[ 0 ], arguments[ 1 ] );\n\t}\n\t// Extract chart-specific options...\n\topts = defaults();\n\tif ( nargs === 1 && !isArrayLike( arguments[ 0 ] ) ) {\n\t\toptions = arguments[ 0 ];\n\t} else if ( nargs === 2 ) {\n\t\toptions = arguments[ 1 ];\n\t} else {\n\t\toptions = {};\n\t}\n\topts = merge( opts, pick( options, OPTIONS_PROPS ) );\n\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( options ) );\n\n\t// Initialize private chart-specific properties...\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\n\t// Set chart-specific properties...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\treturn this;\n}\n\n/*\n* Inherit from the `Sparkline` prototype.\n*/\ninherit( UnicodeSparkline, Sparkline );\n\n/**\n* Boolean indicating whether to encode infinite values.\n*\n* @name infinities\n* @memberof UnicodeSparkline.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var chart = new UnicodeSparkline();\n* chart.infinities = true;\n*\n* @example\n* var chart = new UnicodeSparkline({\n*     'infinities': true\n* });\n* var bool = chart.infinities;\n* // returns true\n*/\ndefineProperty( UnicodeSparkline.prototype, 'infinities', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setInfinities,\n\t'get': getInfinities\n});\n\n/**\n* Sparkline chart type.\n*\n* @name types\n* @memberof UnicodeSparkline.prototype\n* @type {string}\n* @throws {TypeError} must be a supported chart type\n* @default 'column'\n*\n* @example\n* var chart = new UnicodeSparkline();\n* chart.type = 'win-loss';\n*\n* @example\n* var chart = new UnicodeSparkline({\n*     'type': 'win-loss'\n* });\n* var type = chart.type;\n* // returns 'win-loss'\n*/\ndefineProperty( UnicodeSparkline.prototype, 'type', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setType,\n\t'get': getType\n});\n\n/**\n* Maximum value of the y-axis domain.\n*\n* @name yMax\n* @memberof UnicodeSparkline.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n*\n* @example\n* var chart = new UnicodeSparkline();\n* chart.yMax = 100.0;\n*\n* @example\n* var chart = new UnicodeSparkline({\n*     'yMax': 314.0\n* });\n* var ymax = chart.yMax;\n* // returns 314.0\n*/\ndefineProperty( UnicodeSparkline.prototype, 'yMax', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYMax,\n\t'get': getYMax\n});\n\n/**\n* Minimum value of the y-axis domain.\n*\n* @name yMin\n* @memberof UnicodeSparkline.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n*\n* @example\n* var chart = new UnicodeSparkline();\n* chart.yMin = -100.0;\n*\n* @example\n* var chart = new UnicodeSparkline({\n*     'yMin': 3.14\n* });\n* var ymin = chart.yMin;\n* // returns 3.14\n*/\ndefineProperty( UnicodeSparkline.prototype, 'yMin', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYMin,\n\t'get': getYMin\n});\n\n/**\n* Renders a sparkline chart.\n*\n* @name render\n* @memberof UnicodeSparkline.prototype\n* @type {Function}\n* @returns {string} rendered sparkline chart\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = new UnicodeSparkline( data );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*/\nUnicodeSparkline.prototype.render = render;\n\n\n// EXPORTS //\nexport default UnicodeSparkline;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a Unicode sparkline.\n*\n* @module @stdlib/plot/sparklines/unicode\n*\n* @example\n* var sparkline = require( '@stdlib/plot/sparklines/unicode' );\n*\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = sparkline( data );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*/\n\n// MODULES //\nvar sparkline = __var_0__;\n\n\n// EXPORTS //\nexport default sparkline;\n"]}