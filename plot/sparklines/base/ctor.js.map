{"version":3,"sources":["@stdlib/plot/sparklines/base/ctor/lib/accessors/is_defined.js","@stdlib/plot/sparklines/base/ctor/lib/defaults.js","@stdlib/plot/sparklines/base/ctor/lib/props/auto-render/set.js","@stdlib/plot/sparklines/base/ctor/lib/props/auto-render/get.js","@stdlib/plot/sparklines/base/ctor/lib/props/buffer-size/set.js","@stdlib/plot/sparklines/base/ctor/lib/props/buffer-size/get.js","@stdlib/plot/sparklines/base/ctor/lib/props/data/set.js","@stdlib/plot/sparklines/base/ctor/lib/props/data/get.js","@stdlib/plot/sparklines/base/ctor/lib/props/description/set.js","@stdlib/plot/sparklines/base/ctor/lib/props/description/get.js","@stdlib/plot/sparklines/base/ctor/lib/props/is-defined/set.js","@stdlib/plot/sparklines/base/ctor/lib/props/is-defined/get.js","@stdlib/plot/sparklines/base/ctor/lib/props/label/set.js","@stdlib/plot/sparklines/base/ctor/lib/props/label/get.js","@stdlib/plot/sparklines/base/ctor/lib/push.js","@stdlib/plot/sparklines/base/ctor/lib/render/index.js","@stdlib/plot/sparklines/base/ctor/lib/render/stub.js","@stdlib/plot/sparklines/base/ctor/lib/tostring.js","@stdlib/plot/sparklines/base/ctor/lib/main.js","@stdlib/plot/sparklines/base/ctor/lib/index.js"],"names":["logger","__var_0__","isnan","__var_1__","isPrimitive","debug","isDefined","d","bool","JSON","stringify","FLOAT64_MAX","defaults","out","autoRender","bufferSize","data","description","label","isBoolean","set","TypeError","this","_autoRender","emit","get","isPositiveInteger","isNull","__var_2__","__var_3__","size","FLG","_data","length","RangeError","_bufferSize","isCollection","isndarrayLike","i","iget","push","slice","isString","str","_description","isFunction","fcn","_isDefined","_label","datum","shift","render","_render","Error","toString","EventEmitter","defineProperty","objectKeys","inherit","__var_4__","isObject","__var_5__","isArrayLike","__var_6__","mergeFcn","__var_7__","factory","__var_8__","setAutoRender","__var_9__","getAutoRender","__var_10__","setBufferSize","__var_11__","getBufferSize","__var_12__","setData","__var_13__","getData","__var_14__","setDescription","__var_15__","getDescription","__var_16__","setIsDefined","__var_17__","getIsDefined","__var_18__","setLabel","__var_19__","getLabel","__var_20__","__var_21__","__var_22__","stub","__var_23__","__var_24__","merge","extend","PRIVATE_PROPS","Sparkline","options","nargs","opts","keys","self","key","arguments","call","configurable","enumerable","writable","value","on","onChange","onRender","prototype"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isnan = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:accessor:is-defined' );\n\n\n// MAIN //\n\n/**\n* Accessor function which determines whether a datum is defined.\n*\n* @private\n* @param {number} d - datum\n* @param {integer} i - index\n* @returns {boolean} boolean indicating whether a datum is defined\n*/\nfunction isDefined( d ) {\n\tvar bool = !isnan( d );\n\tdebug( 'Datum: %s. Defined: %s.', JSON.stringify( d ), bool );\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default isDefined;\n","import __var_0__ from '@stdlib/constants/math/float64-max';\nimport __var_1__ from './accessors/is_defined.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar FLOAT64_MAX = __var_0__;\nvar isDefined = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\tvar out = {};\n\n\t// Boolean indicating whether to re-render on a `change` event:\n\tout.autoRender = false;\n\n\t// Data buffer size:\n\tout.bufferSize = FLOAT64_MAX;\n\n\t// Sparkline data:\n\tout.data = [];\n\n\t// Sparkline description:\n\tout.description = '';\n\n\t// Accessor indicating whether a datum is defined:\n\tout.isDefined = isDefined;\n\n\t// Data label:\n\tout.label = '';\n\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default defaults;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:set:auto-render' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tif ( bool !== this._autoRender ) {\n\t\tdebug( 'Current value: %d.', this._autoRender );\n\n\t\tthis._autoRender = bool;\n\t\tdebug( 'New Value: %d.', this._autoRender );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-positive-integer';\nimport __var_2__ from '@stdlib/assert/is-null';\nimport __var_3__ from '@stdlib/constants/math/float64-max';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isPositiveInteger = __var_1__.isPrimitive;\nvar isNull = __var_2__;\nvar FLOAT64_MAX = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:set:buffer-size' );\n\n\n// MAIN //\n\n/**\n* Sets the data buffer size.\n*\n* @param {(PositiveInteger|null)} size - data buffer size\n* @throws {TypeError} must be a positive integer or null\n* @throws {RangeError} must be greater than or equal to the number of data elements\n*/\nfunction set( size ) {\n\t/* eslint-disable no-invalid-this */\n\tvar FLG = isNull( size );\n\tif ( !isPositiveInteger( size ) && !FLG ) {\n\t\tthrow new TypeError( 'invalid value. `bufferSize` must be a positive integer or null. Value: `' + size + '`.' );\n\t}\n\tif ( FLG ) {\n\t\tsize = FLOAT64_MAX;\n\t}\n\tif ( this._data && size < this._data.length ) {\n\t\tthrow new RangeError( 'invalid value. `bufferSize` size is smaller than the number of data elements. Number of elements: `'+ this._data.length + '`. Value: `' + size + '`.' );\n\t}\n\tif ( size !== this._bufferSize ) {\n\t\tdebug( 'Current value: %s.', this._bufferSize );\n\n\t\tthis._bufferSize = size;\n\t\tdebug( 'New value: %s.', this._bufferSize );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data buffer size.\n*\n* @private\n* @returns {number} data buffer size\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._bufferSize;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-collection';\nimport __var_2__ from '@stdlib/assert/is-ndarray-like';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isCollection = __var_1__;\nvar isndarrayLike = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:set:data' );\n\n\n// MAIN //\n\n/**\n* Sets the sparkline data.\n*\n* @private\n* @param {(Collection|ndarrayLike)} data - sparkline data\n* @throws {TypeError} must be an array-like object or an ndarray\n* @throws {RangeError} length must not exceed maximum data buffer size\n*/\nfunction set( data ) {\n\t/* eslint-disable no-invalid-this */\n\tvar FLG;\n\tvar i;\n\n\tFLG = isndarrayLike( data ) && typeof data.iget === 'function';\n\tif ( !isCollection( data ) && !FLG ) {\n\t\tthrow new TypeError( 'invalid value. `data` must be an array-like object or an ndarray. Value: `' + data + '`.' );\n\t}\n\tif ( data.length > this._bufferSize ) {\n\t\tthrow new RangeError( 'invalid value. `data` length exceeds maximum data buffer size. Buffer size: `' + this._bufferSize + '`. Length: `' + data.length + '`.' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._data ) );\n\n\tthis._data = [];\n\tif ( FLG ) {\n\t\tfor ( i = 0; i < data.length; i++ ) {\n\t\t\tthis._data.push( data.iget( i ) );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < data.length; i++ ) {\n\t\t\tthis._data.push( data[ i ] );\n\t\t}\n\t}\n\tdebug( 'New value: %s.', JSON.stringify( this._data ) );\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns sparkline data.\n*\n* @private\n* @returns {Array} sparkline data\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._data.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:description' );\n\n\n// MAIN //\n\n/**\n* Sets the description.\n*\n* @private\n* @param {string} str - description\n* @throws {TypeError} must be a string primitive\n* @returns {void}\n*/\nfunction set( str ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid value. `description` must be a string. Value: `' + str + '.`' );\n\t}\n\tif ( str !== this._description ) {\n\t\tdebug( 'Current value: %s.', this._description );\n\n\t\tthis._description = str;\n\t\tdebug( 'New value: %s.', this._description );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the description.\n*\n* @private\n* @returns {string} description\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._description;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:set:is-defined' );\n\n\n// MAIN //\n\n/**\n* Sets the accessor for defined values.\n*\n* @private\n* @param {Function} fcn - accessor\n* @throws {TypeError} must be a function\n* @returns {void}\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `isDefined` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tif ( fcn !== this._isDefined ) {\n\t\tdebug( 'Current value: %s.', this._isDefined );\n\n\t\tthis._isDefined = fcn;\n\t\tdebug( 'New Value: %s.', this._isDefined );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the accessor for defined values.\n*\n* @private\n* @returns {Function} accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._isDefined;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:set:label' );\n\n\n// MAIN //\n\n/**\n* Sets the data label.\n*\n* @private\n* @param {string} label - data label\n* @throws {TypeError} must be a string\n* @returns {void}\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( label ) ) {\n\t\tthrow new TypeError( 'invalid value. `label` must be a string. Value: `' + label + '.`' );\n\t}\n\tif ( label !== this._label ) {\n\t\tdebug( 'Current value: %s.', this._label );\n\n\t\tthis._label = label;\n\t\tdebug( 'New Value: %s.', this._label );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data label.\n*\n* @private\n* @returns {string} label\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._label;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:push' );\n\n\n// MAIN //\n\n/**\n* Appends data.\n*\n* @private\n* @param {*} datum - data to append\n* @returns {Sparkline} class instance\n*/\nfunction push( datum ) {\n\t/* eslint-disable no-invalid-this */\n\tdebug( 'Current value: %s.', JSON.stringify( this._data ) );\n\tif ( this._data.length >= this._bufferSize ) {\n\t\tthis._data.shift();\n\t}\n\tthis._data.push( datum );\n\n\tdebug( 'New value: %s.', JSON.stringify( this._data ) );\n\tthis.emit( 'change' );\n\n\treturn this;\n}\n\n\n// EXPORTS //\nexport default push;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:render' );\n\n\n// MAIN //\n\n/**\n* Renders a sparkline.\n*\n* @private\n* @returns {*} rendered sparkline\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar out;\n\n\tdebug( 'Rendering...' );\n\tout = this._render();\n\n\tthis.emit( 'render', out );\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Placeholder `render` function.\n*\n* @private\n* @throws {Error} must be implemented by descendant classes\n*/\nfunction render() {\n\tthrow new Error( 'method not implemented.' );\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serializes a sparkline as a string.\n*\n* @private\n* @returns {string} serialized sparkline\n*/\nfunction toString() { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\treturn this.render();\n}\n\n\n// EXPORTS //\nexport default toString;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-property';\nimport __var_3__ from '@stdlib/utils/keys';\nimport __var_4__ from '@stdlib/utils/inherit';\nimport __var_5__ from '@stdlib/assert/is-plain-object';\nimport __var_6__ from '@stdlib/assert/is-array-like';\nimport __var_7__ from '@stdlib/utils/merge';\nimport __var_8__ from './defaults.js';\nimport __var_9__ from './props/auto-render/set.js';\nimport __var_10__ from './props/auto-render/get.js';\nimport __var_11__ from './props/buffer-size/set.js';\nimport __var_12__ from './props/buffer-size/get.js';\nimport __var_13__ from './props/data/set.js';\nimport __var_14__ from './props/data/get.js';\nimport __var_15__ from './props/description/set.js';\nimport __var_16__ from './props/description/get.js';\nimport __var_17__ from './props/is-defined/set.js';\nimport __var_18__ from './props/is-defined/get.js';\nimport __var_19__ from './props/label/set.js';\nimport __var_20__ from './props/label/get.js';\nimport __var_21__ from './push.js';\nimport __var_22__ from './render/index.js';\nimport __var_23__ from './render/stub.js';\nimport __var_24__ from './tostring.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nvar defineProperty = __var_2__;\nvar objectKeys = __var_3__;\nvar inherit = __var_4__;\nvar isObject = __var_5__;\nvar isArrayLike = __var_6__;\nvar mergeFcn = __var_7__.factory;\nvar defaults = __var_8__;\nvar setAutoRender = __var_9__;\nvar getAutoRender = __var_10__;\nvar setBufferSize = __var_11__;\nvar getBufferSize = __var_12__;\nvar setData = __var_13__;\nvar getData = __var_14__;\nvar setDescription = __var_15__;\nvar getDescription = __var_16__;\nvar setIsDefined = __var_17__;\nvar getIsDefined = __var_18__;\nvar setLabel = __var_19__;\nvar getLabel = __var_20__;\nvar push = __var_21__;\nvar render = __var_22__;\nvar stub = __var_23__;\nvar toString = __var_24__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:main' );\n\nvar merge = mergeFcn({\n\t'extend': false\n});\n\n// List of private properties (note: keep in alphabetical order):\nvar PRIVATE_PROPS = [\n\t'_autoRender',\n\t'_bufferSize',\n\t'_data',\n\t'_description',\n\t'_isDefined',\n\t'_labels'\n];\n\n\n// MAIN //\n\n/**\n* Sparkline constructor.\n*\n* @constructor\n* @param {(ArrayLike|ndarrayLike)} [data] - sparkline data\n* @param {Options} [options] - sparkline options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a `change` event\n* @param {(PositiveInteger|null)} [options.bufferSize] - data buffer size\n* @param {(ArrayLikeObject|ndarrayLike)} [options.data] - data\n* @param {string} [options.description=''] - sparkline description\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {string} [options.label] - data label\n* @throws {TypeError} must provide valid options\n* @returns {Sparkline} sparkline instance\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = Sparkline( data );\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n* var opts = {\n*     'data': data\n* };\n* var chart = Sparkline( opts );\n*/\nfunction Sparkline() {\n\tvar options;\n\tvar nargs;\n\tvar opts;\n\tvar keys;\n\tvar self;\n\tvar key;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Sparkline) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Sparkline();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Sparkline( arguments[ 0 ] );\n\t\t}\n\t\treturn new Sparkline( arguments[ 0 ], arguments[ 1 ] );\n\t}\n\tself = this;\n\n\topts = defaults();\n\tif ( nargs === 0 ) {\n\t\toptions = {};\n\t} else if ( nargs === 1 ) {\n\t\tif ( isArrayLike( arguments[ 0 ] ) ) {\n\t\t\toptions = {\n\t\t\t\t'data': arguments[ 0 ]\n\t\t\t};\n\t\t} else {\n\t\t\toptions = arguments[ 0 ];\n\t\t\tif ( !isObject( options ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ( !isObject( arguments[ 1 ] ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an object. Value: `' + arguments[ 1 ] + '`.' );\n\t\t}\n\t\toptions = arguments[ 1 ];\n\t\toptions.data = arguments[ 0 ];\n\t}\n\topts = merge( opts, options );\n\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\n\t// Set options...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\n\t// Add event listeners:\n\tthis.on( 'change', onChange );\n\tthis.on( 'render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a `change` event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\t/* eslint-disable no-underscore-dangle */\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) {\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon receiving a `render` event.\n\t*\n\t* @private\n\t* @param {*} chart - rendered chart\n\t*/\n\tfunction onRender() {\n\t\tdebug( 'Received a render event.' );\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Sparkline, EventEmitter );\n\n/**\n* Rendering mode.\n*\n* ## Notes\n*\n* -   If `true`, an instance re-renders on each `change` event.\n*\n* @name autoRender\n* @memberof Sparkline.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var chart = new Sparkline({\n*     'autoRender': true\n* });\n*\n* var mode = chart.autoRender;\n* // returns true\n*/\ndefineProperty( Sparkline.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Size of data buffer.\n*\n* @name bufferSize\n* @memberof Sparkline.prototype\n* @type {(PositiveInteger|null)}\n* @throws {TypeError} must be a positive integer or null\n* @throws {RangeError} must be greater than or equal to the number of data elements\n*\n* @example\n* var chart = new Sparkline();\n* chart.bufferSize = 20;\n*\n* @example\n* var chart = new Sparkline({\n*     'bufferSize': 25\n* });\n* var size = chart.bufferSize;\n* // returns 25\n*/\ndefineProperty( Sparkline.prototype, 'bufferSize', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setBufferSize,\n\t'get': getBufferSize\n});\n\n/**\n* Sparkline data.\n*\n* @name data\n* @memberof Sparkline.prototype\n* @type {(ArrayLikeObject|ndarrayLike)}\n* @throws {TypeError} must be an array-like object or an ndarray\n* @throws {RangeError} length must not exceed maximum data buffer size\n*\n* @example\n* var chart = new Sparkline();\n* chart.data = [ 1.0, 0.0, 3.14, 2.0, 5.0 ];\n*\n* @example\n* var data = [ 1.0, 0.0, 3.14, 2.0, 5.0 ];\n* var chart = new Sparkline({\n*     'data': data\n* });\n* var d = chart.data;\n* // returns [ 1.0, 0.0, 3.14, 2.0, 5.0 ]\n*/\ndefineProperty( Sparkline.prototype, 'data', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setData,\n\t'get': getData\n});\n\n/**\n* Sparkline description.\n*\n* @name description\n* @memberof Sparkline.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default ''\n*\n* @example\n* var chart = new Sparkline();\n* chart.description = 'Average daily stock market index for the past year.';\n*\n* @example\n* var chart = new Sparkline({\n*     'description': 'A description.'\n* });\n* var desc = chart.description;\n* // returns 'A description.'\n*/\ndefineProperty( Sparkline.prototype, 'description', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setDescription,\n\t'get': getDescription\n});\n\n/**\n* Accessor which defines whether a datum is defined.\n*\n* ## Notes\n*\n* -   This accessor is used to define how missing values are encoded. The default behavior is to ignore values which are `NaN`.\n*\n* @name isDefined\n* @memberof Sparkline.prototype\n* @type {Function}\n* @param {*} d - datum\n* @param {integer} i - index\n* @throws {TypeError} must be a function\n*\n* @example\n* var chart = new Sparkline();\n* chart.isDefined = function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n*\n* @example\n* function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n* var chart = new Sparkline({\n*     'isDefined': isDefined\n* });\n* var fcn = chart.isDefined;\n* // returns <Function>\n*/\ndefineProperty( Sparkline.prototype, 'isDefined', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setIsDefined,\n\t'get': getIsDefined\n});\n\n/**\n* Data label.\n*\n* @name label\n* @memberof Sparkline.prototype\n* @type {string}\n* @throws {TypeError} must be a string\n* @default ''\n*\n* @example\n* var chart = new Sparkline();\n* chart.label = 'beep';\n*\n* @example\n* var chart = new Sparkline({\n*     'label': 'beep'\n* });\n* var label = chart.label;\n* // returns 'beep'\n*/\ndefineProperty( Sparkline.prototype, 'label', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLabel,\n\t'get': getLabel\n});\n\n/**\n* Appends data.\n*\n* @name push\n* @memberof Sparkline.prototype\n* @type {Function}\n* @param {*} datum - data to append\n* @returns {Sparkline} chart instance\n*\n* @example\n* var data = [ 1.0, 0.0, 3.14, 2.0, 5.0 ];\n*\n* var chart = new Sparkline({\n*     'data': data\n* });\n*\n* chart.push( 6.0 ).push( -3.14 ).push( -1.0 );\n*/\nSparkline.prototype.push = push;\n\n/**\n* Renders a sparkline.\n*\n* @name render\n* @memberof Sparkline.prototype\n* @type {Function}\n* @returns {string} rendered sparkline\n*/\nSparkline.prototype.render = render;\n\n/**\n* Renders a sparkline.\n*\n* ## Notes\n*\n* -   This method **should** be implemented by descendants.\n*\n* @private\n* @name _render\n* @memberof Sparkline.prototype\n* @type {Function}\n* @returns {string} rendered sparkline\n*/\nSparkline.prototype._render = stub;\n\n/**\n* Serializes a sparkline as a string.\n*\n* @name toString\n* @memberof Sparkline.prototype\n* @type {Function}\n* @returns {string} serialized sparkline\n*/\nSparkline.prototype.toString = toString;\n\n// TODO: stub `toJSON` method, which, similar to `render`, should be implemented by descendants, as will be chart type specific\n\n\n// EXPORTS //\nexport default Sparkline;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Base class for sparklines.\n*\n* @module @stdlib/plot/sparklines/base/ctor\n*\n* @example\n* var Sparkline = require( '@stdlib/plot/sparklines/base/ctor' );\n*\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = Sparkline( data );\n*/\n\n// MODULES //\nvar Sparkline = __var_0__;\n\n\n// EXPORTS //\nexport default Sparkline;\n"]}