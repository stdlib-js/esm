// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import e from"./../../../vendor/events.js";import t from"./../../../vendor/debug.js";import i from"./../../../utils/define-property.js";import r from"./../../../utils/keys.js";import n from"./../../../utils/inherit.js";import s from"./../../../assert/is-plain-object.js";import a from"./../../../assert/is-array-like.js";import o from"./../../../utils/merge.js";import u from"./../../../constants/math/float64-max.js";import l from"./../../../assert/is-nan.js";import f from"./../../../assert/is-boolean.js";import h from"./../../../assert/is-positive-integer.js";import d from"./../../../assert/is-null.js";import m from"./../../../assert/is-collection.js";import p from"./../../../assert/is-ndarray-like.js";import c from"./../../../assert/is-string.js";import v from"./../../../assert/is-function.js";var g=t,b=l.isPrimitive,_=g("sparkline:accessor:is-defined");function w(e){var t=!b(e);return _("Datum: %s. Defined: %s.",JSON.stringify(e),t),t}var y=u,j=w;function S(){var e={autoRender:!1};return e.bufferSize=y,e.data=[],e.description="",e.isDefined=j,e.label="",e}var z=t,R=f.isPrimitive,N=z("sparkline:set:auto-render");function k(e){if(!R(e))throw new TypeError("invalid value. `autoRender` must be a boolean primitive. Value: `"+e+".`");e!==this._autoRender&&(N("Current value: %d.",this._autoRender),this._autoRender=e,N("New Value: %d.",this._autoRender),this.emit("change"))}function E(){return this._autoRender}var V=t,D=h.isPrimitive,C=d,O=u,T=V("sparkline:set:buffer-size");function J(e){var t=C(e);if(!D(e)&&!t)throw new TypeError("invalid value. `bufferSize` must be a positive integer or null. Value: `"+e+"`.");if(t&&(e=O),this._data&&e<this._data.length)throw new RangeError("invalid value. `bufferSize` size is smaller than the number of data elements. Number of elements: `"+this._data.length+"`. Value: `"+e+"`.");e!==this._bufferSize&&(T("Current value: %s.",this._bufferSize),this._bufferSize=e,T("New value: %s.",this._bufferSize),this.emit("change"))}function x(){return this._bufferSize}var P=t,B=m,L=p,q=P("sparkline:set:data");function A(e){var t,i;if(t=L(e)&&"function"==typeof e.iget,!B(e)&&!t)throw new TypeError("invalid value. `data` must be an array-like object or an ndarray. Value: `"+e+"`.");if(e.length>this._bufferSize)throw new RangeError("invalid value. `data` length exceeds maximum data buffer size. Buffer size: `"+this._bufferSize+"`. Length: `"+e.length+"`.");if(q("Current value: %s.",JSON.stringify(this._data)),this._data=[],t)for(i=0;i<e.length;i++)this._data.push(e.iget(i));else for(i=0;i<e.length;i++)this._data.push(e[i]);q("New value: %s.",JSON.stringify(this._data)),this.emit("change")}function F(){return this._data.slice()}var G=t,H=c.isPrimitive,I=G("plot:set:description");function K(e){if(!H(e))throw new TypeError("invalid value. `description` must be a string. Value: `"+e+".`");e!==this._description&&(I("Current value: %s.",this._description),this._description=e,I("New value: %s.",this._description),this.emit("change"))}function M(){return this._description}var Q=t,U=v,W=Q("sparkline:set:is-defined");function X(e){if(!U(e))throw new TypeError("invalid value. `isDefined` must be a function. Value: `"+e+".`");e!==this._isDefined&&(W("Current value: %s.",this._isDefined),this._isDefined=e,W("New Value: %s.",this._isDefined),this.emit("change"))}function Y(){return this._isDefined}var Z=t,$=c.isPrimitive,ee=Z("sparkline:set:label");function te(e){if(!$(e))throw new TypeError("invalid value. `label` must be a string. Value: `"+e+".`");e!==this._label&&(ee("Current value: %s.",this._label),this._label=e,ee("New Value: %s.",this._label),this.emit("change"))}function ie(){return this._label}var re=t,ne=re("sparkline:push");function se(e){return ne("Current value: %s.",JSON.stringify(this._data)),this._data.length>=this._bufferSize&&this._data.shift(),this._data.push(e),ne("New value: %s.",JSON.stringify(this._data)),this.emit("change"),this}var ae=t,oe=ae("sparkline:render");function ue(){var e;return oe("Rendering..."),e=this._render(),this.emit("render",e),e}function le(){throw new Error("method not implemented.")}function fe(){return this.render()}var he=e.EventEmitter,de=t,me=i,pe=r,ce=n,ve=s,ge=a,be=o.factory,_e=S,we=k,ye=E,je=J,Se=x,ze=A,Re=F,Ne=K,ke=M,Ee=X,Ve=Y,De=te,Ce=ie,Oe=se,Te=ue,Je=le,xe=fe,Pe=de("sparkline:main"),Be=be({extend:!1}),Le=["_autoRender","_bufferSize","_data","_description","_isDefined","_labels"];function qe(){var e,t,i,r,n,s,a;if(t=arguments.length,!(this instanceof qe))return 0===t?new qe:1===t?new qe(arguments[0]):new qe(arguments[0],arguments[1]);if(n=this,i=_e(),0===t)e={};else if(1===t){if(ge(arguments[0]))e={data:arguments[0]};else if(!ve(e=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+e+"`.")}else{if(!ve(arguments[1]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+arguments[1]+"`.");(e=arguments[1]).data=arguments[0]}for(i=Be(i,e),Pe("Creating an instance with the following configuration: %s.",JSON.stringify(i)),he.call(this),a=0;a<Le.length;a++)me(this,Le[a],{configurable:!1,enumerable:!1,writable:!0,value:null});for(r=pe(i),a=0;a<r.length;a++)this[s=r[a]]=i[s];return this.on("change",o),this.on("render",u),this;function o(){Pe("Received a change event."),n._autoRender&&n.render()}function u(){Pe("Received a render event.")}}ce(qe,he),me(qe.prototype,"autoRender",{configurable:!1,enumerable:!0,set:we,get:ye}),me(qe.prototype,"bufferSize",{configurable:!1,enumerable:!0,set:je,get:Se}),me(qe.prototype,"data",{configurable:!1,enumerable:!0,set:ze,get:Re}),me(qe.prototype,"description",{configurable:!1,enumerable:!0,set:Ne,get:ke}),me(qe.prototype,"isDefined",{configurable:!1,enumerable:!0,set:Ee,get:Ve}),me(qe.prototype,"label",{configurable:!1,enumerable:!0,set:De,get:Ce}),qe.prototype.push=Oe,qe.prototype.render=Te,qe.prototype._render=Je,qe.prototype.toString=xe;var Ae=qe;export default Ae;
//# sourceMappingURL=ctor.js.map