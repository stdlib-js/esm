{"version":3,"sources":["@stdlib/plot/sparklines/unicode/tristate/lib/render.js","@stdlib/plot/sparklines/unicode/tristate/lib/main.js","@stdlib/plot/sparklines/unicode/tristate/lib/index.js"],"names":["UPPER_BLOCK","LOWER_BLOCK","MIDDLE","MISSING_VALUE","render","str","len","d","i","this","_data","length","_isDefined","inherit","__var_0__","Sparkline","__var_1__","TristateChart","nargs","arguments","call","prototype","_render","__var_2__","tristateChart"],"mappings":"4EAwBA,IAAIA,EAAc,IACdC,EAAc,IAEdC,EAAS,IACTC,EAAgB,IAWpB,SAASC,IAER,IAAIC,EACAC,EACAC,EACAC,EAGJ,GAAa,KADbF,EAAMG,KAAKC,MAAMC,QAEhB,MAAO,GASR,IANAN,EAAM,GAMAG,EAAI,EAAGA,EAAIF,EAAKE,IACrBD,EAAIE,KAAKC,MAAOF,GACVC,KAAKG,WAAYL,EAAGC,GAGzBH,GADWE,EAAI,EACRN,EACU,IAANM,EACJL,EAEAF,EANPK,GAAOF,EAST,OAAOE,EC7CR,IAAIQ,EAAUC,EACVC,EAAYC,EAsChB,SAASC,IACR,IAAIC,EAGJ,OADAA,EAAQC,UAAUR,OACXF,gBAAgBQ,GAUR,IAAVC,EACJH,EAAUK,KAAMX,MACK,IAAVS,EACXH,EAAUK,KAAMX,KAAMU,UAAW,IAEjCJ,EAAUK,KAAMX,KAAMU,UAAW,GAAKA,UAAW,IAE3CV,MAhBS,IAAVS,EACG,IAAID,EAEG,IAAVC,EACG,IAAID,EAAeE,UAAW,IAE/B,IAAIF,EAAeE,UAAW,GAAKA,UAAW,IAgBvDN,EAASI,EAAeF,GAmBxBE,EAAcI,UAAUC,QAAUC,ECvE/B,IAACC,EAAgBV","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// See [Block Elements]{@link https://en.wikipedia.org/wiki/Block_Elements}.\nvar UPPER_BLOCK = '▀'; // U+2580\nvar LOWER_BLOCK = '▄'; // U+2584\n\nvar MIDDLE = '─'; // U+2500\nvar MISSING_VALUE = ' ';\n\n\n// MAIN //\n\n/**\n* Renders a chart.\n*\n* @private\n* @returns {string} rendered chart\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar str;\n\tvar len;\n\tvar d;\n\tvar i;\n\n\tlen = this._data.length;\n\tif ( len === 0 ) {\n\t\treturn '';\n\t}\n\t// Generate the sparkline chart, assigning a glyph to each datum...\n\tstr = '';\n\n\t// TODO: color encoding: one color for both pos and neg or two colors for separate colors\n\n\t// TODO: \"loss\" values diff color (red)\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\td = this._data[ i ];\n\t\tif ( !this._isDefined( d, i ) ) {\n\t\t\tstr += MISSING_VALUE;\n\t\t} else if ( d < 0.0 ) {\n\t\t\tstr += LOWER_BLOCK;\n\t\t} else if ( d === 0.0 ) {\n\t\t\tstr += MIDDLE;\n\t\t} else {\n\t\t\tstr += UPPER_BLOCK;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/utils/inherit';\nimport __var_1__ from '@stdlib/plot/sparklines/base/ctor';\nimport __var_2__ from './render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar inherit = __var_0__;\nvar Sparkline = __var_1__;\n\n\n// MAIN //\n\n/**\n* Unicode sparkline tristate chart constructor.\n*\n* @constructor\n* @param {(ArrayLike|ndarrayLike)} [data] - chart data\n* @param {Options} [options] - chart options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a `change` event\n* @param {(PositiveInteger|null)} [options.bufferSize] - data buffer size\n* @param {(ArrayLikeObject|ndarrayLike)} [options.data] - data\n* @param {string} [options.description=''] - chart description\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {string} [options.label] - data label\n* @throws {TypeError} must provide valid options\n* @returns {TristateChart} chart instance\n*\n* @example\n* var data = [ -1, 1, 0, 0, 1, -1, -1, 1 ];\n*\n* var chart = new TristateChart( data );\n*\n* var str = chart.render();\n* // returns '▄▀──▀▄▄▀'\n*\n* @example\n* var data = [ -1, 1, 0, 0, 1, -1, -1, 1 ];\n* var opts = {\n*     'data': data\n* };\n* var chart = new TristateChart( opts );\n*\n* var str = chart.render();\n* // returns '▄▀──▀▄▄▀'\n*/\nfunction TristateChart() {\n\tvar nargs;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof TristateChart) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new TristateChart();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new TristateChart( arguments[ 0 ] );\n\t\t}\n\t\treturn new TristateChart( arguments[ 0 ], arguments[ 1 ] );\n\t}\n\t// Invoke parent constructor...\n\tif ( nargs === 0 ) {\n\t\tSparkline.call( this );\n\t} else if ( nargs === 1 ) {\n\t\tSparkline.call( this, arguments[ 0 ] );\n\t} else {\n\t\tSparkline.call( this, arguments[ 0 ], arguments[ 1 ] );\n\t}\n\treturn this;\n}\n\n/*\n* Inherit from the `Sparkline` prototype.\n*/\ninherit( TristateChart, Sparkline );\n\n/**\n* Renders a sparkline tristate chart.\n*\n* @private\n* @name _render\n* @memberof TristateChart.prototype\n* @type {Function}\n* @returns {string} rendered sparkline tristate chart\n*\n* @example\n* var data = [ -1, 1, 0, 0, 1, -1, -1, 1 ];\n*\n* var chart = new TristateChart( data );\n*\n* var str = chart.render();\n* // returns '▄▀──▀▄▄▀'\n*/\nTristateChart.prototype._render = __var_2__; // eslint-disable-line no-underscore-dangle\n\n\n// EXPORTS //\nexport default TristateChart;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a Unicode sparkline tristate chart.\n*\n* @module @stdlib/plot/sparklines/unicode/tristate\n*\n* @example\n* var tristateChart = require( '@stdlib/plot/sparklines/unicode/tristate' );\n*\n* var data = [ -1, 1, 0, 0, 1, -1, -1, 1 ];\n*\n* var chart = tristateChart( data );\n*\n* var str = chart.render();\n* // returns '▄▀──▀▄▄▀'\n*/\n\n// MODULES //\nvar tristateChart = __var_0__;\n\n\n// EXPORTS //\nexport default tristateChart;\n"]}