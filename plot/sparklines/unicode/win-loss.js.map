{"version":3,"sources":["@stdlib/plot/sparklines/unicode/win-loss/lib/render.js","@stdlib/plot/sparklines/unicode/win-loss/lib/main.js","@stdlib/plot/sparklines/unicode/win-loss/lib/index.js"],"names":["HOME_WIN","HOME_LOSS","AWAY_WIN","AWAY_LOSS","MISSING_VALUE","render","str","len","py","d","i","this","_data","length","_isDefined","inherit","__var_0__","Sparkline","__var_1__","WinLossChart","nargs","arguments","call","prototype","_render","__var_2__","winlossChart"],"mappings":"4EAwBA,IAAIA,EAAW,CACd,IACA,KAEGC,EAAY,CACf,IACA,KAEGC,EAAW,IACXC,EAAY,IAEZC,EAAgB,IAWpB,SAASC,IAER,IAAIC,EACAC,EACAC,EACAC,EACAC,EAGJ,GAAa,KADbH,EAAMI,KAAKC,MAAMC,QAEhB,MAAO,GASR,IANAP,EAAM,GAMAI,EAAI,EAAGA,EAAIH,EAAKG,IACrBD,EAAIE,KAAKC,MAAOF,GACVC,KAAKG,WAAYL,EAAGC,GAIxBJ,GAFgB,IAANG,EACC,IAAPD,IAAoB,IAARA,EACTR,EAAU,GAEVA,EAAU,GAED,IAANS,EACJP,GACW,IAAPO,EACJN,GACW,IAAPM,EACC,IAAPD,IAAoB,IAARA,EACTP,EAAW,GAEXA,EAAW,GAGZG,EAlBPE,GAAOF,EAoBRI,EAAKC,EAEN,OAAOH,EClER,IAAIS,EAAUC,EACVC,EAAYC,EAsChB,SAASC,IACR,IAAIC,EAGJ,OADAA,EAAQC,UAAUR,OACXF,gBAAgBQ,GAUR,IAAVC,EACJH,EAAUK,KAAMX,MACK,IAAVS,EACXH,EAAUK,KAAMX,KAAMU,UAAW,IAEjCJ,EAAUK,KAAMX,KAAMU,UAAW,GAAKA,UAAW,IAE3CV,MAhBS,IAAVS,EACG,IAAID,EAEG,IAAVC,EACG,IAAID,EAAcE,UAAW,IAE9B,IAAIF,EAAcE,UAAW,GAAKA,UAAW,IAgBtDN,EAASI,EAAcF,GAmBvBE,EAAaI,UAAUC,QAAUC,ECvE9B,IAACC,EAAeV","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n// See [box-drawing characters]{@link https://en.wikipedia.org/wiki/Box-drawing_character}.\nvar HOME_WIN = [\n\t'└', // U+2514\n\t'┴'  // U+2534\n];\nvar HOME_LOSS = [\n\t'┌', // U+250C\n\t'┬'  // U+252C\n];\nvar AWAY_WIN = '╵'; // U+2575\nvar AWAY_LOSS = '╷'; // U+2577\n\nvar MISSING_VALUE = ' ';\n\n\n// MAIN //\n\n/**\n* Renders a chart.\n*\n* @private\n* @returns {string} rendered chart\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar str;\n\tvar len;\n\tvar py;\n\tvar d;\n\tvar i;\n\n\tlen = this._data.length;\n\tif ( len === 0 ) {\n\t\treturn '';\n\t}\n\t// Generate the sparkline chart, assigning a glyph to each datum...\n\tstr = '';\n\n\t// TODO: \"loss\" values diff color (red) (?)\n\n\t// TODO: specify bkgd color for streaks of a given length (?)\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\td = this._data[ i ];\n\t\tif ( !this._isDefined( d, i ) ) {\n\t\t\tstr += MISSING_VALUE;\n\t\t} else if ( d === 2 ) {\n\t\t\tif ( py === 2 || py === -2 ) {\n\t\t\t\tstr += HOME_WIN[ 1 ];\n\t\t\t} else {\n\t\t\t\tstr += HOME_WIN[ 0 ];\n\t\t\t}\n\t\t} else if ( d === 1 ) {\n\t\t\tstr += AWAY_WIN;\n\t\t} else if ( d === -1 ) {\n\t\t\tstr += AWAY_LOSS;\n\t\t} else if ( d === -2 ) {\n\t\t\tif ( py === 2 || py === -2 ) {\n\t\t\t\tstr += HOME_LOSS[ 1 ];\n\t\t\t} else {\n\t\t\t\tstr += HOME_LOSS[ 0 ];\n\t\t\t}\n\t\t} else {\n\t\t\tstr += MISSING_VALUE;\n\t\t}\n\t\tpy = d; // save the current data value to allow look-back\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/utils/inherit';\nimport __var_1__ from '@stdlib/plot/sparklines/base/ctor';\nimport __var_2__ from './render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar inherit = __var_0__;\nvar Sparkline = __var_1__;\n\n\n// MAIN //\n\n/**\n* Unicode sparkline win/loss chart constructor.\n*\n* @constructor\n* @param {(ArrayLike|ndarrayLike)} [data] - chart data\n* @param {Options} [options] - chart options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a `change` event\n* @param {(PositiveInteger|null)} [options.bufferSize] - data buffer size\n* @param {(ArrayLikeObject|ndarrayLike)} [options.data] - data\n* @param {string} [options.description=''] - chart description\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {string} [options.label] - data label\n* @throws {TypeError} must provide valid options\n* @returns {WinLossChart} chart instance\n*\n* @example\n* var data = [ -2, 1, 2, 2, 1, -1, -1, 1 ];\n*\n* var chart = new WinLossChart( data );\n*\n* var str = chart.render();\n* // returns '┌╵└┴╵╷╷╵'\n*\n* @example\n* var data = [ -2, 1, 2, 2, 1, -1, -1, 1 ];\n* var opts = {\n*     'data': data\n* };\n* var chart = new WinLossChart( opts );\n*\n* var str = chart.render();\n* // returns '┌╵└┴╵╷╷╵'\n*/\nfunction WinLossChart() {\n\tvar nargs;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof WinLossChart) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new WinLossChart();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new WinLossChart( arguments[ 0 ] );\n\t\t}\n\t\treturn new WinLossChart( arguments[ 0 ], arguments[ 1 ] );\n\t}\n\t// Invoke parent constructor...\n\tif ( nargs === 0 ) {\n\t\tSparkline.call( this );\n\t} else if ( nargs === 1 ) {\n\t\tSparkline.call( this, arguments[ 0 ] );\n\t} else {\n\t\tSparkline.call( this, arguments[ 0 ], arguments[ 1 ] );\n\t}\n\treturn this;\n}\n\n/*\n* Inherit from the `Sparkline` prototype.\n*/\ninherit( WinLossChart, Sparkline );\n\n/**\n* Renders a sparkline win/loss chart.\n*\n* @private\n* @name _render\n* @memberof WinLossChart.prototype\n* @type {Function}\n* @returns {string} rendered sparkline win/loss chart\n*\n* @example\n* var data = [ -2, 1, 2, 2, 1, -1, -1, 1 ];\n*\n* var chart = new WinLossChart( data );\n*\n* var str = chart.render();\n* // returns '┌╵└┴╵╷╷╵'\n*/\nWinLossChart.prototype._render = __var_2__; // eslint-disable-line no-underscore-dangle\n\n\n// EXPORTS //\nexport default WinLossChart;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a Unicode sparkline win/loss chart.\n*\n* @module @stdlib/plot/sparklines/unicode/win-loss\n*\n* @example\n* var winlossChart = require( '@stdlib/plot/sparklines/unicode/win-loss' );\n*\n* var data = [ -2, 1, 2, 2, 1, -1, -1, 1 ];\n*\n* var chart = winlossChart( data );\n*\n* var str = chart.render();\n* // returns '┌╵└┴╵╷╷╵'\n*/\n\n// MODULES //\nvar winlossChart = __var_0__;\n\n\n// EXPORTS //\nexport default winlossChart;\n"]}