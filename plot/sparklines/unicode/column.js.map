{"version":3,"sources":["@stdlib/plot/sparklines/unicode/column/lib/defaults.js","@stdlib/plot/sparklines/unicode/column/lib/props/infinities/set.js","@stdlib/plot/sparklines/unicode/column/lib/props/infinities/get.js","@stdlib/plot/sparklines/unicode/column/lib/props/y-max/set.js","@stdlib/plot/sparklines/unicode/column/lib/props/y-max/get.js","@stdlib/plot/sparklines/unicode/column/lib/props/y-min/set.js","@stdlib/plot/sparklines/unicode/column/lib/props/y-min/get.js","@stdlib/plot/sparklines/unicode/column/lib/render.js","@stdlib/plot/sparklines/unicode/column/lib/main.js","@stdlib/plot/sparklines/unicode/column/lib/index.js"],"names":["defaults","out","infinities","yMax","yMin","logger","__var_0__","isBoolean","__var_1__","isPrimitive","debug","set","bool","TypeError","this","_infinities","emit","get","isFiniteNumber","isNull","__var_2__","max","_yMax","PINF","NINF","len","d","i","_data","length","_isDefined","min","_yMin","abs","round","__var_3__","UNICODE_BLOCK_ELEMENTS","UNICODE_INF","MISSING_VALUE","render","blocks","range","str","idx","n","defineProperty","objectKeys","isArrayLike","mergeFcn","__var_4__","factory","pick","__var_5__","inherit","__var_6__","Sparkline","__var_7__","__var_8__","setInfinities","__var_9__","getInfinities","__var_10__","setYMax","__var_11__","getYMax","__var_12__","setYMin","__var_13__","getYMin","__var_14__","__var_15__","merge","extend","PRIVATE_PROPS","OPTIONS_PROPS","ColumnChart","options","nargs","opts","keys","key","arguments","call","JSON","stringify","configurable","enumerable","writable","value","prototype","_render","columnChart"],"mappings":"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","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\tvar out = {};\n\n\t// Boolean indicating whether to encode infinite values:\n\tout.infinities = false;\n\n\t// Maximum value of the y-axis domain:\n\tout.yMax = null;\n\n\t// Minimum value of the y-axis domain:\n\tout.yMin = null;\n\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default defaults;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:column-chart:unicode:set:infinities' );\n\n\n// MAIN //\n\n/**\n* Sets a flag indicating whether to encode infinite values.\n*\n* @private\n* @param {boolean} bool - boolean flag\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `infinities` must be a boolean primitive. Value: `' + bool + '`.' );\n\t}\n\tif ( bool !== this._infinities ) {\n\t\tdebug( 'Current value: %s.', this._infinities );\n\n\t\tthis._infinities = bool;\n\t\tdebug( 'New value: %s.', this._infinities );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a flag indicating whether to encode infinite values.\n*\n* @private\n* @returns {boolean} boolean indicating whether to encode infinite values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._infinities;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-finite';\nimport __var_2__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFiniteNumber = __var_1__.isPrimitive;\nvar isNull = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:column-chart:unicode:set:y-max' );\n\n\n// MAIN //\n\n/**\n* Sets the maximum value of the y-axis domain.\n*\n* @private\n* @param {(FiniteNumber|null)} max - maximum value\n* @throws {TypeError} must be a finite number primitive or null\n*/\nfunction set( max ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFiniteNumber( max ) && !isNull( max ) ) {\n\t\tthrow new TypeError( 'invalid value. `yMax` must be a finite number primitive or null. Value: `' + max + '`.' );\n\t}\n\tif ( max !== this._yMax ) {\n\t\tdebug( 'Current value: %s.', this._yMax );\n\n\t\tthis._yMax = max;\n\t\tdebug( 'New value: %s.', this._yMax );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/constants/math/float64-pinf';\nimport __var_1__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar PINF = __var_0__;\nvar NINF = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of the y-axis domain.\n*\n* @private\n* @returns {(FiniteNumber|null)} maximum value of the y-axis domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar max;\n\tvar len;\n\tvar d;\n\tvar i;\n\n\tif ( this._yMax === null ) {\n\t\tlen = this._data.length;\n\t\tmax = NINF;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td = this._data[ i ];\n\t\t\tif ( this._isDefined( d ) && d !== PINF && d > max ) {\n\t\t\t\tmax = d;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n\treturn this._yMax;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-finite';\nimport __var_2__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFiniteNumber = __var_1__.isPrimitive;\nvar isNull = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:column-chart:unicode:set:y-min' );\n\n\n// MAIN //\n\n/**\n* Sets the minimum value of the y-axis domain.\n*\n* @private\n* @param {(FiniteNumber|null)} min - minimum value\n* @throws {TypeError} must be a finite number primitive or null\n*/\nfunction set( min ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFiniteNumber( min ) && !isNull( min ) ) {\n\t\tthrow new TypeError( 'invalid value. `yMin` must be a finite number primitive or null. Value: `' + min + '`.' );\n\t}\n\tif ( min !== this._yMin ) {\n\t\tdebug( 'Current value: %s.', this._yMin );\n\n\t\tthis._yMin = min;\n\t\tdebug( 'New value: %s.', this._yMin );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/constants/math/float64-pinf';\nimport __var_1__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar PINF = __var_0__;\nvar NINF = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns the minimum value of the y-axis domain.\n*\n* @private\n* @returns {number} minimum value of the y-axis domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar min;\n\tvar len;\n\tvar d;\n\tvar i;\n\n\tif ( this._yMin === null ) {\n\t\tlen = this._data.length;\n\t\tmin = PINF;\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\td = this._data[ i ];\n\t\t\tif ( this._isDefined( d ) && d !== NINF && d < min ) {\n\t\t\t\tmin = d;\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}\n\treturn this._yMin;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/math/base/special/abs';\nimport __var_1__ from '@stdlib/math/base/special/round';\nimport __var_2__ from '@stdlib/constants/math/float64-pinf';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar abs = __var_0__;\nvar round = __var_1__;\nvar PINF = __var_2__;\nvar NINF = __var_3__;\n\n\n// VARIABLES //\n\n// See [Block Elements]{@link https://en.wikipedia.org/wiki/Block_Elements}.\nvar UNICODE_BLOCK_ELEMENTS = [\n\t'▁', // U+2581, lower 1/8\n\t'▂', // U+2582, lower 2/8\n\t'▃', // U+2583, lower 3/8\n\t'▄', // U+2584, lower 4/8\n\t'▅', // U+2585, lower 5/8\n\t'▆', // U+2586, lower 6/8\n\t'▇', // U+2587, lower 7/8\n\t'█'  // U+2588, full block\n];\nvar UNICODE_INF = '∞'; // U+221E\nvar MISSING_VALUE = ' ';\n\n\n// MAIN //\n\n/**\n* Renders a chart.\n*\n* @private\n* @returns {string} rendered chart\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar blocks;\n\tvar range;\n\tvar str;\n\tvar min;\n\tvar max;\n\tvar len;\n\tvar idx;\n\tvar d;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\tlen = this._data.length;\n\tif ( len === 0 ) {\n\t\treturn '';\n\t}\n\tmin = this.yMin;\n\tmax = this.yMax;\n\trange = abs( max-min );\n\n\t// Check if data is constant...\n\tif ( range === 0.0 ) {\n\t\t// If `max` is `0`, encode each finite datum as the smallest block glyph...\n\t\tif ( max === 0.0 ) {\n\t\t\tblocks = [ UNICODE_BLOCK_ELEMENTS[ 0 ] ];\n\t\t}\n\t\t// Otherwise, encode each finite datum as a mid-sized block glyph...\n\t\telse {\n\t\t\tblocks = [ UNICODE_BLOCK_ELEMENTS[ 3 ] ];\n\t\t}\n\t} else {\n\t\tblocks = UNICODE_BLOCK_ELEMENTS;\n\t}\n\t// Generate the sparkline chart, assigning a glyph to each datum...\n\tn = blocks.length - 1;\n\tstr = '';\n\n\t// TODO: color encoding: one color for both pos and neg or two colors for separate colors\n\n\t// TODO: negative values diff color (red)\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\td = this._data[ i ];\n\t\tif ( this._infinities && ( d === PINF || d === NINF ) ) {\n\t\t\tstr += UNICODE_INF;\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !this._isDefined( d, i ) || d === PINF || d === NINF ) {\n\t\t\tstr += MISSING_VALUE;\n\t\t\tcontinue;\n\t\t}\n\t\t// Normalize the datum (aka feature scaling):\n\t\tif ( range ) {\n\t\t\tv = ( d-min ) / range;\n\t\t} else {\n\t\t\tv = 0.0;\n\t\t}\n\t\t// Determine the glyph index:\n\t\tidx = round( v*n );\n\t\tif ( idx < 0 ) {\n\t\t\tidx = 0;\n\t\t} else if ( idx > n ) {\n\t\t\tidx = n;\n\t\t}\n\t\t// Add the glyph to the chart:\n\t\tstr += blocks[ idx ];\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/define-property';\nimport __var_2__ from '@stdlib/utils/keys';\nimport __var_3__ from '@stdlib/assert/is-array-like';\nimport __var_4__ from '@stdlib/utils/merge';\nimport __var_5__ from '@stdlib/utils/pick';\nimport __var_6__ from '@stdlib/utils/inherit';\nimport __var_7__ from '@stdlib/plot/sparklines/base/ctor';\nimport __var_8__ from './defaults.js';\nimport __var_9__ from './props/infinities/set.js';\nimport __var_10__ from './props/infinities/get.js';\nimport __var_11__ from './props/y-max/set.js';\nimport __var_12__ from './props/y-max/get.js';\nimport __var_13__ from './props/y-min/set.js';\nimport __var_14__ from './props/y-min/get.js';\nimport __var_15__ from './render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar defineProperty = __var_1__;\nvar objectKeys = __var_2__;\nvar isArrayLike = __var_3__;\nvar mergeFcn = __var_4__.factory;\nvar pick = __var_5__;\nvar inherit = __var_6__;\nvar Sparkline = __var_7__;\nvar defaults = __var_8__;\nvar setInfinities = __var_9__;\nvar getInfinities = __var_10__;\nvar setYMax = __var_11__;\nvar getYMax = __var_12__;\nvar setYMin = __var_13__;\nvar getYMin = __var_14__;\nvar render = __var_15__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'sparkline:column-chart:unicode:main' );\n\nvar merge = mergeFcn({\n\t'extend': false\n});\n\n// List of private properties (note: keep in alphabetical order):\nvar PRIVATE_PROPS = [\n\t'_infinities',\n\t'_yMax',\n\t'_yMin'\n];\n\n// List of options properties (note: keep in alphabetical order):\nvar OPTIONS_PROPS = [\n\t'infinities',\n\t'yMax',\n\t'yMin'\n];\n\n\n// MAIN //\n\n/**\n* Unicode sparkline column chart constructor.\n*\n* @constructor\n* @param {(ArrayLike|ndarrayLike)} [data] - chart data\n* @param {Options} [options] - chart options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a `change` event\n* @param {(PositiveInteger|null)} [options.bufferSize] - data buffer size\n* @param {(ArrayLikeObject|ndarrayLike)} [options.data] - data\n* @param {string} [options.description=''] - chart description\n* @param {boolean} [options.infinities=false] - boolean indicating whether to encode infinite values\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {string} [options.label] - data label\n* @param {(FiniteNumber|null)} [options.yMax] - maximum value of the y-axis domain\n* @param {(FiniteNumber|null)} [options.yMin] - minimum value of the y-axis domain\n* @throws {TypeError} must provide valid options\n* @returns {ColumnChart} chart instance\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = new ColumnChart( data );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n* var opts = {\n*     'data': data\n* };\n* var chart = new ColumnChart( opts );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*/\nfunction ColumnChart() {\n\tvar options;\n\tvar nargs;\n\tvar opts;\n\tvar keys;\n\tvar key;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof ColumnChart) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new ColumnChart();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new ColumnChart( arguments[ 0 ] );\n\t\t}\n\t\treturn new ColumnChart( arguments[ 0 ], arguments[ 1 ] );\n\t}\n\t// Invoke parent constructor...\n\tif ( nargs === 0 ) {\n\t\tSparkline.call( this );\n\t} else if ( nargs === 1 ) {\n\t\tSparkline.call( this, arguments[ 0 ] );\n\t} else {\n\t\tSparkline.call( this, arguments[ 0 ], arguments[ 1 ] );\n\t}\n\t// Extract chart-specific options...\n\topts = defaults();\n\tif ( nargs === 1 && !isArrayLike( arguments[ 0 ] ) ) {\n\t\toptions = arguments[ 0 ];\n\t} else if ( nargs === 2 ) {\n\t\toptions = arguments[ 1 ];\n\t} else {\n\t\toptions = {};\n\t}\n\topts = merge( opts, pick( options, OPTIONS_PROPS ) );\n\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( options ) );\n\n\t// Initialize private chart-specific properties...\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\n\t// Set chart-specific properties...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\treturn this;\n}\n\n/*\n* Inherit from the `Sparkline` prototype.\n*/\ninherit( ColumnChart, Sparkline );\n\n/**\n* Boolean indicating whether to encode infinite values.\n*\n* @name infinities\n* @memberof ColumnChart.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var chart = new ColumnChart();\n* chart.infinities = true;\n*\n* @example\n* var chart = new ColumnChart({\n*     'infinities': true\n* });\n* var bool = chart.infinities;\n* // returns true\n*/\ndefineProperty( ColumnChart.prototype, 'infinities', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setInfinities,\n\t'get': getInfinities\n});\n\n/**\n* Maximum value of the y-axis domain.\n*\n* @name yMax\n* @memberof ColumnChart.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n*\n* @example\n* var chart = new ColumnChart();\n* chart.yMax = 100.0;\n*\n* @example\n* var chart = new ColumnChart({\n*     'yMax': 314.0\n* });\n* var ymax = chart.yMax;\n* // returns 314.0\n*/\ndefineProperty( ColumnChart.prototype, 'yMax', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYMax,\n\t'get': getYMax\n});\n\n/**\n* Minimum value of the y-axis domain.\n*\n* @name yMin\n* @memberof ColumnChart.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n*\n* @example\n* var chart = new ColumnChart();\n* chart.yMin = -100.0;\n*\n* @example\n* var chart = new ColumnChart({\n*     'yMin': 3.14\n* });\n* var ymin = chart.yMin;\n* // returns 3.14\n*/\ndefineProperty( ColumnChart.prototype, 'yMin', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYMin,\n\t'get': getYMin\n});\n\n/**\n* Renders a sparkline column chart.\n*\n* @private\n* @name _render\n* @memberof ColumnChart.prototype\n* @type {Function}\n* @returns {string} rendered sparkline column chart\n*\n* @example\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = new ColumnChart( data );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*/\nColumnChart.prototype._render = render; // eslint-disable-line no-underscore-dangle\n\n\n// EXPORTS //\nexport default ColumnChart;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a Unicode sparkline column chart.\n*\n* @module @stdlib/plot/sparklines/unicode/column\n*\n* @example\n* var columnChart = require( '@stdlib/plot/sparklines/unicode/column' );\n*\n* var data = [ 1.0, 5.0, 3.0, 2.0, 4.0, 4.0, 3.0 ];\n*\n* var chart = columnChart( data );\n*\n* var str = chart.render();\n* // returns '▁█▅▃▆▆▅'\n*/\n\n// MODULES //\nvar columnChart = __var_0__;\n\n\n// EXPORTS //\nexport default columnChart;\n"]}