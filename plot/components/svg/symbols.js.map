{"version":3,"sources":["@stdlib/plot/components/svg/symbols/lib/accessors/is_defined.js","@stdlib/plot/components/svg/symbols/lib/props/symbol/set.js","@stdlib/plot/components/svg/symbols/lib/props/symbol/get.js","@stdlib/plot/components/svg/symbols/lib/props/x/set.js","@stdlib/plot/components/svg/symbols/lib/props/x/get.js","@stdlib/plot/components/svg/symbols/lib/props/y/set.js","@stdlib/plot/components/svg/symbols/lib/props/y/get.js","@stdlib/plot/components/svg/symbols/lib/props/x-scale/set.js","@stdlib/plot/components/svg/symbols/lib/props/x-scale/get.js","@stdlib/plot/components/svg/symbols/lib/props/y-scale/set.js","@stdlib/plot/components/svg/symbols/lib/props/y-scale/get.js","@stdlib/plot/components/svg/symbols/lib/props/is-defined/set.js","@stdlib/plot/components/svg/symbols/lib/props/is-defined/get.js","@stdlib/plot/components/svg/symbols/lib/props/size/set.js","@stdlib/plot/components/svg/symbols/lib/props/size/get.js","@stdlib/plot/components/svg/symbols/lib/props/opacity/set.js","@stdlib/plot/components/svg/symbols/lib/props/opacity/get.js","@stdlib/plot/components/svg/symbols/lib/props/color/set.js","@stdlib/plot/components/svg/symbols/lib/props/color/get.js","@stdlib/plot/components/svg/symbols/lib/props/label/set.js","@stdlib/plot/components/svg/symbols/lib/props/label/get.js","@stdlib/plot/components/svg/symbols/lib/props/auto-render/set.js","@stdlib/plot/components/svg/symbols/lib/props/auto-render/get.js","@stdlib/plot/components/svg/symbols/lib/props/x-pos/get.js","@stdlib/plot/components/svg/symbols/lib/props/y-pos/get.js","@stdlib/plot/components/svg/symbols/lib/render/closed_circles.js","@stdlib/plot/components/svg/symbols/lib/render/open_circles.js","@stdlib/plot/components/svg/symbols/lib/render/index.js","@stdlib/plot/components/svg/symbols/lib/symbols.js","@stdlib/plot/components/svg/symbols/lib/index.js"],"names":["logger","__var_0__","isnan","__var_1__","isPrimitive","debug","isDefined","d","bool","JSON","stringify","indexOf","SYMBOLS","__var_2__","set","symbol","TypeError","join","this","_symbol","emit","get","isArrayLike","x","_xData","y","_yData","isFunction","fcn","_xScale","_yScale","_isDefined","isNonNegativeInteger","size","_size","isNumber","self","opacity","isNum","RangeError","_opacity","isString","color","_color","label","_label","isBoolean","_autoRender","scale","xScale","px","yScale","h","ELEMENT","render","state","props","xPos","yPos","out","xi","yi","i","Array","length","namespace","property","className","attributes","cx","cy","r","stroke","fill","data-label","stroke-width","closedCircles","openCircles","__var_3__","RENDER","closed-circle","open-circle","children","vtree","f","EventEmitter","defineProperty","setReadOnly","objectKeys","__var_4__","copy","__var_5__","merge","__var_6__","isObject","__var_7__","__var_8__","defaults","__var_9__","setSymbol","__var_10__","getSymbol","__var_11__","setX","__var_12__","getX","__var_13__","setY","__var_14__","getY","__var_15__","setXScale","__var_16__","getXScale","__var_17__","setYScale","__var_18__","getYScale","__var_19__","setIsDefined","__var_20__","getIsDefined","__var_21__","setSize","__var_22__","getSize","__var_23__","setOpacity","__var_24__","getOpacity","__var_25__","setColor","__var_26__","getColor","__var_27__","setLabel","__var_28__","getLabel","__var_29__","setAutoRender","__var_30__","getAutoRender","__var_31__","getXPos","__var_32__","getYPos","__var_33__","__var_34__","PRIVATE_PROPS","Symbols","options","keys","opts","key","arguments","linear","call","configurable","enumerable","writable","value","on","onChange","onRender","args","apply","prototype","Object","create","constructor"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isnan = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:accessor:is-defined' );\n\n\n// MAIN //\n\n/**\n* Accessor function which determines whether a datum is defined.\n*\n* @private\n* @param {number} d - datum\n* @returns {boolean} boolean indicating whether a datum is defined\n*/\nfunction isDefined( d ) {\n\tvar bool = !isnan( d );\n\tdebug( 'Datum: %s. Defined: %s.', JSON.stringify( d ), bool );\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default isDefined;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './symbols.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar SYMBOLS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:symbol' );\n\n\n// MAIN //\n\n/**\n* Sets the symbol.\n*\n* @private\n* @param {string} symbol - symbol\n* @throws {TypeError} must be a supported symbol\n*/\nfunction set( symbol ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( SYMBOLS, symbol ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. `symbol` must be a supported symbol. Symbols: ['+SYMBOLS.join(',')+']. Value: `'+symbol+'`.' );\n\t}\n\tdebug( 'Current value: %d.', this._symbol );\n\n\tthis._symbol = symbol;\n\tdebug( 'New Value: %d.', this._symbol );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the symbol.\n*\n* @private\n* @returns {string} symbol\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._symbol;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-array-like';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isArrayLike = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:x' );\n\n\n// MAIN //\n\n/**\n* Sets the `x` values.\n*\n* @private\n* @param {ArrayLike} x - x values\n* @throws {TypeError} must be array-like\n*/\nfunction set( x ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isArrayLike( x ) ) {\n\t\tthrow new TypeError( 'invalid value. `x` must be array-like. Value: `' + x + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._xData ) );\n\n\tthis._xData = x;\n\tdebug( 'New Value: %s.', JSON.stringify( this._xData ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the `x` values.\n*\n* @private\n* @returns {ArrayLike} x values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xData;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-array-like';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isArrayLike = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:y' );\n\n\n// MAIN //\n\n/**\n* Sets the `y` values.\n*\n* @private\n* @param {ArrayLike} y - y values\n* @throws {TypeError} must be array-like\n*/\nfunction set( y ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isArrayLike( y ) ) {\n\t\tthrow new TypeError( 'invalid value. `y` must be array-like. Value: `' + y + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._yData ) );\n\n\tthis._yData = y;\n\tdebug( 'New Value: %s.', JSON.stringify( this._yData ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the `y` values.\n*\n* @private\n* @returns {ArrayLike} y values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yData;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:xscale' );\n\n\n// MAIN //\n\n/**\n* Sets the x-scale function.\n*\n* @private\n* @param {Function} fcn - scale\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `xScale` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tdebug( 'Current value: %s.', this._xScale );\n\n\tthis._xScale = fcn;\n\tdebug( 'New Value: %s.', this._xScale );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-scale function.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xScale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:yscale' );\n\n\n// MAIN //\n\n/**\n* Sets the y-scale function.\n*\n* @private\n* @param {Function} fcn - scale\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `yScale` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tdebug( 'Current value: %s.', this._yScale );\n\n\tthis._yScale = fcn;\n\tdebug( 'New Value: %s.', this._yScale );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-scale function.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yScale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:is-defined' );\n\n\n// MAIN //\n\n/**\n* Sets the accessor for defined values.\n*\n* @private\n* @param {Function} fcn - accessor\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `isDefined` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tdebug( 'Current value: %s.', this._isDefined );\n\n\tthis._isDefined = fcn;\n\tdebug( 'New Value: %s.', this._isDefined );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the accessor for defined values.\n*\n* @private\n* @returns {Function} accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._isDefined;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:size' );\n\n\n// MAIN //\n\n/**\n* Sets the symbol size.\n*\n* @private\n* @param {(NonNegativeInteger|Function)} size - size\n* @throws {TypeError} must be a nonnegative integer or a function\n*/\nfunction set( size ) {\n\t/* eslint-disable no-invalid-this */\n\tif (\n\t\t!isNonNegativeInteger( size ) &&\n\t\t!isFunction( size )\n\t) {\n\t\tthrow new TypeError( 'invalid value. `size` must be a nonnegative integer or a function. Value: `' + size + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._size );\n\n\tthis._size = size;\n\tdebug( 'New Value: %d.', this._size );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNumber = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Returns a function to get a symbol's size.\n*\n* @private\n* @returns {Function} size accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( isNumber( this._size ) ) {\n\t\treturn size;\n\t}\n\treturn this._size;\n\n\t/**\n\t* Returns the size.\n\t*\n\t* @private\n\t* @returns {number} size\n\t*/\n\tfunction size() {\n\t\treturn self._size; // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the symbol opacity.\n*\n* @private\n* @param {(number|Function)} opacity - opacity\n* @throws {TypeError} must be a number or a function\n* @throws {RangeError} must be a number on the interval `[0,1]`\n*/\nfunction set( opacity ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isNum = isNumber( opacity );\n\tif (\n\t\t!isNum &&\n\t\t!isFunction( opacity )\n\t) {\n\t\tthrow new TypeError( 'invalid value. `opacity` must be a number or a function. Value: `' + opacity + '.`' );\n\t}\n\tif (\n\t\tisNum &&\n\t\t(opacity < 0.0 || opacity > 1.0)\n\t) {\n\t\tthrow new RangeError( 'invalid value. `opacity` must be a number on the interval `[0,1]`. Value: `' + opacity + '`.' );\n\t}\n\tdebug( 'Current value: %d.', this._opacity );\n\n\tthis._opacity = opacity;\n\tdebug( 'New Value: %d.', this._opacity );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNumber = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Returns a function to get a symbol's opacity.\n*\n* @private\n* @returns {Function} opacity accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( isNumber( this._opacity ) ) {\n\t\treturn opacity;\n\t}\n\treturn this._opacity;\n\n\t/**\n\t* Returns the opacity.\n\t*\n\t* @private\n\t* @returns {number} opacity\n\t*/\n\tfunction opacity() {\n\t\treturn self._opacity; // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:color' );\n\n\n// MAIN //\n\n/**\n* Sets the color.\n*\n* @private\n* @param {(string|Function)} color - color\n* @throws {TypeError} must be a string primitive or function\n*/\nfunction set( color ) {\n\t/* eslint-disable no-invalid-this */\n\tif (\n\t\t!isString( color ) &&\n\t\t!isFunction( color )\n\t) {\n\t\tthrow new TypeError( 'invalid value. `color` must be a string primitive or a function. Value: `' + color + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._color );\n\n\tthis._color = color;\n\tdebug( 'New Value: %d.', this._color );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Returns a function to get a symbol's color.\n*\n* @private\n* @returns {Function} color accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( isString( this._color ) ) {\n\t\treturn color;\n\t}\n\treturn this._color;\n\n\t/**\n\t* Returns the color.\n\t*\n\t* @private\n\t* @returns {string} color\n\t*/\n\tfunction color() {\n\t\treturn self._color; // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:label' );\n\n\n// MAIN //\n\n/**\n* Sets the label.\n*\n* @private\n* @param {(string|Function)} label - label\n* @throws {TypeError} must be a string primitive or a function\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif (\n\t\t!isString( label ) &&\n\t\t!isFunction( label )\n\t) {\n\t\tthrow new TypeError( 'invalid value. `label` must be a string primitive or a function. Value: `' + label + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._label );\n\n\tthis._label = label;\n\tdebug( 'New Value: %d.', this._label );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Returns a function to get a symbol's label.\n*\n* @private\n* @returns {Function} label accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( isString( this._label ) ) {\n\t\treturn label;\n\t}\n\treturn this._label;\n\n\t/**\n\t* Returns the label.\n\t*\n\t* @private\n\t* @returns {string} label\n\t*/\n\tfunction label() {\n\t\treturn self._label; // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:set:auto-render' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._autoRender );\n\n\tthis._autoRender = bool;\n\tdebug( 'New Value: %d.', this._autoRender );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:xpos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to x coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.xScale;\n\n\treturn xPos;\n\t/**\n\t* Maps a value to a x coordinate value.\n\t*\n\t* @private\n\t* @param {*} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction xPos( d ) {\n\t\tvar px = scale( d );\n\t\tdebug( 'Value: %d => Pixel: %d.', d, px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:ypos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to y coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.yScale;\n\treturn yPos;\n\n\t/**\n\t* Maps a value to a y coordinate value.\n\t*\n\t* @private\n\t* @param {*} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction yPos( d ) {\n\t\tvar px = scale( d );\n\t\tdebug( 'Value: %d => Pixel: %d.', d, px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:render:closed-circles' );\nvar ELEMENT = 'circle';\n\n\n// MAIN //\n\n/**\n* Renders data as a closed circles.\n*\n* @private\n* @param {Object} state - state\n* @returns {Array<VTree>} array of virtual trees\n*/\nfunction render( state ) {\n\tvar isDefined;\n\tvar opacity;\n\tvar label;\n\tvar color;\n\tvar props;\n\tvar size;\n\tvar xPos;\n\tvar yPos;\n\tvar out;\n\tvar xi;\n\tvar yi;\n\tvar x;\n\tvar y;\n\tvar i;\n\n\tdebug( 'Rendering closed circles...' );\n\n\tisDefined = state.isDefined;\n\topacity = state.opacity;\n\tlabel = state.label;\n\tcolor = state.color;\n\tsize = state.size;\n\txPos = state.xPos;\n\tyPos = state.yPos;\n\tx = state.x;\n\ty = state.y;\n\n\tout = new Array( x.length );\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\txi = x[ i ];\n\t\tyi = y[ i ];\n\t\tif ( !isDefined( xi ) || !isDefined( yi ) ) {\n\t\t\tdebug( 'Datum %d is undefined. [%s,%s].', i, xi, yi );\n\t\t\tcontinue;\n\t\t}\n\t\tdebug( 'Rendering datum %d...', i );\n\t\tprops = {\n\t\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t\t'property': 'closed-circle',\n\t\t\t'className': 'closed-circle',\n\t\t\t'attributes': {\n\t\t\t\t'cx': xPos( xi ),\n\t\t\t\t'cy': yPos( yi ),\n\t\t\t\t'r': size( xi, yi, i ) / 2,\n\t\t\t\t'stroke': 'none',\n\t\t\t\t'opacity': opacity( xi, yi, i ),\n\t\t\t\t'fill': color( xi, yi, i ),\n\t\t\t\t'data-label': label( xi, yi, i )\n\t\t\t}\n\t\t};\n\t\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\t\tout[ i ] = h( ELEMENT, props, [] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:render:open-circles' );\nvar ELEMENT = 'circle';\n\n\n// MAIN //\n\n/**\n* Renders data as a open circles.\n*\n* @private\n* @param {Object} state - state\n* @returns {Array<VTree>} array of virtual trees\n*/\nfunction render( state ) {\n\tvar isDefined;\n\tvar opacity;\n\tvar label;\n\tvar color;\n\tvar props;\n\tvar size;\n\tvar xPos;\n\tvar yPos;\n\tvar out;\n\tvar xi;\n\tvar yi;\n\tvar x;\n\tvar y;\n\tvar i;\n\n\tdebug( 'Rendering open circles...' );\n\n\tisDefined = state.isDefined;\n\topacity = state.opacity;\n\tlabel = state.label;\n\tcolor = state.color;\n\tsize = state.size;\n\txPos = state.xPos;\n\tyPos = state.yPos;\n\tx = state.x;\n\ty = state.y;\n\n\tout = new Array( x.length );\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\txi = x[ i ];\n\t\tyi = y[ i ];\n\t\tif ( !isDefined( xi ) || !isDefined( yi ) ) {\n\t\t\tdebug( 'Datum %d is undefined. [%s,%s].', i, xi, yi );\n\t\t\tcontinue;\n\t\t}\n\t\tdebug( 'Rendering datum %d...', i );\n\t\tprops = {\n\t\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t\t'property': 'open-circle',\n\t\t\t'className': 'open-circle',\n\t\t\t'attributes': {\n\t\t\t\t'cx': xPos( xi ),\n\t\t\t\t'cy': yPos( yi ),\n\t\t\t\t'r': size( xi, yi, i ) / 2,\n\t\t\t\t'fill': 'none',\n\t\t\t\t'opacity': opacity( xi, yi, i ),\n\t\t\t\t'stroke': color( xi, yi, i ),\n\t\t\t\t'stroke-width': 1, // TODO: make property? I certainly don't see a good reason or use case why this should be a function.\n\t\t\t\t'data-label': label( xi, yi, i )\n\t\t\t}\n\t\t};\n\t\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\t\tout[ i ] = h( ELEMENT, props, [] );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './closed_circles.js';\nimport __var_3__ from './open_circles.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar closedCircles = __var_2__;\nvar openCircles = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:render' );\nvar ELEMENT = 'g';\nvar RENDER = {\n\t'closed-circle': closedCircles,\n\t'open-circle': openCircles\n};\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @returns {VTree} virtual DOM tree\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar children;\n\tvar props;\n\tvar vtree;\n\tvar f;\n\n\tdebug( 'Rendering...' );\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'property': 'symbols',\n\t\t'className': 'symbols'\n\t};\n\tdebug( 'Symbol: %s.', this.symbol );\n\n\tf = RENDER[ this.symbol ];\n\tchildren = f( this );\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\tvtree = h( ELEMENT, props, children );\n\n\t// Announce that a new tree has been rendered:\n\tthis.emit( '_render', vtree );\n\n\treturn vtree;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-property';\nimport __var_3__ from '@stdlib/utils/define-read-only-property';\nimport __var_4__ from '@stdlib/utils/keys';\nimport __var_5__ from '@stdlib/utils/copy';\nimport __var_6__ from '@stdlib/utils/merge';\nimport __var_7__ from '@stdlib/assert/is-plain-object';\nimport __var_8__ from './accessors/is_defined.js';\nimport __var_9__ from './defaults.json';\nimport __var_10__ from './props/symbol/set.js';\nimport __var_11__ from './props/symbol/get.js';\nimport __var_12__ from './props/x/set.js';\nimport __var_13__ from './props/x/get.js';\nimport __var_14__ from './props/y/set.js';\nimport __var_15__ from './props/y/get.js';\nimport __var_16__ from './props/x-scale/set.js';\nimport __var_17__ from './props/x-scale/get.js';\nimport __var_18__ from './props/y-scale/set.js';\nimport __var_19__ from './props/y-scale/get.js';\nimport __var_20__ from './props/is-defined/set.js';\nimport __var_21__ from './props/is-defined/get.js';\nimport __var_22__ from './props/size/set.js';\nimport __var_23__ from './props/size/get.js';\nimport __var_24__ from './props/opacity/set.js';\nimport __var_25__ from './props/opacity/get.js';\nimport __var_26__ from './props/color/set.js';\nimport __var_27__ from './props/color/get.js';\nimport __var_28__ from './props/label/set.js';\nimport __var_29__ from './props/label/get.js';\nimport __var_30__ from './props/auto-render/set.js';\nimport __var_31__ from './props/auto-render/get.js';\nimport __var_32__ from './props/x-pos/get.js';\nimport __var_33__ from './props/y-pos/get.js';\nimport __var_34__ from './render/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: improve JSDoc examples\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nimport {scaleLinear as linear} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\nvar defineProperty = __var_2__;\nvar setReadOnly = __var_3__;\nvar objectKeys = __var_4__;\nvar copy = __var_5__;\nvar merge = __var_6__;\nvar isObject = __var_7__;\nvar isDefined = __var_8__;\nvar defaults = __var_9__;\nvar setSymbol = __var_10__;\nvar getSymbol = __var_11__;\nvar setX = __var_12__;\nvar getX = __var_13__;\nvar setY = __var_14__;\nvar getY = __var_15__;\nvar setXScale = __var_16__;\nvar getXScale = __var_17__;\nvar setYScale = __var_18__;\nvar getYScale = __var_19__;\nvar setIsDefined = __var_20__;\nvar getIsDefined = __var_21__;\nvar setSize = __var_22__;\nvar getSize = __var_23__;\nvar setOpacity = __var_24__;\nvar getOpacity = __var_25__;\nvar setColor = __var_26__;\nvar getColor = __var_27__;\nvar setLabel = __var_28__;\nvar getLabel = __var_29__;\nvar setAutoRender = __var_30__;\nvar getAutoRender = __var_31__;\nvar getXPos = __var_32__;\nvar getYPos = __var_33__;\nvar render = __var_34__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'symbols:main' );\nvar PRIVATE_PROPS = [\n\t'_autoRender',\n\t'_color',\n\t'_isDefined',\n\t'_label',\n\t'_opacity',\n\t'_size',\n\t'_symbol',\n\t'_xData',\n\t'_xScale',\n\t'_yData',\n\t'_yScale'\n];\n\n\n// MAIN //\n\n/**\n* Symbols constructor.\n*\n* @constructor\n* @param {Options} options - constructor options\n* @param {ArrayLike} [options.x=[]] - x-values\n* @param {ArrayLike} [options.y=[]] - y-values\n* @param {Function} [options.xScale] - x scale function\n* @param {Function} [options.yScale] - y scale function\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {string} [options.symbol='closed-circle'] - symbol\n* @param {(number|Function)} [options.opacity=0.9] - opacity\n* @param {(string|Function)} [options.color] - color\n* @param {(string|Function)} [options.label] - label\n* @param {(NonNegativeInteger|Function)} [options.size=6] - symbol size\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a change event\n* @throws {TypeError} must provide valid options\n* @returns {Symbols} Symbols instance\n*\n* @example\n* var symbols = new Symbols({\n*     'x': [0.1,0.2,0.3],\n*     'y': [0.4,0.5,0.6]\n* });\n*/\nfunction Symbols( options ) {\n\tvar self;\n\tvar keys;\n\tvar opts;\n\tvar key;\n\tvar i;\n\tif ( !( this instanceof Symbols ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new Symbols( options );\n\t\t}\n\t\treturn new Symbols();\n\t}\n\tself = this;\n\n\topts = copy( defaults );\n\topts.isDefined = isDefined;\n\topts.xScale = linear();\n\topts.yScale = linear();\n\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. `options` argument must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\topts = merge( opts, options );\n\t}\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\t// Set options...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\n\tthis.on( 'change', onChange );\n\tthis.on( '_render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) { // eslint-disable-line no-underscore-dangle\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Re-emits a render event.\n\t*\n\t* @private\n\t*/\n\tfunction onRender() {\n\t\tvar args;\n\t\tvar i;\n\t\tdebug( 'Received a render event. Re-emitting...' );\n\t\targs = new Array( arguments.length+1 );\n\t\targs[ 0 ] = 'render';\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i+1 ] = arguments[ i ];\n\t\t}\n\t\tself.emit.apply( self, args );\n\t}\n}\n\n/*\n* Create a prototype which inherits from the parent prototype.\n*/\nSymbols.prototype = Object.create( EventEmitter.prototype );\n\n/*\n* Set the constructor.\n*/\nSymbols.prototype.constructor = Symbols;\n\n/**\n* Symbol.\n*\n* @name symbol\n* @memberof Symbols.prototype\n* @type {string}\n* @throws {TypeError} must be a supported symbol\n* @default 'closed-circle'\n*\n* @example\n* var symbols = new Symbols({\n*     'symbol': 'open-circle'\n* });\n*\n* var symbol = symbols.symbol;\n* // returns 'open-circle'\n*/\ndefineProperty( Symbols.prototype, 'symbol', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setSymbol,\n\t'get': getSymbol\n});\n\n/**\n* `x` values.\n*\n* @name x\n* @memberof Symbols.prototype\n* @type {ArrayLike}\n* @throws {TypeError} must be array-like\n* @default []\n*\n* @example\n* var symbols = new Symbols({\n*     'x': [0.1,0.2,0.3]\n* });\n*\n* var x = symbols.x;\n* // returns [0.1,0.2,0.3]\n*/\ndefineProperty( Symbols.prototype, 'x', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setX,\n\t'get': getX\n});\n\n/**\n* `y` values.\n*\n* @name y\n* @memberof Symbols.prototype\n* @type {ArrayLike}\n* @throws {TypeError} must be array-like\n* @default []\n*\n* @example\n* var symbols = new Symbols({\n*     'y': [0.4,0.5,0.6]\n* });\n*\n* var y = symbols.y;\n* // returns [0.4,0.5,0.6]\n*/\ndefineProperty( Symbols.prototype, 'y', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setY,\n\t'get': getY\n});\n\n/**\n* `x` scale function.\n*\n* @name xScale\n* @memberof Symbols.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var symbols = new Symbols({\n*     'xScale': function scale(){}\n* });\n*\n* var f = symbols.xScale;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'xScale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXScale,\n\t'get': getXScale\n});\n\n/**\n* `y` scale function.\n*\n* @name yScale\n* @memberof Symbols.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var symbols = new Symbols({\n*     'yScale': function scale(){}\n* });\n*\n* var f = symbols.yScale;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'yScale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYScale,\n\t'get': getYScale\n});\n\n/**\n* Accessor which defines whether a datum is defined. This accessor is used to define how missing values are encoded. The default behavior is to ignore values which are `NaN`.\n*\n* @name isDefined\n* @memberof Symbols.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var symbols = new Symbols();\n* symbols.isDefined = function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n*\n* @example\n* function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n* var symbols = new Symbols({\n*     'isDefined': isDefined\n* });\n* var fcn = symbols.isDefined;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'isDefined', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setIsDefined,\n\t'get': getIsDefined\n});\n\n/**\n* Symbol size. When retrieved, the returned value is a size accessor.\n*\n* @name size\n* @memberof Symbols.prototype\n* @type {(NonNegativeInteger|Function)}\n* @throws {TypeError} must be a nonnegative integer or function\n* @default 6\n*\n* @example\n* var symbols = new Symbols({\n*     'size': 5\n* });\n*\n* var size = symbols.size;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'size', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setSize,\n\t'get': getSize\n});\n\n/**\n* Symbol opacity. When retrieved, the returned value is an opacity accessor.\n*\n* @name opacity\n* @memberof Symbols.prototype\n* @type {(number|Function)}\n* @throws {TypeError} must be a number or function\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default 0.9\n*\n* @example\n* var symbols = new Symbols({\n*     'opacity': 0.5\n* });\n*\n* var opacity = symbols.opacity;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'opacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setOpacity,\n\t'get': getOpacity\n});\n\n/**\n* Symbols color. When retrieved, the returned value is a color accessor.\n*\n* @name color\n* @memberof Symbols.prototype\n* @type {(string|Function)}\n* @throws {TypeError} must be a primitive string or function\n*\n* @example\n* var symbols = new Symbols({\n*     'color': 'steelblue'\n* });\n*\n* var color = symbols.color;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'color', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setColor,\n\t'get': getColor\n});\n\n/**\n* Symbols label. When retrieved, the returned value is a label accessor.\n*\n* @name label\n* @memberof Symbols.prototype\n* @type {(string|Function)}\n* @throws {TypeError} must be a primitive string or function\n*\n* @example\n* var symbols = new Symbols({\n*     'label': 'group-1'\n* });\n*\n* var label = symbols.label;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'label', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLabel,\n\t'get': getLabel\n});\n\n/**\n* Rendering mode. If `true`, an instance re-renders on each change event.\n*\n* @name autoRender\n* @memberof Symbols.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var symbols = new Symbols({\n*     'autoRender': true\n* });\n*\n* var mode = symbols.autoRender;\n* // returns true\n*/\ndefineProperty( Symbols.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Function to map values to x coordinate values.\n*\n* @name xPos\n* @memberof Symbols.prototype\n* @type {Function}\n*\n* @example\n* var symbols = new Symbols();\n* var xPos = symbols.xPos;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'xPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXPos\n});\n\n/**\n* Function to map values to y coordinate values.\n*\n* @name yPos\n* @memberof Symbols.prototype\n* @type {Function}\n*\n* @example\n* var symbols = new Symbols();\n* var yPos = symbols.yPos;\n* // returns <Function>\n*/\ndefineProperty( Symbols.prototype, 'yPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYPos\n});\n\n/**\n* Renders a virtual DOM tree.\n*\n* @name render\n* @memberof Symbols.prototype\n* @type {Function}\n* @returns {VTree} virtual tree\n*\n* @example\n* var symbols = new Symbols();\n*\n* var out = symbols.render();\n*/\nsetReadOnly( Symbols.prototype, 'render', render );\n\n\n// EXPORTS //\nexport default Symbols;\n","import __var_0__ from './symbols.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* SVG symbols.\n*\n* @module @stdlib/plot/components/svg/symbols\n*\n* @example\n* var Symbols = require( '@stdlib/plot/components/svg/symbols' );\n*\n* var symbols = new Symbols({\n*     'x': [0.1,0.2,0.3],\n*     'y': [0.4,0.5,0.6]\n* });\n*/\n\n// MODULES //\nvar Symbols = __var_0__;\n\n\n// EXPORTS //\nexport default Symbols;\n"]}