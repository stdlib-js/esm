{"version":3,"sources":["@stdlib/plot/components/svg/axis/lib/validators/auto_render.js","@stdlib/plot/components/svg/axis/lib/validators/label.js","@stdlib/plot/components/svg/axis/lib/validators/num_ticks.js","@stdlib/plot/components/svg/axis/lib/validators/orientation.js","@stdlib/plot/components/svg/axis/lib/validators/scale.js","@stdlib/plot/components/svg/axis/lib/validators/tick_format.js","@stdlib/plot/components/svg/axis/lib/validators/tick_padding.js","@stdlib/plot/components/svg/axis/lib/validators/ticks.js","@stdlib/plot/components/svg/axis/lib/validators/tick_size.js","@stdlib/plot/components/svg/axis/lib/validators/inner_tick_size.js","@stdlib/plot/components/svg/axis/lib/validators/outer_tick_size.js","@stdlib/plot/components/svg/axis/lib/validators/index.js","@stdlib/plot/components/svg/axis/lib/validate.js","@stdlib/plot/components/svg/axis/lib/events/index.js","@stdlib/plot/components/svg/axis/lib/props/scale/set.js","@stdlib/plot/components/svg/axis/lib/props/scale/get.js","@stdlib/plot/components/svg/axis/lib/props/orientation/set.js","@stdlib/plot/components/svg/axis/lib/props/orientation/get.js","@stdlib/plot/components/svg/axis/lib/props/label/set.js","@stdlib/plot/components/svg/axis/lib/props/label/get.js","@stdlib/plot/components/svg/axis/lib/props/ticks/set.js","@stdlib/plot/components/svg/axis/lib/props/ticks/get.js","@stdlib/plot/components/svg/axis/lib/props/num-ticks/set.js","@stdlib/plot/components/svg/axis/lib/props/num-ticks/get.js","@stdlib/plot/components/svg/axis/lib/props/tick-format/set.js","@stdlib/plot/components/svg/axis/lib/props/tick-format/get.js","@stdlib/plot/components/svg/axis/lib/props/tick-size/set.js","@stdlib/plot/components/svg/axis/lib/props/tick-size/get.js","@stdlib/plot/components/svg/axis/lib/props/inner-tick-size/set.js","@stdlib/plot/components/svg/axis/lib/props/inner-tick-size/get.js","@stdlib/plot/components/svg/axis/lib/props/outer-tick-size/set.js","@stdlib/plot/components/svg/axis/lib/props/outer-tick-size/get.js","@stdlib/plot/components/svg/axis/lib/props/tick-padding/set.js","@stdlib/plot/components/svg/axis/lib/props/tick-padding/get.js","@stdlib/plot/components/svg/axis/lib/props/tick-spacing/get.js","@stdlib/plot/components/svg/axis/lib/props/tick-dir/get.js","@stdlib/plot/components/svg/axis/lib/props/tick-pos/center.js","@stdlib/plot/components/svg/axis/lib/props/tick-pos/get.js","@stdlib/plot/components/svg/axis/lib/props/auto-render/set.js","@stdlib/plot/components/svg/axis/lib/props/auto-render/get.js","@stdlib/plot/components/svg/axis/lib/utils/text_anchor.js","@stdlib/plot/components/svg/axis/lib/components/domain.js","@stdlib/plot/components/svg/axis/lib/utils/translate_x.js","@stdlib/plot/components/svg/axis/lib/utils/translate_y.js","@stdlib/plot/components/svg/axis/lib/utils/tick_transform.js","@stdlib/plot/components/svg/axis/lib/utils/x_attr.js","@stdlib/plot/components/svg/axis/lib/utils/y_attr.js","@stdlib/plot/components/svg/axis/lib/components/line.js","@stdlib/plot/components/svg/axis/lib/utils/text_dy.js","@stdlib/plot/components/svg/axis/lib/components/text.js","@stdlib/plot/components/svg/axis/lib/components/tick.js","@stdlib/plot/components/svg/axis/lib/components/ticks.js","@stdlib/plot/components/svg/axis/lib/utils/label_transform.js","@stdlib/plot/components/svg/axis/lib/utils/label_x_pos.js","@stdlib/plot/components/svg/axis/lib/utils/label_y_pos.js","@stdlib/plot/components/svg/axis/lib/components/label.js","@stdlib/plot/components/svg/axis/lib/components/index.js","@stdlib/plot/components/svg/axis/lib/methods/render.js","@stdlib/plot/components/svg/axis/lib/axis.js","@stdlib/plot/components/svg/axis/lib/index.js"],"names":["isBoolean","__var_0__","isPrimitive","test","v","TypeError","isString","isNull","isNonNegativeInteger","__var_1__","indexOf","ORIENTATIONS","join","isFunction","__var_2__","isArray","autoRender","label","numTicks","orientation","__var_3__","scale","__var_4__","tickFormat","__var_5__","tickPadding","__var_6__","ticks","__var_7__","tickSize","__var_8__","innerTickSize","__var_9__","outerTickSize","__var_10__","validators","objectKeys","isObject","hasOwnProp","KEYS","validate","opts","options","err","key","val","i","length","EVENTS","get","prop","logger","events","isValid","debug","CHANGE_EVENT","set","fcn","this","_scale","emit","orient","_orientation","_label","JSON","stringify","_ticks","slice","_numTicks","_tickFormat","domain","num","fmt","identity","format","size","_tickSize","_innerTickSize","_outerTickSize","padding","_tickPadding","center","width","bandwidth","d","pos","copy","bool","_autoRender","textAnchor","h","ELEMENT","render","ctx","stroke","range0","range1","offset","range","props","tickDir","namespace","property","className","attributes","fill","stroke-width","translateX","t","translateY","tickTransform","xAttr","yAttr","x","y","dy","txt","tickSpacing","line","text","transform","children","opacity","Array","tick","values","out","labelTransform","labelXPos","labelYPos","text-anchor","font-size","font-family","unshift","push","components","vtree","EventEmitter","defineProperty","setReadOnly","defaults","setScale","getScale","setOrientation","getOrientation","setLabel","__var_11__","getLabel","__var_12__","setTicks","__var_13__","getTicks","__var_14__","setNumTicks","__var_15__","getNumTicks","__var_16__","setTickFormat","__var_17__","getTickFormat","__var_18__","setTickSize","__var_19__","getTickSize","__var_20__","setInnerTickSize","__var_21__","getInnerTickSize","__var_22__","setOuterTickSize","__var_23__","getOuterTickSize","__var_24__","setTickPadding","__var_25__","getTickPadding","__var_26__","getTickSpacing","__var_27__","getTickDir","__var_28__","getTickPos","__var_29__","setAutoRender","__var_30__","getAutoRender","__var_31__","__var_32__","Axis","self","call","configurable","enumerable","writable","value","linear","on","args","arguments","apply","prototype","Object","create","constructor"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isBoolean = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `autoRender`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isBoolean( v ) ) {\n\t\treturn new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `label`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isString( v ) ) {\n\t\treturn new TypeError( 'invalid value. `label` must be a string. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-null';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `numTicks`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif (\n\t\t!isNull( v ) &&\n\t\t!isNonNegativeInteger( v )\n\t) {\n\t\treturn new TypeError( 'invalid value. `numTicks` must be a nonnegative integer or null. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/utils/index-of';\nimport __var_1__ from './../etc/orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar indexOf = __var_0__;\nvar ORIENTATIONS = __var_1__;\n\n\n// MAIN //\n\n/**\n* Validates `orientation`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( indexOf( ORIENTATIONS, v ) === -1 ) {\n\t\treturn new TypeError( 'invalid value. `orientation` must be one of `[' + ORIENTATIONS.join(',') + ']`. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\n\n\n// MAIN //\n\n/**\n* Validates `scale`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isFunction( v ) ) {\n\t\treturn new TypeError( 'invalid value. `scale` must be a function. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-null';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// MAIN //\n\n/**\n* Validates `tickFormat`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif (\n\t\t!isNull( v ) &&\n\t\t!isString( v ) &&\n\t\t!isFunction( v )\n\t) {\n\t\treturn new TypeError( 'invalid value. `tickFormat` must be a string, function, or null. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNonNegativeInteger = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `tickPadding`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isNonNegativeInteger( v ) ) {\n\t\treturn new TypeError( 'invalid value. `tickPadding` must be a nonnegative integer. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-null';\nimport __var_1__ from '@stdlib/assert/is-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\nvar isArray = __var_1__;\n\n\n// MAIN //\n\n/**\n* Validates `ticks`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif (\n\t\t!isNull( v ) &&\n\t\t!isArray( v )\n\t) {\n\t\treturn new TypeError( 'invalid value. `ticks` must be either null or an array. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNonNegativeInteger = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `tickSize`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isNonNegativeInteger( v ) ) {\n\t\treturn new TypeError( 'invalid value. `tickSize` must be a nonnegative integer. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNonNegativeInteger = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `innerTickSize`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isNonNegativeInteger( v ) ) {\n\t\treturn new TypeError( 'invalid value. `innerTickSize` must be a nonnegative integer. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNonNegativeInteger = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `outerTickSize`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isNonNegativeInteger( v ) ) {\n\t\treturn new TypeError( 'invalid value. `outerTickSize` must be a nonnegative integer. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from './auto_render.js';\nimport __var_1__ from './label.js';\nimport __var_2__ from './num_ticks.js';\nimport __var_3__ from './orientation.js';\nimport __var_4__ from './scale.js';\nimport __var_5__ from './tick_format.js';\nimport __var_6__ from './tick_padding.js';\nimport __var_7__ from './ticks.js';\nimport __var_8__ from './tick_size.js';\nimport __var_9__ from './inner_tick_size.js';\nimport __var_10__ from './outer_tick_size.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar autoRender = __var_0__;\nvar label = __var_1__;\nvar numTicks = __var_2__;\nvar orientation = __var_3__;\nvar scale = __var_4__;\nvar tickFormat = __var_5__;\nvar tickPadding = __var_6__;\nvar ticks = __var_7__;\nvar tickSize = __var_8__;\nvar innerTickSize = __var_9__;\nvar outerTickSize = __var_10__;\n\n\n// MAIN //\n\nvar validators = {\n\t'autoRender': autoRender,\n\t'label': label,\n\t'numTicks': numTicks,\n\t'orientation': orientation,\n\t'scale': scale,\n\t'tickFormat': tickFormat,\n\t'tickPadding': tickPadding,\n\t'ticks': ticks,\n\t'tickSize': tickSize,\n\t'innerTickSize': innerTickSize,\n\t'outerTickSize': outerTickSize\n};\n\n\n// EXPORTS //\nexport default validators;\n","import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/assert/is-plain-object';\nimport __var_2__ from '@stdlib/assert/has-own-property';\nimport __var_3__ from './validators/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar isObject = __var_1__;\nvar hasOwnProp = __var_2__;\nvar validators = __var_3__;\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( validators );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {Function} [options.scale] - scale function\n* @param {string} [options.orientation] - axis orientation\n* @param {string} [options.label] - axis label\n* @param {(Array|null)} [options.ticks] - tick values\n* @param {(NonNegativeInteger|null)} [options.numTicks] - number of ticks\n* @param {(null|string|Function)} [options.tickFormat] - tick format\n* @param {NonNegativeInteger} [options.tickSize] - tick size\n* @param {NonNegativeInteger} [options.innerTickSize] - inner tick size\n* @param {NonNegativeInteger} [options.outerTickSize] - outer tick size\n* @param {NonNegativeInteger} [options.tickPadding] - tick padding\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'scale': function scale(){},\n*     'orientation': 'left',\n*     'tickSize': 10\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tvar err;\n\tvar key;\n\tvar val;\n\tvar i;\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t}\n\tfor ( i = 0; i < KEYS.length; i++ ) {\n\t\tkey = KEYS[ i ];\n\t\tif ( hasOwnProp( options, key ) ) {\n\t\t\tval = options[ key ];\n\t\t\terr = validators[ key ]( val );\n\t\t\tif ( err ) {\n\t\t\t\treturn err;\n\t\t\t}\n\t\t\topts[ key ] = val;\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default validate;\n","import __var_0__ from './events.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EVENTS = __var_0__;\n\n\n// MAIN //\n\n/**\n* Provided a property, returns a corresponding event name for when a property value changes.\n*\n* @private\n* @param {string} prop - property\n* @returns {string} event name\n*/\nfunction get( prop ) {\n\treturn EVENTS[ prop ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/scale.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:scale' );\nvar CHANGE_EVENT = events( 'scale' );\n\n\n// MAIN //\n\n/**\n* Sets the scale function.\n*\n* @private\n* @param {Function} fcn - scale\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( fcn );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %s.', this._scale );\n\n\tthis._scale = fcn;\n\tdebug( 'New Value: %s.', this._scale );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the scale function.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._scale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/orientation.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:orientation' );\nvar CHANGE_EVENT = events( 'orientation' );\n\n\n// MAIN //\n\n/**\n* Sets the axis orientation.\n*\n* @private\n* @param {string} orient - axis orientation\n* @throws {TypeError} must be a string\n*/\nfunction set( orient ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( orient );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %s.', this._orientation );\n\n\tthis._orientation = orient;\n\tdebug( 'New Value: %s.', this._orientation );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the axis orientation.\n*\n* @private\n* @returns {string} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._orientation;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/label.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:xlabel' );\nvar CHANGE_EVENT = events( 'label' );\n\n\n// MAIN //\n\n/**\n* Sets the axis label.\n*\n* @private\n* @param {string} label - axis label\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( label );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %s.', this._label );\n\n\tthis._label = label;\n\tdebug( 'New value: %s.', this._label );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the axis label.\n*\n* @private\n* @returns {string} label\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._label;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from './../../events/index.js';\nimport __var_3__ from './../../validators/ticks.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar events = __var_2__;\nvar isValid = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:ticks' );\nvar CHANGE_EVENT = events( 'ticks' );\n\n\n// MAIN //\n\n/**\n* Sets the axis tick values.\n*\n* @private\n* @param {(Array|null)} ticks - tick values\n* @throws {TypeError} must be an array or null\n*/\nfunction set( ticks ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( ticks );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._ticks ) );\n\n\tif ( isNull( ticks ) ) {\n\t\tthis._ticks = ticks;\n\t} else {\n\t\tthis._ticks = ticks.slice();\n\t}\n\tdebug( 'New Value: %s.', JSON.stringify( this._ticks ) );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns the axis tick values.\n*\n* @private\n* @returns {Array} ticks\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tif ( isNull( this._ticks ) ) {\n\t\tif ( this._scale.ticks ) {\n\t\t\treturn this._scale.ticks( this._numTicks, this._tickFormat );\n\t\t}\n\t\treturn this._scale.domain();\n\t}\n\treturn this._ticks.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/num_ticks.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:numticks' );\nvar CHANGE_EVENT = events( 'numTicks' );\n\n\n// MAIN //\n\n/**\n* Sets the number of axis ticks.\n*\n* @private\n* @param {(NonNegativeInteger|null)} num - num\n* @throws {TypeError} must be a nonnegative integer or null\n*/\nfunction set( num ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( num );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', num );\n\n\tthis._numTicks = num;\n\tdebug( 'New Value: %s.', this._numTicks );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the number of axis ticks.\n*\n* @private\n* @returns {(NonNegativeInteger|null)} number of ticks\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._numTicks;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/tick_format.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:tickformat' );\nvar CHANGE_EVENT = events( 'tickFormat' );\n\n\n// MAIN //\n\n/**\n* Sets the axis tick format.\n*\n* @private\n* @param {(null|string|Function)} fmt - tick format\n* @throws {TypeError} must be either null, a string, or a function\n*/\nfunction set( fmt ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( fmt );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %s.', this._tickFormat );\n\n\tthis._tickFormat = fmt;\n\tdebug( 'New Value: %s.', this._tickFormat );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-string';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/utils/identity-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {format as format} from '@stdlib/vendor/d3-format.js'; // TODO: remove\nvar isString = __var_0__.isPrimitive;\nvar isNull = __var_1__;\nvar identity = __var_2__;\n\n\n// MAIN //\n\n/**\n* Returns the axis tick format.\n*\n* @private\n* @returns {Function} format function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tif ( isString( this._tickFormat ) ) {\n\t\treturn format( this._tickFormat );\n\t}\n\tif ( isNull( this._tickFormat ) ) {\n\t\tif ( this._scale.tickFormat ) {\n\t\t\treturn this._scale.tickFormat( this._numTicks, this._tickFormat );\n\t\t}\n\t\treturn identity;\n\t}\n\treturn this._tickFormat;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/tick_size.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:ticksize' );\nvar CHANGE_EVENT = events( 'tickSize' );\n\n\n// MAIN //\n\n/**\n* Sets the axis tick size.\n*\n* @private\n* @param {NonNegativeInteger} size - size\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( size ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( size );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', size );\n\n\tthis._tickSize = size;\n\tdebug( 'New Value: %s.', this._tickSize );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the axis tick size.\n*\n* @private\n* @returns {NonNegativeInteger} tick size\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._tickSize;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/inner_tick_size.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:ticksize-inner' );\nvar CHANGE_EVENT = events( 'innerTickSize' );\n\n\n// MAIN //\n\n/**\n* Sets the inner tick size.\n*\n* @private\n* @param {NonNegativeInteger} size - size\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( size ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( size );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', size );\n\n\tthis._innerTickSize = size;\n\tdebug( 'New Value: %s.', this._innerTickSize );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the inner tick size.\n*\n* @private\n* @returns {NonNegativeInteger} tick size\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._innerTickSize;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/outer_tick_size.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:ticksize-outer' );\nvar CHANGE_EVENT = events( 'outerTickSize' );\n\n\n// MAIN //\n\n/**\n* Sets the axis outer tick size.\n*\n* @private\n* @param {NonNegativeInteger} size - size\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( size ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( size );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', size );\n\n\tthis._outerTickSize = size;\n\tdebug( 'New Value: %s.', this._outerTickSize );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the axis outer tick size.\n*\n* @private\n* @returns {NonNegativeInteger} tick size\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._outerTickSize;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/tick_padding.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:tickpadding' );\nvar CHANGE_EVENT = events( 'tickPadding' );\n\n\n// MAIN //\n\n/**\n* Sets the axis tick padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( padding );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', padding );\n\n\tthis._tickPadding = padding;\n\tdebug( 'New Value: %s.', this._tickPadding );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the axis tick padding.\n*\n* @private\n* @returns {NonNegativeInteger} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._tickPadding;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the tick spacing.\n*\n* @private\n* @returns {number} tick spacing\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._innerTickSize + this._tickPadding;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the tick direction.\n*\n* @private\n* @returns {number} tick direction\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tif (\n\t\tthis._orientation === 'top' ||\n\t\tthis._orientation === 'left'\n\t) {\n\t\treturn -1;\n\t}\n\treturn 1;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:center' );\n\n\n// MAIN //\n\n/**\n* Returns a function to center a tick.\n*\n* @private\n* @returns {Function} function to center a tick\n*/\nfunction center() {\n\t/* eslint-disable no-invalid-this */\n\tvar width = this._scale.bandwidth() / 2;\n\treturn center;\n\n\t/**\n\t* Returns a centered tick position.\n\t*\n\t* @private\n\t* @param {*} d - datum\n\t* @returns {number} tick position\n\t*/\n\tfunction center( d ) {\n\t\tvar pos = this._scale( d ) + width;\n\t\tdebug( 'Value: %s => Coordinate: %d', d, pos );\n\t\treturn pos;\n\t}\n}\n\n\n// EXPORTS //\nexport default center;\n","import __var_0__ from './center.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar center = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns a function for positioning ticks.\n*\n* @private\n* @returns {Function} position function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this._scale.copy();\n\tif ( scale.bandwidth ) {\n\t\treturn center( scale );\n\t}\n\treturn scale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/auto_render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:set:auto-render' );\nvar CHANGE_EVENT = events( 'autoRender' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a positive number\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( bool );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', this._autoRender );\n\n\tthis._autoRender = bool;\n\tdebug( 'New Value: %d.', this._autoRender );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the text anchor value for text positioning.\n*\n* @private\n* @param {string} orient - axis orientation\n* @returns {string} text anchor value\n*/\nfunction textAnchor( orient ) {\n\tif ( orient === 'left' ) {\n\t\treturn 'end';\n\t}\n\tif ( orient === 'right' ) {\n\t\treturn 'start';\n\t}\n\treturn 'middle';\n}\n\n\n// EXPORTS //\nexport default textAnchor;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* For manually constructing SVG paths, see [MDN]{@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d}\n*/\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:components:domain' );\nvar ELEMENT = 'path';\n\n\n// MAIN //\n\n/**\n* Renders an axis domain.\n*\n* @private\n* @param {Object} ctx - context\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar orient;\n\tvar stroke;\n\tvar range0;\n\tvar range1;\n\tvar offset;\n\tvar range;\n\tvar props;\n\tvar d;\n\n\torient = ctx._orientation;\n\tdebug( 'Axis orientation: %s.', orient );\n\n\trange = ctx._scale.range();\n\tdebug( 'Axis range: %s.', JSON.stringify( range ) );\n\n\trange0 = range[ 0 ] + 0.5;\n\trange1 = range[ range.length-1 ] + 0.5;\n\n\toffset = ctx.tickDir * ctx._outerTickSize;\n\td = '';\n\tif ( orient === 'left' || orient === 'right' ) {\n\t\td += 'M' + offset + ',' + range0;\n\t\td += 'H0.5';\n\t\td += 'V' + range1;\n\t\td += 'H' + offset;\n\n\t\tstroke = 'none';\n\t} else {\n\t\td += 'M' + range0 + ',' + offset;\n\t\td += 'V0.5';\n\t\td += 'H' + range1;\n\t\td += 'V' + offset;\n\n\t\tstroke = '#aaa';\n\t}\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'property': 'axis.domain',\n\t\t'className': 'domain',\n\t\t'attributes': {\n\t\t\t'fill': 'none',\n\t\t\t'stroke': stroke,\n\t\t\t'stroke-width': 1,\n\t\t\t'd': d\n\t\t}\n\t};\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, [] );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:engine:translate-x' );\n\n\n// MAIN //\n\n/**\n* Returns a function to horizontally translate a tick.\n*\n* @private\n* @param {Function} scale - scale function\n* @returns {Function} function to translate a tick\n*/\nfunction translateX( scale ) {\n\treturn translateX;\n\n\t/**\n\t* Horizontally translates a tick.\n\t*\n\t* @private\n\t* @param {*} d - datum\n\t* @returns {string} transform\n\t*/\n\tfunction translateX( d ) {\n\t\tvar t = 'translate('+scale( d )+',0)';\n\t\tdebug( 'Value: %s => Transform: %s.', d, t );\n\t\treturn t;\n\t}\n}\n\n\n// EXPORTS //\nexport default translateX;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:engine:translate-y' );\n\n\n// MAIN //\n\n/**\n* Returns a function to vertically translate a tick.\n*\n* @private\n* @param {Function} scale - scale function\n* @returns {Function} function to translate a tick\n*/\nfunction translateY( scale ) {\n\treturn translateY;\n\n\t/**\n\t* Vertically translates a tick.\n\t*\n\t* @private\n\t* @param {*} d - datum\n\t* @returns {string} transform\n\t*/\n\tfunction translateY( d ) {\n\t\tvar t = 'translate(0,'+scale( d )+')';\n\t\tdebug( 'Value: %s => Transform: %s.', d, t );\n\t\treturn t;\n\t}\n}\n\n\n// EXPORTS //\nexport default translateY;\n","import __var_0__ from './translate_x.js';\nimport __var_1__ from './translate_y.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar translateX = __var_0__;\nvar translateY = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns a function to translate ticks.\n*\n* @private\n* @param {string} orient - axis orientation\n* @param {Function} scale - scale function\n* @returns {Function} transform function\n*/\nfunction tickTransform( orient, scale ) {\n\tif ( orient === 'top' || orient === 'bottom' ) {\n\t\treturn translateX( scale );\n\t}\n\treturn translateY( scale );\n}\n\n\n// EXPORTS //\nexport default tickTransform;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the \"x\" attribute for tick positioning.\n*\n* @private\n* @param {string} orient - axis orientation\n* @returns {string} attribute\n*/\nfunction xAttr( orient ) {\n\tif ( orient === 'left' || orient === 'right' ) {\n\t\treturn 'x';\n\t}\n\treturn 'y';\n}\n\n\n// EXPORTS //\nexport default xAttr;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the \"y\" attribute for tick positioning.\n*\n* @private\n* @param {string} orient - axis orientation\n* @returns {string} attribute\n*/\nfunction yAttr( orient ) {\n\tif ( orient === 'left' || orient === 'right' ) {\n\t\treturn 'y';\n\t}\n\treturn 'x';\n}\n\n\n// EXPORTS //\nexport default yAttr;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './../utils/x_attr.js';\nimport __var_3__ from './../utils/y_attr.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar xAttr = __var_2__;\nvar yAttr = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:components:line' );\nvar ELEMENT = 'line';\n\n\n// MAIN //\n\n/**\n* Renders a tick line.\n*\n* @private\n* @param {Object} ctx - context\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar props;\n\tvar x;\n\tvar y;\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'attributes': {\n\t\t\t'stroke': '#aaa',\n\t\t\t'stroke-width': 1\n\t\t}\n\t};\n\n\tx = xAttr( ctx._orientation );\n\ty = yAttr( ctx._orientation );\n\n\tprops.attributes[ x+'2' ] = ctx.tickDir * ctx._innerTickSize;\n\tprops.attributes[ y+'1' ] = 0.5;\n\tprops.attributes[ y+'2' ] = 0.5;\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, [] );\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns vertical shift for aligning tick text.\n*\n* @private\n* @param {string} orient - axis orientation\n* @returns {string} text shift\n*/\nfunction dy( orient ) {\n\tif ( orient === 'top' ) {\n\t\treturn '0em';\n\t}\n\tif ( orient === 'bottom' ) {\n\t\treturn '.71em';\n\t}\n\treturn '.32em';\n}\n\n\n// EXPORTS //\nexport default dy;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './../utils/text_dy.js';\nimport __var_3__ from './../utils/x_attr.js';\nimport __var_4__ from './../utils/y_attr.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar dy = __var_2__;\nvar xAttr = __var_3__;\nvar yAttr = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:components:text' );\nvar ELEMENT = 'text';\n\n\n// MAIN //\n\n/**\n* Renders tick text.\n*\n* @private\n* @param {Object} ctx - context\n* @param {*} d - tick value\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx, d ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar orient;\n\tvar props;\n\tvar txt;\n\tvar x;\n\tvar y;\n\n\torient = ctx._orientation;\n\tdebug( 'Axis orientation: %s.', orient );\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'attributes': {\n\t\t\t'fill': '#000',\n\t\t\t'dy': dy( orient )\n\t\t}\n\t};\n\n\tx = xAttr( orient );\n\ty = yAttr( orient );\n\n\tprops.attributes[ x ] = ctx.tickDir * ctx.tickSpacing;\n\tprops.attributes[ y ] = 0.5;\n\n\ttxt = ctx.tickFormat( d );\n\tdebug( 'Tick text: %s.', txt );\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, txt );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './line.js';\nimport __var_3__ from './text.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar line = __var_2__;\nvar text = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:components:tick' );\nvar ELEMENT = 'g';\n\n\n// MAIN //\n\n/**\n* Renders an axis tick.\n*\n* @private\n* @param {Object} ctx - context\n* @param {*} d - tick value\n* @param {Function} transform - tick transform\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx, d, transform ) {\n\tvar children;\n\tvar props;\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'property': 'axis.tick',\n\t\t'className': 'tick',\n\t\t'attributes': {\n\t\t\t'opacity': 1,\n\t\t\t'transform': transform( d )\n\t\t}\n\t};\n\tchildren = new Array( 2 );\n\n\tdebug( 'Rendering a tick line...' );\n\tchildren[ 0 ] = line( ctx );\n\n\tdebug( 'Rendering tick text...' );\n\tchildren[ 1 ] = text( ctx, d );\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, children );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../utils/tick_transform.js';\nimport __var_2__ from './tick.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar tickTransform = __var_1__;\nvar tick = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:components:ticks' );\n\n\n// MAIN //\n\n/**\n* Renders axis ticks.\n*\n* @private\n* @param {Object} ctx - context\n* @returns {Array<VTree>} array of virtual DOM trees\n*/\nfunction render( ctx ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar transform;\n\tvar values;\n\tvar out;\n\tvar i;\n\n\tvalues = ctx.ticks;\n\tdebug( 'Tick values: %s.', JSON.stringify( values ) );\n\n\tdebug( 'Generating tick transform...' );\n\ttransform = tickTransform( ctx._orientation, ctx._scale );\n\n\tdebug( 'Rendering ticks...' );\n\tout = new Array( values.length );\n\tfor ( i = 0; i < values.length; i++ ) {\n\t\tdebug( 'Rendering tick %d with value %s...', i, values[i] );\n\t\tout[ i ] = tick( ctx, values[i], transform );\n\t}\n\tdebug( 'Finished rendering ticks.' );\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a label SVG transform.\n*\n* @private\n* @param {string} orient - axis orientation\n* @returns {string} SVG transform\n*/\nfunction labelTransform( orient ) {\n\tif ( orient === 'bottom' || orient === 'top' ) {\n\t\treturn 'rotate(0)';\n\t}\n\tif ( orient === 'left' ) {\n\t\treturn 'rotate(-90)';\n\t}\n\t// orient === 'right'\n\treturn 'rotate(90)';\n}\n\n\n// EXPORTS //\nexport default labelTransform;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the label `x` coordinate.\n*\n* @private\n* @param {string} orient - axis orientation\n* @param {NumericArray} range - scale range\n* @returns {number} `x` coordinate\n*/\nfunction labelXPos( orient, range ) {\n\tif ( orient === 'left' || orient === 'right' ) {\n\t\treturn -range[0] / 2;\n\t}\n\treturn range[1] / 2;\n}\n\n\n// EXPORTS //\nexport default labelXPos;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the label `y` coordinate.\n*\n* @private\n* @param {string} orient - axis orientation\n* @returns {number} `y` coordinate\n*/\nfunction labelYPos( orient ) {\n\tif ( orient === 'left' ) {\n\t\treturn -72;\n\t}\n\tif ( orient === 'right' ) {\n\t\treturn 72;\n\t}\n\tif ( orient === 'bottom' ) {\n\t\treturn 45;\n\t}\n\t// orient === 'top'\n\treturn -45;\n}\n\n\n// EXPORTS //\nexport default labelYPos;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './../utils/label_transform.js';\nimport __var_3__ from './../utils/label_x_pos.js';\nimport __var_4__ from './../utils/label_y_pos.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar labelTransform = __var_2__;\nvar labelXPos = __var_3__;\nvar labelYPos = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:components:label' );\nvar ELEMENT = 'text';\n\n\n// MAIN //\n\n/**\n* Renders an axis label.\n*\n* @private\n* @param {Object} ctx - context\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar orient;\n\tvar props;\n\n\torient = ctx._orientation;\n\tdebug( 'Axis orientation: %s.', orient );\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'property': 'axis.label',\n\t\t'className': 'label noselect',\n\t\t'attributes': {\n\t\t\t'fill': '#000',\n\t\t\t'stroke': 'none',\n\t\t\t'text-anchor': 'middle',\n\t\t\t'transform': labelTransform( orient ),\n\t\t\t'x': labelXPos( orient, ctx._scale.range() ),\n\t\t\t'y': labelYPos( orient )\n\t\t}\n\t};\n\n\tdebug( 'Axis label: %s.', ctx._label );\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, ctx._label );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './../utils/text_anchor.js';\nimport __var_3__ from './domain.js';\nimport __var_4__ from './ticks.js';\nimport __var_5__ from './label.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar textAnchor = __var_2__;\nvar domain = __var_3__;\nvar ticks = __var_4__;\nvar label = __var_5__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:components:main' );\nvar ELEMENT = 'g';\n\n\n// MAIN //\n\n/**\n* Renders an axis.\n*\n* @private\n* @param {Object} ctx - context\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx ) {\n\tvar children;\n\tvar props;\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'property': 'axis',\n\t\t'className': 'axis',\n\t\t'attributes': {\n\t\t\t'fill': 'none',\n\t\t\t'font-size': 10, // TODO: option\n\t\t\t'font-family': 'sans-serif', // TODO: option\n\t\t\t'text-anchor': textAnchor( ctx._orientation ) // eslint-disable-line no-underscore-dangle\n\t\t}\n\t};\n\n\tdebug( 'Rendering tick marks...' );\n\tchildren = ticks( ctx );\n\n\tdebug( 'Rendering domain line...' );\n\tchildren.unshift( domain( ctx ) );\n\n\tdebug( 'Rendering label...' );\n\tchildren.push( label( ctx ) );\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, children );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../components/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar components = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:render' );\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @returns {VTree} virtual tree\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar vtree;\n\n\tdebug( 'Rendering...' );\n\tvtree = components( this );\n\n\t// Announce that a new tree has been rendered:\n\tthis.emit( '_render', vtree );\n\n\treturn vtree;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-property';\nimport __var_3__ from '@stdlib/utils/define-read-only-property';\nimport __var_4__ from '@stdlib/utils/copy';\nimport __var_5__ from './defaults.json';\nimport __var_6__ from './validate.js';\nimport __var_7__ from './props/scale/set.js';\nimport __var_8__ from './props/scale/get.js';\nimport __var_9__ from './props/orientation/set.js';\nimport __var_10__ from './props/orientation/get.js';\nimport __var_11__ from './props/label/set.js';\nimport __var_12__ from './props/label/get.js';\nimport __var_13__ from './props/ticks/set.js';\nimport __var_14__ from './props/ticks/get.js';\nimport __var_15__ from './props/num-ticks/set.js';\nimport __var_16__ from './props/num-ticks/get.js';\nimport __var_17__ from './props/tick-format/set.js';\nimport __var_18__ from './props/tick-format/get.js';\nimport __var_19__ from './props/tick-size/set.js';\nimport __var_20__ from './props/tick-size/get.js';\nimport __var_21__ from './props/inner-tick-size/set.js';\nimport __var_22__ from './props/inner-tick-size/get.js';\nimport __var_23__ from './props/outer-tick-size/set.js';\nimport __var_24__ from './props/outer-tick-size/get.js';\nimport __var_25__ from './props/tick-padding/set.js';\nimport __var_26__ from './props/tick-padding/get.js';\nimport __var_27__ from './props/tick-spacing/get.js';\nimport __var_28__ from './props/tick-dir/get.js';\nimport __var_29__ from './props/tick-pos/get.js';\nimport __var_30__ from './props/auto-render/set.js';\nimport __var_31__ from './props/auto-render/get.js';\nimport __var_32__ from './methods/render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: improve JSDoc examples\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nimport {scaleLinear as linear} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\nvar defineProperty = __var_2__;\nvar setReadOnly = __var_3__;\nvar copy = __var_4__;\nvar defaults = __var_5__;\nvar validate = __var_6__;\nvar setScale = __var_7__;\nvar getScale = __var_8__;\nvar setOrientation = __var_9__;\nvar getOrientation = __var_10__;\nvar setLabel = __var_11__;\nvar getLabel = __var_12__;\nvar setTicks = __var_13__;\nvar getTicks = __var_14__;\nvar setNumTicks = __var_15__;\nvar getNumTicks = __var_16__;\nvar setTickFormat = __var_17__;\nvar getTickFormat = __var_18__;\nvar setTickSize = __var_19__;\nvar getTickSize = __var_20__;\nvar setInnerTickSize = __var_21__;\nvar getInnerTickSize = __var_22__;\nvar setOuterTickSize = __var_23__;\nvar getOuterTickSize = __var_24__;\nvar setTickPadding = __var_25__;\nvar getTickPadding = __var_26__;\nvar getTickSpacing = __var_27__;\nvar getTickDir = __var_28__;\nvar getTickPos = __var_29__;\nvar setAutoRender = __var_30__;\nvar getAutoRender = __var_31__;\nvar render = __var_32__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'axis:main' );\n\n\n// MAIN //\n\n/**\n* Axis constructor.\n*\n* @constructor\n* @param {Options} options - constructor options\n* @param {Function} [options.scale] - scale function\n* @param {string} [options.orientation='bottom'] - axis orientation\n* @param {string} [options.label] - axis label\n* @param {(Array|null)} [options.ticks] - tick values\n* @param {(NonNegativeInteger|null)} [options.numTicks] - number of ticks\n* @param {(null|string|Function)} [options.tickFormat] - tick format\n* @param {NonNegativeInteger} [options.tickSize=6] - tick size\n* @param {NonNegativeInteger} [options.innerTickSize=6] - inner tick size\n* @param {NonNegativeInteger} [options.outerTickSize=6] - outer tick size\n* @param {NonNegativeInteger} [options.tickPadding=3] - tick padding\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a change event\n* @throws {TypeError} must provide valid options\n* @returns {Axis} axis instance\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom'\n* });\n*/\nfunction Axis( options ) {\n\tvar self;\n\tvar opts;\n\tvar err;\n\tif ( !( this instanceof Axis ) ) {\n\t\treturn new Axis( options );\n\t}\n\tself = this;\n\topts = copy( defaults );\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tdefineProperty( this, '_scale', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.scale || linear()\n\t});\n\tdefineProperty( this, '_orientation', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.orientation\n\t});\n\tdefineProperty( this, '_label', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.label\n\t});\n\tdefineProperty( this, '_ticks', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.ticks\n\t});\n\tdefineProperty( this, '_numTicks', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.numTicks\n\t});\n\tdefineProperty( this, '_tickFormat', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.tickFormat\n\t});\n\tdefineProperty( this, '_tickSize', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.tickSize\n\t});\n\tdefineProperty( this, '_innerTickSize', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.innerTickSize\n\t});\n\tdefineProperty( this, '_outerTickSize', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.outerTickSize\n\t});\n\tdefineProperty( this, '_tickPadding', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.tickPadding\n\t});\n\tdefineProperty( this, '_autoRender', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.autoRender\n\t});\n\n\tthis.on( 'change', onChange );\n\tthis.on( '_render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) { // eslint-disable-line no-underscore-dangle\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Re-emits a render event.\n\t*\n\t* @private\n\t*/\n\tfunction onRender() {\n\t\tvar args;\n\t\tvar i;\n\t\tdebug( 'Received a render event. Re-emitting...' );\n\t\targs = new Array( arguments.length+1 );\n\t\targs[ 0 ] = 'render';\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i+1 ] = arguments[ i ];\n\t\t}\n\t\tself.emit.apply( self, args );\n\t}\n}\n\n/*\n* Create a prototype which inherits from the parent prototype.\n*/\nAxis.prototype = Object.create( EventEmitter.prototype );\n\n/*\n* Set the constructor.\n*/\nAxis.prototype.constructor = Axis;\n\n/**\n* Scale function.\n*\n* @name scale\n* @memberof Axis.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'top'\n* });\n*\n* var f = axis.scale;\n* // returns <Function>\n*/\ndefineProperty( Axis.prototype, 'scale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setScale,\n\t'get': getScale\n});\n\n/**\n* Axis orientation.\n*\n* @name orientation\n* @memberof Axis.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default 'bottom'\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom'\n* });\n* axis.orientation = 'top';\n*\n* var v = axis.orientation;\n* // returns 'top'\n*/\ndefineProperty( Axis.prototype, 'orientation', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setOrientation,\n\t'get': getOrientation\n});\n\n/**\n* Axis label.\n*\n* @name label\n* @memberof Axis.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n*\n* @example\n* var axis = new Axis({\n*     'label': 'y'\n* });\n* axis.label = 'Counts';\n*\n* var v = axis.label;\n* // returns 'Counts'\n*/\ndefineProperty( Axis.prototype, 'label', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLabel,\n\t'get': getLabel\n});\n\n/**\n* Axis tick values. When set to `null`, the retrieved values are the computed tick values.\n*\n* @name ticks\n* @memberof Axis.prototype\n* @type {(Array|null)}\n* @throws {TypeError} must be an array or null\n* @default null\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom',\n*     'ticks': [1,2,3]\n* });\n* axis.ticks = ['a','b','c'];\n*\n* var v = axis.ticks;\n* // returns <Array>\n*/\ndefineProperty( Axis.prototype, 'ticks', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setTicks,\n\t'get': getTicks\n});\n\n/**\n* Number of axis ticks.\n*\n* @name numTicks\n* @memberof Axis.prototype\n* @type {(NonNegativeInteger|null)}\n* @throws {TypeError} must be a nonnegative integer or null\n* @default null\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom',\n*     'numTicks': 10\n* });\n* axis.numTicks = 5;\n*\n* var v = axis.numTicks;\n* // returns 5\n*/\ndefineProperty( Axis.prototype, 'numTicks', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setNumTicks,\n\t'get': getNumTicks\n});\n\n/**\n* Tick format. When retrieved, the returned value is a formatting function.\n*\n* @name tickFormat\n* @memberof Axis.prototype\n* @type {(null|string|Function)}\n* @throws {TypeError} must be either null, a string, or a function\n* @default null\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom',\n*     'tickFormat': ',f'\n* });\n* axis.tickFormat = ',.0f';\n*\n* var v = axis.tickFormat;\n* // returns <Function>\n*/\ndefineProperty( Axis.prototype, 'tickFormat', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setTickFormat,\n\t'get': getTickFormat\n});\n\n/**\n* Axis tick size.\n*\n* @name tickSize\n* @memberof Axis.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 6\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom',\n*     'tickSize': 12\n* });\n* axis.tickSize = 8;\n*\n* var v = axis.tickSize;\n* // returns 8\n*/\ndefineProperty( Axis.prototype, 'tickSize', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setTickSize,\n\t'get': getTickSize\n});\n\n/**\n* Axis inner tick size.\n*\n* @name innerTickSize\n* @memberof Axis.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 6\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom',\n*     'innerTickSize': 10\n* });\n* axis.innerTickSize = 5;\n*\n* var v = axis.innerTickSize;\n* // returns 5\n*/\ndefineProperty( Axis.prototype, 'innerTickSize', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setInnerTickSize,\n\t'get': getInnerTickSize\n});\n\n/**\n* Axis outer tick size.\n*\n* @name outerTickSize\n* @memberof Axis.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 6\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom',\n*     'outerTickSize': 10\n* });\n* axis.outerTickSize = 5;\n*\n* var v = axis.outerTickSize;\n* // returns 5\n*/\ndefineProperty( Axis.prototype, 'outerTickSize', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setOuterTickSize,\n\t'get': getOuterTickSize\n});\n\n/**\n* Axis tick padding.\n*\n* @name tickPadding\n* @memberof Axis.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 3\n*\n* @example\n* var axis = new Axis({\n*     'orientation': 'bottom',\n*     'tickPadding': 10\n* });\n* axis.tickPadding = 5;\n*\n* var v = axis.tickPadding;\n* // returns 5\n*/\ndefineProperty( Axis.prototype, 'tickPadding', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setTickPadding,\n\t'get': getTickPadding\n});\n\n/**\n* Tick spacing.\n*\n* @name tickSpacing\n* @memberof Axis.prototype\n* @type {number}\n*\n* @example\n* var axis = new Axis( {} );\n*\n* var spacing = axis.tickSpacing;\n* // returns <number>\n*/\ndefineProperty( Axis.prototype, 'tickSpacing', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getTickSpacing\n});\n\n/**\n* Tick direction.\n*\n* @name tickDir\n* @memberof Axis.prototype\n* @type {number}\n*\n* @example\n* var axis = new Axis( {} );\n*\n* var dir = axis.tickDir;\n* // returns <number>\n*/\ndefineProperty( Axis.prototype, 'tickDir', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getTickDir\n});\n\n/**\n* Function for computing tick positions.\n*\n* @name tickPos\n* @memberof Axis.prototype\n* @type {Function}\n*\n* @example\n* var axis = new Axis( {} );\n*\n* var tickPos = axis.tickPos;\n* // returns <Function>\n*/\ndefineProperty( Axis.prototype, 'tickPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getTickPos\n});\n\n/**\n* Rendering mode. If `true`, an instance re-renders on each change event.\n*\n* @name autoRender\n* @memberof Axis.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var axis = new Axis({\n*     'autoRender': true\n* });\n*\n* var mode = axis.autoRender;\n* // returns true\n*/\ndefineProperty( Axis.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Renders a virtual DOM tree.\n*\n* @name render\n* @memberof Axis.prototype\n* @type {Function}\n* @returns {VTree} virtual tree\n*\n* @example\n* var axis = new Axis( {} );\n*\n* var out = axis.render();\n*/\nsetReadOnly( Axis.prototype, 'render', render );\n\n\n// EXPORTS //\nexport default Axis;\n","import __var_0__ from './axis.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: remove d3-scale\n\n/**\n* Plot axis.\n*\n* @module @stdlib/plot/components/svg/axis\n*\n* @example\n* var linear = require( '@stdlib/vendor/d3-scale.js' ).scaleLinear();\n* var Axis = require( '@stdlib/plot/components/svg/axis' );\n*\n* var axis = new Axis({\n*     'scale': linear(),\n*     'orient': 'bottom'\n* });\n*/\n\n// MODULES //\nvar Axis = __var_0__;\n\n\n// EXPORTS //\nexport default Axis;\n"]}