{"version":3,"sources":["@stdlib/plot/components/svg/path/lib/accessors/is_defined.js","@stdlib/plot/components/svg/path/lib/props/x/set.js","@stdlib/plot/components/svg/path/lib/props/x/get.js","@stdlib/plot/components/svg/path/lib/props/y/set.js","@stdlib/plot/components/svg/path/lib/props/y/get.js","@stdlib/plot/components/svg/path/lib/props/x-scale/set.js","@stdlib/plot/components/svg/path/lib/props/x-scale/get.js","@stdlib/plot/components/svg/path/lib/props/y-scale/set.js","@stdlib/plot/components/svg/path/lib/props/y-scale/get.js","@stdlib/plot/components/svg/path/lib/props/is-defined/set.js","@stdlib/plot/components/svg/path/lib/props/is-defined/get.js","@stdlib/plot/components/svg/path/lib/props/color/set.js","@stdlib/plot/components/svg/path/lib/props/color/get.js","@stdlib/plot/components/svg/path/lib/props/label/set.js","@stdlib/plot/components/svg/path/lib/props/label/get.js","@stdlib/plot/components/svg/path/lib/props/opacity/set.js","@stdlib/plot/components/svg/path/lib/props/opacity/get.js","@stdlib/plot/components/svg/path/lib/props/width/set.js","@stdlib/plot/components/svg/path/lib/props/width/get.js","@stdlib/plot/components/svg/path/lib/props/style/set.js","@stdlib/plot/components/svg/path/lib/props/style/get.js","@stdlib/plot/components/svg/path/lib/props/auto-render/set.js","@stdlib/plot/components/svg/path/lib/props/auto-render/get.js","@stdlib/plot/components/svg/path/lib/props/line/get.js","@stdlib/plot/components/svg/path/lib/props/x-pos/get.js","@stdlib/plot/components/svg/path/lib/props/y-pos/get.js","@stdlib/plot/components/svg/path/lib/render/utils/zip.js","@stdlib/plot/components/svg/path/lib/render/utils/style.js","@stdlib/plot/components/svg/path/lib/render/index.js","@stdlib/plot/components/svg/path/lib/path.js","@stdlib/plot/components/svg/path/lib/index.js"],"names":["logger","__var_0__","isnan","__var_1__","isPrimitive","debug","isDefined","d","bool","JSON","stringify","isArrayLike","set","x","TypeError","this","_xData","emit","get","y","_yData","isFunction","fcn","_xScale","_yScale","_isDefined","isString","color","_color","label","_label","isNumber","opacity","RangeError","_opacity","isNonNegativeInteger","v","_width","_style","isBoolean","_autoRender","line","xPos","yPos","defined","scale","xScale","px","yScale","zip","out","i","length","Error","Array","STYLES","-","--",":","-.","style","s","h","__var_2__","__var_3__","ELEMENT","render","props","vtree","namespace","property","className","attributes","fill","stroke","stroke-width","width","stroke-opacity","stroke-dasharray","data-label","EventEmitter","defineProperty","setReadOnly","objectKeys","__var_4__","copy","__var_5__","merge","__var_6__","isObject","__var_7__","__var_8__","defaults","__var_9__","setX","__var_10__","getX","__var_11__","setY","__var_12__","getY","__var_13__","setXScale","__var_14__","getXScale","__var_15__","setYScale","__var_16__","getYScale","__var_17__","setIsDefined","__var_18__","getIsDefined","__var_19__","setColor","__var_20__","getColor","__var_21__","setLabel","__var_22__","getLabel","__var_23__","setOpacity","__var_24__","getOpacity","__var_25__","setWidth","__var_26__","getWidth","__var_27__","setStyle","__var_28__","getStyle","__var_29__","setAutoRender","__var_30__","getAutoRender","__var_31__","getLine","__var_32__","getXPos","__var_33__","getYPos","__var_34__","__var_35__","PRIVATE_PROPS","Path","options","self","keys","opts","key","arguments","linear","call","configurable","enumerable","writable","value","on","onChange","onRender","args","apply","prototype","Object","create","constructor"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isnan = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:accessor:is-defined' );\n\n\n// MAIN //\n\n/**\n* Accessor function which determines whether a datum is defined.\n*\n* @private\n* @param {number} d - datum\n* @returns {boolean} boolean indicating whether a datum is defined\n*/\nfunction isDefined( d ) {\n\tvar bool = !isnan( d );\n\tdebug( 'Datum: %s. Defined: %s.', JSON.stringify( d ), bool );\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default isDefined;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-array-like';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isArrayLike = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:x' );\n\n\n// MAIN //\n\n/**\n* Sets the `x` values.\n*\n* @private\n* @param {ArrayLike} x - x values\n* @throws {TypeError} must be array-like\n*/\nfunction set( x ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isArrayLike( x ) ) {\n\t\tthrow new TypeError( 'invalid value. `x` must be array-like. Value: `' + x + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._xData ) );\n\n\tthis._xData = x;\n\tdebug( 'New Value: %s.', JSON.stringify( this._xData ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the `x` values.\n*\n* @private\n* @returns {ArrayLike} x values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xData;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-array-like';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isArrayLike = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:y' );\n\n\n// MAIN //\n\n/**\n* Sets the `y` values.\n*\n* @private\n* @param {ArrayLike} y - y values\n* @throws {TypeError} must be array-like\n*/\nfunction set( y ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isArrayLike( y ) ) {\n\t\tthrow new TypeError( 'invalid value. `y` must be array-like. Value: `' + y + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._yData ) );\n\n\tthis._yData = y;\n\tdebug( 'New Value: %s.', JSON.stringify( this._yData ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the `y` values.\n*\n* @private\n* @returns {ArrayLike} y values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yData;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:xscale' );\n\n\n// MAIN //\n\n/**\n* Sets the x-scale function.\n*\n* @private\n* @param {Function} fcn - scale\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `xScale` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tdebug( 'Current value: %s.', this._xScale );\n\n\tthis._xScale = fcn;\n\tdebug( 'New Value: %s.', this._xScale );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-scale function.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xScale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:yscale' );\n\n\n// MAIN //\n\n/**\n* Sets the y-scale function.\n*\n* @private\n* @param {Function} fcn - scale\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `yScale` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tdebug( 'Current value: %s.', this._yScale );\n\n\tthis._yScale = fcn;\n\tdebug( 'New Value: %s.', this._yScale );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-scale function.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yScale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:is-defined' );\n\n\n// MAIN //\n\n/**\n* Sets the accessor for defined values.\n*\n* @private\n* @param {Function} fcn - accessor\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `isDefined` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tdebug( 'Current value: %s.', this._isDefined );\n\n\tthis._isDefined = fcn;\n\tdebug( 'New Value: %s.', this._isDefined );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the accessor for defined values.\n*\n* @private\n* @returns {Function} accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._isDefined;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:color' );\n\n\n// MAIN //\n\n/**\n* Sets the path color.\n*\n* @private\n* @param {string} color - color\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( color ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( color ) ) {\n\t\tthrow new TypeError( 'invalid value. `color` must be a string primitive. Value: `' + color + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._color );\n\n\tthis._color = color;\n\tdebug( 'New Value: %d.', this._color );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the path color.\n*\n* @private\n* @returns {string} color\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._color;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:label' );\n\n\n// MAIN //\n\n/**\n* Sets the path label.\n*\n* @private\n* @param {string} label - label\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( label ) ) {\n\t\tthrow new TypeError( 'invalid value. `label` must be a string primitive. Value: `' + label + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._label );\n\n\tthis._label = label;\n\tdebug( 'New Value: %d.', this._label );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the path label.\n*\n* @private\n* @returns {string} label\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._label;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the opacity.\n*\n* @private\n* @param {number} opacity - opacity\n* @throws {TypeError} must be a number\n* @throws {RangeError} must be a number on the interval `[0,1]`\n*/\nfunction set( opacity ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNumber( opacity ) ) {\n\t\tthrow new TypeError( 'invalid value. `opacity` must be a number. Value: `' + opacity + '.`' );\n\t}\n\tif (\n\t\topacity < 0.0 ||\n\t\topacity > 1.0\n\t) {\n\t\tthrow new RangeError( 'invalid value. `opacity` must be a number on the interval `[0,1]`. Value: `' + opacity + '`.' );\n\t}\n\tdebug( 'Current value: %d.', this._opacity );\n\n\tthis._opacity = opacity;\n\tdebug( 'New Value: %d.', this._opacity );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the opacity.\n*\n* @private\n* @returns {number} opacity\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._opacity;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:width' );\n\n\n// MAIN //\n\n/**\n* Sets the width.\n*\n* @private\n* @param {NonNegativeInteger} v - width\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `width` must be a nonnegative integer. Value: `' + v + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._width );\n\n\tthis._width = v;\n\tdebug( 'New Value: %d.', this._width );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the width.\n*\n* @private\n* @returns {NonNegativeInteger} width\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._width;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:style' );\n\n\n// MAIN //\n\n/**\n* Sets the path style.\n*\n* @private\n* @param {string} v - style\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `style` must be a string primitive. Value: `' + v + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._style );\n\n\tthis._style = v;\n\tdebug( 'New Value: %d.', this._style );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the path style.\n*\n* @private\n* @returns {string} style\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._style;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:set:auto-render' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a positive number\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tdebug( 'Current value: %d.', this._autoRender );\n\n\tthis._autoRender = bool;\n\tdebug( 'New Value: %d.', this._autoRender );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {line as line} from '@stdlib/vendor/d3-shape.js'; // TODO: remove\n\n\n// MAIN //\n\n/**\n* Returns a function to generate a line as an SVG path.\n*\n* @private\n* @returns {Function} function to generate a line as an SVG path\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this, stdlib/empty-line-before-comment */\n\tvar f = line()\n\t\t.x( this.xPos )\n\t\t.y( this.yPos )\n\t\t.defined( this.isDefined );\n\t\t// TODO: interpolate (curve factory)\n\t\t// TODO: tension\n\n\treturn f;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:xpos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to x coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.xScale;\n\treturn xPos;\n\n\t/**\n\t* Maps a value to a x coordinate value.\n\t*\n\t* @private\n\t* @param {Array} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction xPos( d ) {\n\t\tvar px = scale( d[0] );\n\t\tdebug( 'Value: %d => Pixel: %d.', d[0], px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:ypos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to y coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.yScale;\n\treturn yPos;\n\n\t/**\n\t* Maps a value to a y coordinate value.\n\t*\n\t* @private\n\t* @param {Array} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction yPos( d ) {\n\t\tvar px = scale( d[1] );\n\t\tdebug( 'Value: %d => Pixel: %d.', d[1], px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Zips two arrays.\n*\n* @private\n* @param {ArrayLike} x - x-values\n* @param {ArrayLike} y - y-values\n* @throws {Error} must provide equal length array-like objects\n* @returns {Array<Array>} zipped array\n*/\nfunction zip( x, y ) {\n\tvar out;\n\tvar i;\n\tif ( x.length !== y.length ) {\n\t\tthrow new Error( 'invalid arguments. Must provide equal length array-like objects. `x` length: '+x.length+', `y` length: '+y.length+'.' );\n\t}\n\tout = new Array( x.length );\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tout[ i ] = [ x[i], y[i] ];\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default zip;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar STYLES = {\n\t// Solid path:\n\t'-': '',\n\n\t// Dashes:\n\t'--': '5, 1',\n\n\t// Dotted path:\n\t':': '0.9',\n\n\t// Dash-dotted path:\n\t'-.': '5, 1, 1, 1'\n};\n\n\n// MAIN //\n\n/**\n* Checks for a known style. If present, returns the [`stroke-dasharray`][1]. Otherwise, returns the provided input value.\n*\n* [1]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n*\n* @private\n* @param {string} v - style\n* @returns {string} stroke dasharray value\n*/\nfunction style( v ) {\n\tvar s = STYLES[ v ];\n\tif ( s ) {\n\t\treturn s;\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\nexport default style;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './utils/zip.js';\nimport __var_3__ from './utils/style.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar zip = __var_2__;\nvar style = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:render' );\nvar ELEMENT = 'path';\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @returns {VTree} virtual DOM tree\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar props;\n\tvar vtree;\n\n\tdebug( 'Rendering...' );\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'property': 'line',\n\t\t'className': 'path line',\n\t\t'attributes': {\n\t\t\t'd': this.line( zip( this._xData, this._yData ) ),\n\t\t\t'fill': 'none',\n\t\t\t'stroke': this.color,\n\t\t\t'stroke-width': this.width,\n\t\t\t'stroke-opacity': this.opacity,\n\t\t\t'stroke-dasharray': style( this.style ),\n\t\t\t'data-label': this.label\n\t\t}\n\t};\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\tvtree = h( ELEMENT, props, [] );\n\n\t// Announce that a new tree has been rendered:\n\tthis.emit( '_render', vtree );\n\n\treturn vtree;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-property';\nimport __var_3__ from '@stdlib/utils/define-read-only-property';\nimport __var_4__ from '@stdlib/utils/keys';\nimport __var_5__ from '@stdlib/utils/copy';\nimport __var_6__ from '@stdlib/utils/merge';\nimport __var_7__ from '@stdlib/assert/is-plain-object';\nimport __var_8__ from './accessors/is_defined.js';\nimport __var_9__ from './defaults.json';\nimport __var_10__ from './props/x/set.js';\nimport __var_11__ from './props/x/get.js';\nimport __var_12__ from './props/y/set.js';\nimport __var_13__ from './props/y/get.js';\nimport __var_14__ from './props/x-scale/set.js';\nimport __var_15__ from './props/x-scale/get.js';\nimport __var_16__ from './props/y-scale/set.js';\nimport __var_17__ from './props/y-scale/get.js';\nimport __var_18__ from './props/is-defined/set.js';\nimport __var_19__ from './props/is-defined/get.js';\nimport __var_20__ from './props/color/set.js';\nimport __var_21__ from './props/color/get.js';\nimport __var_22__ from './props/label/set.js';\nimport __var_23__ from './props/label/get.js';\nimport __var_24__ from './props/opacity/set.js';\nimport __var_25__ from './props/opacity/get.js';\nimport __var_26__ from './props/width/set.js';\nimport __var_27__ from './props/width/get.js';\nimport __var_28__ from './props/style/set.js';\nimport __var_29__ from './props/style/get.js';\nimport __var_30__ from './props/auto-render/set.js';\nimport __var_31__ from './props/auto-render/get.js';\nimport __var_32__ from './props/line/get.js';\nimport __var_33__ from './props/x-pos/get.js';\nimport __var_34__ from './props/y-pos/get.js';\nimport __var_35__ from './render/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: improve JSDoc examples\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nimport {scaleLinear as linear} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\nvar defineProperty = __var_2__;\nvar setReadOnly = __var_3__;\nvar objectKeys = __var_4__;\nvar copy = __var_5__;\nvar merge = __var_6__;\nvar isObject = __var_7__;\nvar isDefined = __var_8__;\nvar defaults = __var_9__;\nvar setX = __var_10__;\nvar getX = __var_11__;\nvar setY = __var_12__;\nvar getY = __var_13__;\nvar setXScale = __var_14__;\nvar getXScale = __var_15__;\nvar setYScale = __var_16__;\nvar getYScale = __var_17__;\nvar setIsDefined = __var_18__;\nvar getIsDefined = __var_19__;\nvar setColor = __var_20__;\nvar getColor = __var_21__;\nvar setLabel = __var_22__;\nvar getLabel = __var_23__;\nvar setOpacity = __var_24__;\nvar getOpacity = __var_25__;\nvar setWidth = __var_26__;\nvar getWidth = __var_27__;\nvar setStyle = __var_28__;\nvar getStyle = __var_29__;\nvar setAutoRender = __var_30__;\nvar getAutoRender = __var_31__;\nvar getLine = __var_32__;\nvar getXPos = __var_33__;\nvar getYPos = __var_34__;\nvar render = __var_35__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'path:main' );\nvar PRIVATE_PROPS = [\n\t'_autoRender',\n\t'_color',\n\t'_isDefined',\n\t'_label',\n\t'_opacity',\n\t'_style',\n\t'_width',\n\t'_xData',\n\t'_xScale',\n\t'_yData',\n\t'_yScale'\n];\n\n\n// MAIN //\n\n/**\n* Path constructor.\n*\n* @constructor\n* @param {Options} [options] - constructor options\n* @param {ArrayLike} [options.x=[]] - x-values\n* @param {ArrayLike} [options.y=[]] - y-values\n* @param {Function} [options.xScale] - x scale function\n* @param {Function} [options.yScale] - y scale function\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {string} [options.color] - color\n* @param {string} [options.label] - label\n* @param {NonNegativeInteger} [options.width=2] - width\n* @param {number} [options.opacity=0.9] - opacity\n* @param {string} [options.style='-'] - style\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a change event\n* @throws {TypeError} must provide valid options\n* @returns {Path} Path instance\n*\n* @example\n* var path = new Path({\n*     'x': [0.1,0.2,0.3],\n*     'y': [0.4,0.5,0.6]\n* });\n*/\nfunction Path( options ) {\n\tvar self;\n\tvar keys;\n\tvar opts;\n\tvar key;\n\tvar i;\n\tif ( !( this instanceof Path ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new Path( options );\n\t\t}\n\t\treturn new Path();\n\t}\n\tself = this;\n\n\topts = copy( defaults );\n\topts.isDefined = isDefined;\n\topts.xScale = linear();\n\topts.yScale = linear();\n\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. `options` argument must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\topts = merge( opts, options );\n\t}\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\t// Set options...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\n\tthis.on( 'change', onChange );\n\tthis.on( '_render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) { // eslint-disable-line no-underscore-dangle\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Re-emits a render event.\n\t*\n\t* @private\n\t*/\n\tfunction onRender() {\n\t\tvar args;\n\t\tvar i;\n\t\tdebug( 'Received a render event. Re-emitting...' );\n\t\targs = new Array( arguments.length+1 );\n\t\targs[ 0 ] = 'render';\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i+1 ] = arguments[ i ];\n\t\t}\n\t\tself.emit.apply( self, args );\n\t}\n}\n\n/*\n* Create a prototype which inherits from the parent prototype.\n*/\nPath.prototype = Object.create( EventEmitter.prototype );\n\n/*\n* Set the constructor.\n*/\nPath.prototype.constructor = Path;\n\n/**\n* `x` values.\n*\n* @name x\n* @memberof Path.prototype\n* @type {ArrayLike}\n* @throws {TypeError} must be array-like\n* @default []\n*\n* @example\n* var path = new Path({\n*     'x': [0.1,0.2,0.3]\n* });\n*\n* var x = path.x;\n* // returns [0.1,0.2,0.3]\n*/\ndefineProperty( Path.prototype, 'x', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setX,\n\t'get': getX\n});\n\n/**\n* `y` values.\n*\n* @name y\n* @memberof Path.prototype\n* @type {ArrayLike}\n* @throws {TypeError} must be array-like\n* @default []\n*\n* @example\n* var path = new Path({\n*     'y': [0.4,0.5,0.6]\n* });\n*\n* var y = path.y;\n* // returns [0.4,0.5,0.6]\n*/\ndefineProperty( Path.prototype, 'y', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setY,\n\t'get': getY\n});\n\n/**\n* `x` scale function.\n*\n* @name xScale\n* @memberof Path.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var path = new Path({\n*     'xScale': function scale(){}\n* });\n*\n* var f = path.xScale;\n* // returns <Function>\n*/\ndefineProperty( Path.prototype, 'xScale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXScale,\n\t'get': getXScale\n});\n\n/**\n* `y` scale function.\n*\n* @name yScale\n* @memberof Path.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var path = new Path({\n*     'yScale': function scale(){}\n* });\n*\n* var f = path.yScale;\n* // returns <Function>\n*/\ndefineProperty( Path.prototype, 'yScale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYScale,\n\t'get': getYScale\n});\n\n/**\n* Accessor which defines whether a datum is defined. This accessor is used to define how missing values are encoded. The default behavior is to ignore values which are `NaN`.\n*\n* @name isDefined\n* @memberof Path.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var path = new Path();\n* path.isDefined = function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n*\n* @example\n* function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n* var path = new Path({\n*     'isDefined': isDefined\n* });\n* var fcn = path.isDefined;\n* // returns <Function>\n*/\ndefineProperty( Path.prototype, 'isDefined', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setIsDefined,\n\t'get': getIsDefined\n});\n\n/**\n* Path color.\n*\n* @name color\n* @memberof Path.prototype\n* @type {string}\n* @throws {TypeError} must be a primitive string\n*\n* @example\n* var path = new Path({\n*     'color': 'steelblue'\n* });\n*\n* var color = path.color;\n* // returns 'steelblue'\n*/\ndefineProperty( Path.prototype, 'color', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setColor,\n\t'get': getColor\n});\n\n/**\n* Path label.\n*\n* @name label\n* @memberof Path.prototype\n* @type {string}\n* @throws {TypeError} must be a primitive string\n*\n* @example\n* var path = new Path({\n*     'label': 'line-1'\n* });\n*\n* var label = path.label;\n* // returns 'line-1'\n*/\ndefineProperty( Path.prototype, 'label', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLabel,\n\t'get': getLabel\n});\n\n/**\n* Path opacity.\n*\n* @name opacity\n* @memberof Path.prototype\n* @type {number}\n* @throws {TypeError} must be a number\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default 0.9\n*\n* @example\n* var path = new Path({\n*     'opacity': 0.5\n* });\n*\n* var opacity = path.opacity;\n* // returns 0.5\n*/\ndefineProperty( Path.prototype, 'opacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setOpacity,\n\t'get': getOpacity\n});\n\n/**\n* Path width.\n*\n* @name width\n* @memberof Path.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 2\n*\n* @example\n* var path = new Path({\n*     'width': 1\n* });\n*\n* var width = path.width;\n* // returns 1\n*/\ndefineProperty( Path.prototype, 'width', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setWidth,\n\t'get': getWidth\n});\n\n/**\n* Path style.\n*\n* @name style\n* @memberof Path.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default '-'\n*\n* @example\n* var path = new Path({\n*     'style': '-.'\n* });\n*\n* var style = path.style;\n* // returns '-.'\n*/\ndefineProperty( Path.prototype, 'style', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setStyle,\n\t'get': getStyle\n});\n\n/**\n* Rendering mode. If `true`, an instance re-renders on each change event.\n*\n* @name autoRender\n* @memberof Path.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var path = new Path({\n*     'autoRender': true\n* });\n*\n* var mode = path.autoRender;\n* // returns true\n*/\ndefineProperty( Path.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Returns a function to generate a line as an SVG path.\n*\n* @name line\n* @memberof Path.prototype\n* @type {Function}\n*\n* @example\n* var path = new Path();\n*\n* var line = path.line;\n* // returns <Function>\n*/\ndefineProperty( Path.prototype, 'line', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getLine\n});\n\n/**\n* Function to map values to x coordinate values.\n*\n* @name xPos\n* @memberof Path.prototype\n* @type {Function}\n*\n* @example\n* var path = new Path();\n* var xPos = path.xPos;\n* // returns <Function>\n*/\ndefineProperty( Path.prototype, 'xPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXPos\n});\n\n/**\n* Function to map values to y coordinate values.\n*\n* @name yPos\n* @memberof Path.prototype\n* @type {Function}\n*\n* @example\n* var path = new Path();\n* var yPos = path.yPos;\n* // returns <Function>\n*/\ndefineProperty( Path.prototype, 'yPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYPos\n});\n\n/**\n* Renders a virtual DOM tree.\n*\n* @name render\n* @memberof Path.prototype\n* @type {Function}\n* @returns {VTree} virtual tree\n*\n* @example\n* var path = new Path();\n*\n* var out = path.render();\n*/\nsetReadOnly( Path.prototype, 'render', render );\n\n\n// EXPORTS //\nexport default Path;\n","import __var_0__ from './path.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* SVG path component.\n*\n* @module @stdlib/plot/components/svg/path\n*\n* @example\n* var Path = require( '@stdlib/plot/components/svg/path' );\n*\n* var path = new Path({\n*     'x': [0.1,0.2,0.3],\n*     'y': [0.4,0.5,0.6]\n* });\n*/\n\n// MODULES //\nvar Path = __var_0__;\n\n\n// EXPORTS //\nexport default Path;\n"]}