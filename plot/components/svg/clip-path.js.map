{"version":3,"sources":["@stdlib/plot/components/svg/clip-path/lib/validators/width.js","@stdlib/plot/components/svg/clip-path/lib/validators/height.js","@stdlib/plot/components/svg/clip-path/lib/validators/id.js","@stdlib/plot/components/svg/clip-path/lib/validators/auto_render.js","@stdlib/plot/components/svg/clip-path/lib/validators/index.js","@stdlib/plot/components/svg/clip-path/lib/validate.js","@stdlib/plot/components/svg/clip-path/lib/events/index.js","@stdlib/plot/components/svg/clip-path/lib/props/width/set.js","@stdlib/plot/components/svg/clip-path/lib/props/width/get.js","@stdlib/plot/components/svg/clip-path/lib/props/height/set.js","@stdlib/plot/components/svg/clip-path/lib/props/height/get.js","@stdlib/plot/components/svg/clip-path/lib/props/id/set.js","@stdlib/plot/components/svg/clip-path/lib/props/id/get.js","@stdlib/plot/components/svg/clip-path/lib/props/auto-render/set.js","@stdlib/plot/components/svg/clip-path/lib/props/auto-render/get.js","@stdlib/plot/components/svg/clip-path/lib/components/rect.js","@stdlib/plot/components/svg/clip-path/lib/components/index.js","@stdlib/plot/components/svg/clip-path/lib/methods/render.js","@stdlib/plot/components/svg/clip-path/lib/clippath.js","@stdlib/plot/components/svg/clip-path/lib/index.js"],"names":["isPositiveNumber","__var_0__","isPrimitive","test","v","TypeError","isString","isBoolean","width","height","__var_1__","id","__var_2__","autoRender","__var_3__","validators","objectKeys","isObject","hasOwnProp","KEYS","validate","opts","options","err","key","val","i","length","EVENTS","get","prop","logger","events","isValid","debug","CHANGE_EVENT","set","this","_width","emit","_height","_id","bool","_autoRender","h","ELEMENT","render","ctx","props","namespace","className","attributes","JSON","stringify","rect","children","components","vtree","EventEmitter","defineProperty","setReadOnly","minstd","__var_4__","copy","__var_5__","defaults","__var_6__","__var_7__","setWidth","__var_8__","getWidth","__var_9__","setHeight","__var_10__","getHeight","__var_11__","setID","__var_12__","getID","__var_13__","setAutoRender","__var_14__","getAutoRender","__var_15__","__var_16__","ClipPath","self","call","configurable","enumerable","writable","value","toString","on","args","Array","arguments","apply","prototype","Object","create","constructor"],"mappings":"qrBAsBIA,EAAmBC,EAAUC,YAYjC,SAASC,EAAMC,GACd,OAAMJ,EAAkBI,GAGjB,KAFC,IAAIC,UAAW,6DAA+DD,EAAI,MCd3F,IAAIJ,EAAmBC,EAAUC,YAYjC,SAASC,EAAMC,GACd,OAAMJ,EAAkBI,GAGjB,KAFC,IAAIC,UAAW,8DAAgED,EAAI,MCd5F,IAAIE,EAAWL,EAAUC,YAYzB,SAASC,EAAMC,GACd,OAAME,EAAUF,GAGT,KAFC,IAAIC,UAAW,iDAAmDD,EAAI,MCd/E,IAAIG,EAAYN,EAAUC,YAY1B,SAASC,EAAMC,GACd,OAAMG,EAAWH,GAGV,KAFC,IAAIC,UAAW,oEAAsED,EAAI,MCXlG,IAAII,EAAQP,EACRQ,EAASC,EACTC,EAAKC,EACLC,EAAaC,EAKbC,EAAa,CAChBP,MAASA,EACTC,OAAUA,EACVE,GAAMA,EACNE,WAAcA,GCZXG,EAAaf,EACbgB,EAAWP,EACXQ,EAAaN,EACbG,EAAaD,EAKbK,EAAOH,EAAYD,GA4BvB,SAASK,EAAUC,EAAMC,GACxB,IAAIC,EACAC,EACAC,EACAC,EACJ,IAAMT,EAAUK,GACf,OAAO,IAAIjB,UAAW,iEAAmEiB,EAAU,MAEpG,IAAMI,EAAI,EAAGA,EAAIP,EAAKQ,OAAQD,IAE7B,GADAF,EAAML,EAAMO,GACPR,EAAYI,EAASE,GAAQ,CAGjC,GAFAC,EAAMH,EAASE,GACfD,EAAMR,EAAYS,GAAOC,GAExB,OAAOF,EAERF,EAAMG,GAAQC,EAGhB,OAAO,4FC1DJG,EAAS3B,EAYb,SAAS4B,EAAKC,GACb,OAAOF,EAAQE,GCXhB,IAAIC,EAAS9B,EACT+B,EAAStB,EACTuB,EAAUrB,EAKVsB,EAAQH,EAAQ,sBAChBI,EAAeH,EAAQ,SAY3B,SAASI,EAAK5B,GAEb,IAAIe,EAAMU,EAASzB,GACnB,GAAKe,EACJ,MAAMA,EAEPW,EAAO,qBAAsBG,KAAKC,QAElCD,KAAKC,OAAS9B,EACd0B,EAAO,iBAAkBG,KAAKC,QAE9BD,KAAKE,KAAMJ,GC5BZ,SAASN,IAER,OAAOQ,KAAKC,OCLb,IAAIP,EAAS9B,EACT+B,EAAStB,EACTuB,EAAUrB,EAKVsB,GAAQH,EAAQ,uBAChBI,GAAeH,EAAQ,UAY3B,SAASI,GAAK3B,GAEb,IAAIc,EAAMU,EAASxB,GACnB,GAAKc,EACJ,MAAMA,EAEPW,GAAO,qBAAsBG,KAAKG,SAElCH,KAAKG,QAAU/B,EACfyB,GAAO,iBAAkBG,KAAKG,SAE9BH,KAAKE,KAAMJ,IC5BZ,SAASN,KAER,OAAOQ,KAAKG,QCLb,IAAIT,GAAS9B,EACT+B,GAAStB,EACTuB,GAAUrB,EAKVsB,GAAQH,GAAQ,mBAChBI,GAAeH,GAAQ,MAY3B,SAASI,GAAKzB,GAEb,IAAIY,EAAMU,GAAStB,GACnB,GAAKY,EACJ,MAAMA,EAEPW,GAAO,qBAAsBG,KAAKI,KAElCJ,KAAKI,IAAM9B,EACXuB,GAAO,iBAAkBG,KAAKI,KAE9BJ,KAAKE,KAAMJ,IC5BZ,SAASN,KAER,OAAOQ,KAAKI,ICLb,IAAIV,GAAS9B,EACT+B,GAAStB,EACTuB,GAAUrB,EAKVsB,GAAQH,GAAQ,6BAChBI,GAAeH,GAAQ,cAY3B,SAASI,GAAKM,GAEb,IAAInB,EAAMU,GAASS,GACnB,GAAKnB,EACJ,MAAMA,EAEPW,GAAO,qBAAsBG,KAAKM,aAElCN,KAAKM,YAAcD,EACnBR,GAAO,iBAAkBG,KAAKM,aAE9BN,KAAKE,KAAMJ,IC5BZ,SAASN,KAER,OAAOQ,KAAKM,YCNb,IAAIZ,GAAS9B,EACT2C,GAAIlC,EAKJwB,GAAQH,GAAQ,4BAChBc,GAAU,OAYd,SAASC,GAAQC,GAChB,IAAIC,EAAQ,CACXC,UAAa,6BACbC,UAAa,WACbC,WAAc,CACb3C,MAASuC,EAAIvC,MACbC,OAAUsC,EAAItC,SAMhB,OAFAyB,GAAO,0DAA2DW,GAASO,KAAKC,UAAWL,IAEpFJ,GAAGC,GAASG,EAAO,IC9B3B,IAAIjB,GAAS9B,EACT2C,GAAIlC,EACJ4C,GAAO1C,GAKPsB,GAAQH,GAAQ,4BAChBc,GAAU,WAYd,SAASC,GAAQC,GAChB,IAAIQ,EACAP,EAcJ,OAZAA,EAAQ,CACPC,UAAa,6BACbtC,GAAMoC,EAAIpC,IAGXuB,GAAO,wCACPqB,EAAW,CACVD,GAAMP,IAGPb,GAAO,0DAA2DW,GAASO,KAAKC,UAAWL,IAEpFJ,GAAGC,GAASG,EAAOO,GCrC3B,IAAIxB,GAAS9B,EACTuD,GAAa9C,GAKbwB,GAAQH,GAAQ,mBAWpB,SAASe,KAER,IAAIW,EAQJ,OANAvB,GAAO,gBACPuB,EAAQD,GAAYnB,MAGpBA,KAAKE,KAAM,UAAWkB,GAEfA,ECZR,IAAIC,GAAezD,EAAUyD,aACzB3B,GAASrB,EACTiD,GAAiB/C,EACjBgD,GAAc9C,EACd+C,GAASC,EACTC,GAAOC,EACPC,GAAWC,EACX9C,GAAW+C,EACXC,GAAWC,EACXC,GAAWC,EACXC,GAAYC,GACZC,GAAYC,GACZC,GAAQC,GACRC,GAAQC,GACRC,GAAgBC,GAChBC,GAAgBC,GAChBrC,GAASsC,GAKTlD,GAAQH,GAAQ,iBAuBpB,SAASsD,GAAU/D,GAClB,IAAIgE,EACAjE,EACAE,EACJ,KAAQc,gBAAgBgD,IACvB,OAAO,IAAIA,GAAU/D,GAKtB,GAHAgE,EAAOjD,KACPhB,EAAO0C,GAAME,IACb1C,EAAMH,GAAUC,EAAMC,GAErB,MAAMC,EAiCP,OA/BAW,GAAO,6DAA8DkB,KAAKC,UAAWhC,IACrFqC,GAAa6B,KAAMlD,MAEnBsB,GAAgBtB,KAAM,SAAU,CAC/BmD,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZC,MAAStE,EAAKb,QAEfmD,GAAgBtB,KAAM,UAAW,CAChCmD,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZC,MAAStE,EAAKZ,SAEfkD,GAAgBtB,KAAM,MAAO,CAC5BmD,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZC,MAAStE,EAAKV,IAAMkD,KAAS+B,aAE9BjC,GAAgBtB,KAAM,cAAe,CACpCmD,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZC,MAAStE,EAAKR,aAGfwB,KAAKwD,GAAI,UAUT,WACC3D,GAAO,4BACFoD,EAAK3C,aACT2C,EAAKxC,YAZPT,KAAKwD,GAAI,WAqBT,WACC,IAAIC,EACApE,EAIJ,IAHAQ,GAAO,4CACP4D,EAAO,IAAIC,MAAOC,UAAUrE,OAAO,IAC7B,GAAM,SACND,EAAI,EAAGA,EAAIsE,UAAUrE,OAAQD,IAClCoE,EAAMpE,EAAE,GAAMsE,UAAWtE,GAE1B4D,EAAK/C,KAAK0D,MAAOX,EAAMQ,MA5BjBzD,KAmCRgD,GAASa,UAAYC,OAAOC,OAAQ1C,GAAawC,WAKjDb,GAASa,UAAUG,YAAchB,GAmBjC1B,GAAgB0B,GAASa,UAAW,QAAS,CAC5CV,cAAgB,EAChBC,YAAc,EACdrD,IAAOgC,GACPvC,IAAOyC,KAoBRX,GAAgB0B,GAASa,UAAW,SAAU,CAC7CV,cAAgB,EAChBC,YAAc,EACdrD,IAAOoC,GACP3C,IAAO6C,KAmBRf,GAAgB0B,GAASa,UAAW,KAAM,CACzCV,cAAgB,EAChBC,YAAc,EACdrD,IAAOwC,GACP/C,IAAOiD,KAoBRnB,GAAgB0B,GAASa,UAAW,aAAc,CACjDV,cAAgB,EAChBC,YAAc,EACdrD,IAAO4C,GACPnD,IAAOqD,KAgBRtB,GAAayB,GAASa,UAAW,SAAUpD,IChPxC,IAACuC,GAAWpF","sourcesContent":["import __var_0__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPositiveNumber = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `width`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isPositiveNumber( v ) ) {\n\t\treturn new TypeError( 'invalid value. `width` must be a positive number. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPositiveNumber = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `height`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isPositiveNumber( v ) ) {\n\t\treturn new TypeError( 'invalid value. `height` must be a positive number. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `id`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isString( v ) ) {\n\t\treturn new TypeError( 'invalid value. `id` must be a string. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isBoolean = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `autoRender`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isBoolean( v ) ) {\n\t\treturn new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from './width.js';\nimport __var_1__ from './height.js';\nimport __var_2__ from './id.js';\nimport __var_3__ from './auto_render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar width = __var_0__;\nvar height = __var_1__;\nvar id = __var_2__;\nvar autoRender = __var_3__;\n\n\n// MAIN //\n\nvar validators = {\n\t'width': width,\n\t'height': height,\n\t'id': id,\n\t'autoRender': autoRender\n};\n\n\n// EXPORTS //\nexport default validators;\n","import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/assert/is-plain-object';\nimport __var_2__ from '@stdlib/assert/has-own-property';\nimport __var_3__ from './validators/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar isObject = __var_1__;\nvar hasOwnProp = __var_2__;\nvar validators = __var_3__;\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( validators );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveNumber} [options.width] - width\n* @param {PositiveNumber} [options.height] - height\n* @param {string} [options.id] - clipping path id\n* @param {boolean} [options.autoRender] - indicates whether to re-render on a change event\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'width': 400,\n*     'height': 400\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tvar err;\n\tvar key;\n\tvar val;\n\tvar i;\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t}\n\tfor ( i = 0; i < KEYS.length; i++ ) {\n\t\tkey = KEYS[ i ];\n\t\tif ( hasOwnProp( options, key ) ) {\n\t\t\tval = options[ key ];\n\t\t\terr = validators[ key ]( val );\n\t\t\tif ( err ) {\n\t\t\t\treturn err;\n\t\t\t}\n\t\t\topts[ key ] = val;\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default validate;\n","import __var_0__ from './events.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EVENTS = __var_0__;\n\n\n// MAIN //\n\n/**\n* Provided a property, returns a corresponding event name for when a property value changes.\n*\n* @private\n* @param {string} prop - property\n* @returns {string} event name\n*/\nfunction get( prop ) {\n\treturn EVENTS[ prop ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/width.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clippath:set:width' );\nvar CHANGE_EVENT = events( 'width' );\n\n\n// MAIN //\n\n/**\n* Sets the width.\n*\n* @private\n* @param {PositiveNumber} width - width\n* @throws {TypeError} must be a positive number\n*/\nfunction set( width ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( width );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', this._width );\n\n\tthis._width = width;\n\tdebug( 'New value: %d.', this._width );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the width.\n*\n* @private\n* @returns {number} width\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._width;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/height.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clippath:set:height' );\nvar CHANGE_EVENT = events( 'height' );\n\n\n// MAIN //\n\n/**\n* Sets the height.\n*\n* @private\n* @param {PositiveNumber} height - height\n* @throws {TypeError} must be a positive number\n*/\nfunction set( height ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( height );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', this._height );\n\n\tthis._height = height;\n\tdebug( 'New Value: %d.', this._height );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the height.\n*\n* @private\n* @returns {number} height\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._height;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/id.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clippath:set:id' );\nvar CHANGE_EVENT = events( 'id' );\n\n\n// MAIN //\n\n/**\n* Sets the clipping path id.\n*\n* @private\n* @param {string} id - id\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( id ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( id );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %s.', this._id );\n\n\tthis._id = id;\n\tdebug( 'New value: %s.', this._id );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the clipping path id.\n*\n* @private\n* @returns {string} id\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._id;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/auto_render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clip-path:set:auto-render' );\nvar CHANGE_EVENT = events( 'autoRender' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a positive number\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( bool );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', this._autoRender );\n\n\tthis._autoRender = bool;\n\tdebug( 'New Value: %d.', this._autoRender );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clippath:components:rect' );\nvar ELEMENT = 'rect';\n\n\n// MAIN //\n\n/**\n* Renders a clipping path rectangle.\n*\n* @private\n* @param {Object} ctx - context\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx ) {\n\tvar props = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'className': 'clipPath',\n\t\t'attributes': {\n\t\t\t'width': ctx.width,\n\t\t\t'height': ctx.height\n\t\t}\n\t};\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, [] );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './rect.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar rect = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clippath:components:main' );\nvar ELEMENT = 'clipPath';\n\n\n// MAIN //\n\n/**\n* Renders a clipping path.\n*\n* @private\n* @param {Object} ctx - context\n* @returns {VTree} virtual tree\n*/\nfunction render( ctx ) {\n\tvar children;\n\tvar props;\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'id': ctx.id\n\t};\n\n\tdebug( 'Rendering clipping path rectangle...' );\n\tchildren = [\n\t\trect( ctx )\n\t];\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\n\treturn h( ELEMENT, props, children );\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../components/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar components = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clippath:render' );\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @returns {VTree} virtual tree\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar vtree;\n\n\tdebug( 'Rendering...' );\n\tvtree = components( this );\n\n\t// Announce that a new tree has been rendered:\n\tthis.emit( '_render', vtree );\n\n\treturn vtree;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-property';\nimport __var_3__ from '@stdlib/utils/define-read-only-property';\nimport __var_4__ from '@stdlib/random/base/minstd';\nimport __var_5__ from '@stdlib/utils/copy';\nimport __var_6__ from './defaults.json';\nimport __var_7__ from './validate.js';\nimport __var_8__ from './props/width/set.js';\nimport __var_9__ from './props/width/get.js';\nimport __var_10__ from './props/height/set.js';\nimport __var_11__ from './props/height/get.js';\nimport __var_12__ from './props/id/set.js';\nimport __var_13__ from './props/id/get.js';\nimport __var_14__ from './props/auto-render/set.js';\nimport __var_15__ from './props/auto-render/get.js';\nimport __var_16__ from './methods/render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nvar defineProperty = __var_2__;\nvar setReadOnly = __var_3__;\nvar minstd = __var_4__;\nvar copy = __var_5__;\nvar defaults = __var_6__;\nvar validate = __var_7__;\nvar setWidth = __var_8__;\nvar getWidth = __var_9__;\nvar setHeight = __var_10__;\nvar getHeight = __var_11__;\nvar setID = __var_12__;\nvar getID = __var_13__;\nvar setAutoRender = __var_14__;\nvar getAutoRender = __var_15__;\nvar render = __var_16__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'clippath:main' );\n\n\n// MAIN //\n\n/**\n* Clipping path constructor.\n*\n* @constructor\n* @param {Options} options - constructor options\n* @param {PositiveNumber} [options.width=400] - width\n* @param {PositiveNumber} [options.height=400] - height\n* @param {string} [options.id] - clipping path id\n* @param {boolean} [options.autoRender=true] - indicates whether to re-render on a change event\n* @throws {TypeError} must provide valid options\n* @returns {ClipPath} clipping path instance\n*\n* @example\n* var clipPath = new ClipPath({\n*     'width': 500,\n*     'height': 500\n* });\n*/\nfunction ClipPath( options ) {\n\tvar self;\n\tvar opts;\n\tvar err;\n\tif ( !( this instanceof ClipPath ) ) {\n\t\treturn new ClipPath( options );\n\t}\n\tself = this;\n\topts = copy( defaults );\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tdefineProperty( this, '_width', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.width\n\t});\n\tdefineProperty( this, '_height', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.height\n\t});\n\tdefineProperty( this, '_id', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.id || minstd().toString() // TODO: uuid\n\t});\n\tdefineProperty( this, '_autoRender', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.autoRender\n\t});\n\n\tthis.on( 'change', onChange );\n\tthis.on( '_render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) { // eslint-disable-line no-underscore-dangle\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Re-emits a render event.\n\t*\n\t* @private\n\t*/\n\tfunction onRender() {\n\t\tvar args;\n\t\tvar i;\n\t\tdebug( 'Received a render event. Re-emitting...' );\n\t\targs = new Array( arguments.length+1 );\n\t\targs[ 0 ] = 'render';\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i+1 ] = arguments[ i ];\n\t\t}\n\t\tself.emit.apply( self, args );\n\t}\n}\n\n/*\n* Create a prototype which inherits from the parent prototype.\n*/\nClipPath.prototype = Object.create( EventEmitter.prototype );\n\n/*\n* Set the constructor.\n*/\nClipPath.prototype.constructor = ClipPath;\n\n/**\n* Width.\n*\n* @name width\n* @memberof ClipPath.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400\n*\n* @example\n* var clipPath = new ClipPath({\n*     'width': 500\n* });\n*\n* var width = clipPath.width;\n* // returns 500\n*/\ndefineProperty( ClipPath.prototype, 'width', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setWidth,\n\t'get': getWidth\n});\n\n/**\n* Height.\n*\n* @name height\n* @memberof ClipPath.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400\n*\n* @example\n* var clipPath = new ClipPath({\n*     'height': 500\n* });\n*\n* var height = clipPath.height;\n* // returns 500\n*/\ndefineProperty( ClipPath.prototype, 'height', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setHeight,\n\t'get': getHeight\n});\n\n/**\n* Clipping path id.\n*\n* @name id\n* @memberof ClipPath.prototype\n* @type {string}\n* @throws {TypeError} must be a primitive string\n*\n* @example\n* var clipPath = new ClipPath({\n*     'id': '1234'\n* });\n*\n* var id = clipPath.id;\n* // returns '1234'\n*/\ndefineProperty( ClipPath.prototype, 'id', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setID,\n\t'get': getID\n});\n\n/**\n* Rendering mode. If `true`, an instance re-renders on each change event.\n*\n* @name autoRender\n* @memberof ClipPath.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var clipPath = new ClipPath({\n*     'autoRender': true\n* });\n*\n* var mode = clipPath.autoRender;\n* // returns true\n*/\ndefineProperty( ClipPath.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Renders a virtual DOM tree.\n*\n* @name render\n* @memberof ClipPath.prototype\n* @type {Function}\n* @returns {VTree} virtual tree\n*\n* @example\n* var clipPath = new ClipPath();\n*\n* var out = clipPath.render();\n*/\nsetReadOnly( ClipPath.prototype, 'render', render );\n\n\n// EXPORTS //\nexport default ClipPath;\n","import __var_0__ from './clippath.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Clipping path.\n*\n* @module @stdlib/plot/components/svg/clip-path\n*\n* @example\n* var ClipPath = require( '@stdlib/plot/components/svg/clip-path' );\n*\n* var clipPath = new ClipPath({\n*     'width': 400,\n*     'height': 400\n* });\n*/\n\n// MODULES //\nvar ClipPath = __var_0__;\n\n\n// EXPORTS //\nexport default ClipPath;\n"]}