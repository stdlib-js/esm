{"version":3,"sources":["@stdlib/plot/components/svg/background/lib/validators/width.js","@stdlib/plot/components/svg/background/lib/validators/height.js","@stdlib/plot/components/svg/background/lib/validators/auto_render.js","@stdlib/plot/components/svg/background/lib/validators/index.js","@stdlib/plot/components/svg/background/lib/validate.js","@stdlib/plot/components/svg/background/lib/events/index.js","@stdlib/plot/components/svg/background/lib/props/width/set.js","@stdlib/plot/components/svg/background/lib/props/width/get.js","@stdlib/plot/components/svg/background/lib/props/height/set.js","@stdlib/plot/components/svg/background/lib/props/height/get.js","@stdlib/plot/components/svg/background/lib/props/auto-render/set.js","@stdlib/plot/components/svg/background/lib/props/auto-render/get.js","@stdlib/plot/components/svg/background/lib/methods/render.js","@stdlib/plot/components/svg/background/lib/background.js","@stdlib/plot/components/svg/background/lib/index.js"],"names":["isPositiveNumber","__var_0__","isPrimitive","test","v","TypeError","isBoolean","width","height","__var_1__","autoRender","__var_2__","validators","objectKeys","isObject","hasOwnProp","__var_3__","KEYS","validate","opts","options","err","key","val","i","length","EVENTS","get","prop","logger","events","isValid","debug","CHANGE_EVENT","set","this","_width","emit","_height","bool","_autoRender","h","ELEMENT","render","props","vtree","namespace","className","attributes","x","y","fill","stroke","JSON","stringify","EventEmitter","defineProperty","setReadOnly","copy","__var_4__","defaults","__var_5__","__var_6__","setWidth","__var_7__","getWidth","__var_8__","setHeight","__var_9__","getHeight","__var_10__","setAutoRender","__var_11__","getAutoRender","__var_12__","__var_13__","Background","self","call","configurable","enumerable","writable","value","on","args","Array","arguments","apply","prototype","Object","create","constructor"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPositiveNumber = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `width`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isPositiveNumber( v ) ) {\n\t\treturn new TypeError( 'invalid value. `width` must be a positive number. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPositiveNumber = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `height`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isPositiveNumber( v ) ) {\n\t\treturn new TypeError( 'invalid value. `height` must be a positive number. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isBoolean = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates `autoRender`.\n*\n* @private\n* @param {*} v - value to test\n* @returns {(Error|null)} error object or null\n*/\nfunction test( v ) {\n\tif ( !isBoolean( v ) ) {\n\t\treturn new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + v + '.`' );\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default test;\n","import __var_0__ from './width.js';\nimport __var_1__ from './height.js';\nimport __var_2__ from './auto_render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar width = __var_0__;\nvar height = __var_1__;\nvar autoRender = __var_2__;\n\n\n// MAIN //\n\nvar validators = {\n\t'width': width,\n\t'height': height,\n\t'autoRender': autoRender\n};\n\n\n// EXPORTS //\nexport default validators;\n","import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/assert/is-plain-object';\nimport __var_2__ from '@stdlib/assert/has-own-property';\nimport __var_3__ from './validators/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar isObject = __var_1__;\nvar hasOwnProp = __var_2__;\nvar validators = __var_3__;\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( validators );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveNumber} [options.width] - width\n* @param {PositiveNumber} [options.height] - height\n* @param {boolean} [options.autoRender] - indicates whether to re-render on a change event\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'width': 400,\n*     'height': 400\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tvar err;\n\tvar key;\n\tvar val;\n\tvar i;\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options argument must be an object. Value: `' + options + '`.' );\n\t}\n\tfor ( i = 0; i < KEYS.length; i++ ) {\n\t\tkey = KEYS[ i ];\n\t\tif ( hasOwnProp( options, key ) ) {\n\t\t\tval = options[ key ];\n\t\t\terr = validators[ key ]( val );\n\t\t\tif ( err ) {\n\t\t\t\treturn err;\n\t\t\t}\n\t\t\topts[ key ] = val;\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default validate;\n","import __var_0__ from './events.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EVENTS = __var_0__;\n\n\n// MAIN //\n\n/**\n* Provided a property, returns a corresponding event name for when a property value changes.\n*\n* @private\n* @param {string} prop - property\n* @returns {string} event name\n*/\nfunction get( prop ) {\n\treturn EVENTS[ prop ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/width.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'background:set:width' );\nvar CHANGE_EVENT = events( 'width' );\n\n\n// MAIN //\n\n/**\n* Sets the width.\n*\n* @private\n* @param {PositiveNumber} width - width\n* @throws {TypeError} must be a positive number\n*/\nfunction set( width ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( width );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', this._width );\n\n\tthis._width = width;\n\tdebug( 'New value: %d.', this._width );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the width.\n*\n* @private\n* @returns {number} width\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._width;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/height.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'background:set:height' );\nvar CHANGE_EVENT = events( 'height' );\n\n\n// MAIN //\n\n/**\n* Sets the height.\n*\n* @private\n* @param {PositiveNumber} height - height\n* @throws {TypeError} must be a positive number\n*/\nfunction set( height ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( height );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', this._height );\n\n\tthis._height = height;\n\tdebug( 'New Value: %d.', this._height );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the height.\n*\n* @private\n* @returns {number} height\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._height;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../../events/index.js';\nimport __var_2__ from './../../validators/auto_render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar events = __var_1__;\nvar isValid = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'background:set:auto-render' );\nvar CHANGE_EVENT = events( 'autoRender' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a positive number\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tvar err = isValid( bool );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Current value: %d.', this._autoRender );\n\n\tthis._autoRender = bool;\n\tdebug( 'New Value: %d.', this._autoRender );\n\n\tthis.emit( CHANGE_EVENT );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'background:render' );\nvar ELEMENT = 'rect';\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @returns {VTree} virtual DOM tree\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar props;\n\tvar vtree;\n\n\tdebug( 'Rendering...' );\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'className': 'background',\n\t\t'attributes': {\n\t\t\t'x': 0,\n\t\t\t'y': 0,\n\t\t\t'width': this.width,\n\t\t\t'height': this.height,\n\t\t\t'fill': 'none',\n\t\t\t'stroke': 'none'\n\t\t}\n\t};\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\tvtree = h( ELEMENT, props, [] );\n\n\t// Announce that a new tree has been rendered:\n\tthis.emit( '_render', vtree );\n\n\treturn vtree;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-property';\nimport __var_3__ from '@stdlib/utils/define-read-only-property';\nimport __var_4__ from '@stdlib/utils/copy';\nimport __var_5__ from './defaults.json';\nimport __var_6__ from './validate.js';\nimport __var_7__ from './props/width/set.js';\nimport __var_8__ from './props/width/get.js';\nimport __var_9__ from './props/height/set.js';\nimport __var_10__ from './props/height/get.js';\nimport __var_11__ from './props/auto-render/set.js';\nimport __var_12__ from './props/auto-render/get.js';\nimport __var_13__ from './methods/render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nvar defineProperty = __var_2__;\nvar setReadOnly = __var_3__;\nvar copy = __var_4__;\nvar defaults = __var_5__;\nvar validate = __var_6__;\nvar setWidth = __var_7__;\nvar getWidth = __var_8__;\nvar setHeight = __var_9__;\nvar getHeight = __var_10__;\nvar setAutoRender = __var_11__;\nvar getAutoRender = __var_12__;\nvar render = __var_13__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'background:main' );\n\n\n// MAIN //\n\n/**\n* Background constructor.\n*\n* @constructor\n* @param {Options} options - constructor options\n* @param {PositiveNumber} [options.width=400] - width\n* @param {PositiveNumber} [options.height=400] - height\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a change event\n* @throws {TypeError} must provide valid options\n* @returns {Background} background instance\n*\n* @example\n* var bkgd = new Background({\n*     'width': 500,\n*     'height': 500\n* });\n*/\nfunction Background( options ) {\n\tvar self;\n\tvar opts;\n\tvar err;\n\tif ( !( this instanceof Background ) ) {\n\t\treturn new Background( options );\n\t}\n\tself = this;\n\topts = copy( defaults );\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tdefineProperty( this, '_width', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.width\n\t});\n\tdefineProperty( this, '_height', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.height\n\t});\n\tdefineProperty( this, '_autoRender', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': opts.autoRender\n\t});\n\n\tthis.on( 'change', onChange );\n\tthis.on( '_render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) { // eslint-disable-line no-underscore-dangle\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Re-emits a render event.\n\t*\n\t* @private\n\t*/\n\tfunction onRender() {\n\t\tvar args;\n\t\tvar i;\n\t\tdebug( 'Received a render event. Re-emitting...' );\n\t\targs = new Array( arguments.length+1 );\n\t\targs[ 0 ] = 'render';\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i+1 ] = arguments[ i ];\n\t\t}\n\t\tself.emit.apply( self, args );\n\t}\n}\n\n/*\n* Create a prototype which inherits from the parent prototype.\n*/\nBackground.prototype = Object.create( EventEmitter.prototype );\n\n/*\n* Set the constructor.\n*/\nBackground.prototype.constructor = Background;\n\n/**\n* Width.\n*\n* @name width\n* @memberof Background.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400\n*\n* @example\n* var bkgd = new Background({\n*     'width': 500\n* });\n*\n* var width = bkgd.width;\n* // returns 500\n*/\ndefineProperty( Background.prototype, 'width', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setWidth,\n\t'get': getWidth\n});\n\n/**\n* Height.\n*\n* @name height\n* @memberof Background.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400\n*\n* @example\n* var bkgd = new Background({\n*     'height': 500\n* });\n*\n* var height = bkgd.height;\n* // returns 500\n*/\ndefineProperty( Background.prototype, 'height', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setHeight,\n\t'get': getHeight\n});\n\n/**\n* Rendering mode. If `true`, an instance re-renders on each change event.\n*\n* @name autoRender\n* @memberof Background.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var bkgd = new Background({\n*     'autoRender': true\n* });\n*\n* var mode = bkgd.autoRender;\n* // returns true\n*/\ndefineProperty( Background.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Renders a virtual DOM tree.\n*\n* @name render\n* @memberof Background.prototype\n* @type {Function}\n* @returns {VTree} virtual tree\n*\n* @example\n* var bkgd = new Background();\n*\n* var out = bkgd.render();\n*/\nsetReadOnly( Background.prototype, 'render', render );\n\n\n// EXPORTS //\nexport default Background;\n","import __var_0__ from './background.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Background.\n*\n* @module @stdlib/plot/components/svg/background\n*\n* @example\n* var Background = require( '@stdlib/plot/components/svg/background' );\n*\n* var bkgd = new Background({\n*     'width': 400,\n*     'height': 400\n* });\n*/\n\n// MODULES //\nvar Background = __var_0__;\n\n\n// EXPORTS //\nexport default Background;\n"]}