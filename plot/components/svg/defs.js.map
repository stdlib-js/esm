{"version":3,"sources":["@stdlib/plot/components/svg/defs/lib/render.js","@stdlib/plot/components/svg/defs/lib/main.js","@stdlib/plot/components/svg/defs/lib/index.js"],"names":["logger","__var_0__","h","__var_1__","debug","ELEMENT","render","vtree","props","namespace","JSON","stringify","this","emit","EventEmitter","setReadOnly","__var_2__","inherit","__var_3__","instanceOf","__var_4__","__var_5__","Defs","self","call","on","args","i","Array","arguments","length","apply","prototype"],"mappings":"6SAuBA,IAAIA,EAASC,EACTC,EAAIC,EAKJC,EAAQJ,EAAQ,eAChBK,EAAU,OAWd,SAASC,IAER,IAAIC,EACAC,EAcJ,OAZAJ,EAAO,gBAEPI,EAAQ,CACPC,UAAa,8BAGdL,EAAO,0DAA2DC,EAASK,KAAKC,UAAWH,IAC3FD,EAAQL,EAAGG,EAASG,EAAO,IAG3BI,KAAKC,KAAM,UAAWN,GAEfA,EC/BR,IAAIO,EAAeb,EAAUa,aACzBd,EAASG,EACTY,EAAcC,EACdC,EAAUC,EACVC,EAAaC,EACbd,EAASe,EAKTjB,EAAQJ,EAAQ,aAepB,SAASsB,IACR,IAAIC,EACJ,OAAMJ,EAAYP,KAAMU,IAGxBC,EAAOX,KACPR,EAAO,2BACPU,EAAaU,KAAMZ,MACnBA,KAAKa,GAAI,UAST,WACCrB,EAAO,4BACPmB,EAAKjB,YAVNM,KAAKa,GAAI,WAkBT,WACC,IAAIC,EACAC,EAIJ,IAHAvB,EAAO,4CACPsB,EAAO,IAAIE,MAAOC,UAAUC,OAAO,IAC7B,GAAM,SACNH,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAClCD,EAAMC,EAAE,GAAME,UAAWF,GAE1BJ,EAAKV,KAAKkB,MAAOR,EAAMG,MA1BjBd,MAPC,IAAIU,EAwCbL,EAASK,EAAMR,GAgBfC,EAAaO,EAAKU,UAAW,SAAU1B,GC7EpC,IAACgB,EAAOrB","sourcesContent":["import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'defs:render' );\nvar ELEMENT = 'defs';\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @returns {VTree} virtual tree\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar vtree;\n\tvar props;\n\n\tdebug( 'Rendering...' );\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg'\n\t};\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\tvtree = h( ELEMENT, props, [] );\n\n\t// Announce that a new tree has been rendered:\n\tthis.emit( '_render', vtree );\n\n\treturn vtree;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_3__ from '@stdlib/utils/inherit';\nimport __var_4__ from '@stdlib/assert/instance-of';\nimport __var_5__ from './render.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nvar setReadOnly = __var_2__;\nvar inherit = __var_3__;\nvar instanceOf = __var_4__;\nvar render = __var_5__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'defs:main' );\n\n\n// MAIN //\n\n/**\n* SVG definitions constructor.\n*\n* @constructor\n* @returns {Defs} definitions instance\n*\n* @example\n* var node = new Defs();\n* // returns <Defs>\n*/\nfunction Defs() {\n\tvar self;\n\tif ( !instanceOf( this, Defs ) ) {\n\t\treturn new Defs();\n\t}\n\tself = this;\n\tdebug( 'Creating an instance...' );\n\tEventEmitter.call( this );\n\tthis.on( 'change', onChange );\n\tthis.on( '_render', onRender );\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\tdebug( 'Received a change event.' );\n\t\tself.render();\n\t}\n\n\t/**\n\t* Re-emits a render event.\n\t*\n\t* @private\n\t*/\n\tfunction onRender() {\n\t\tvar args;\n\t\tvar i;\n\t\tdebug( 'Received a render event. Re-emitting...' );\n\t\targs = new Array( arguments.length+1 );\n\t\targs[ 0 ] = 'render';\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i+1 ] = arguments[ i ];\n\t\t}\n\t\tself.emit.apply( self, args );\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Defs, EventEmitter );\n\n/**\n* Renders a virtual DOM tree.\n*\n* @name render\n* @memberof Defs.prototype\n* @type {Function}\n* @returns {VTree} virtual tree\n*\n* @example\n* var node = new Defs();\n*\n* var out = node.render();\n* // returns <Object>\n*/\nsetReadOnly( Defs.prototype, 'render', render );\n\n\n// EXPORTS //\nexport default Defs;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* SVG plot definitions.\n*\n* @module @stdlib/plot/components/svg/defs\n*\n* @example\n* var Defs = require( '@stdlib/plot/components/svg/defs' );\n*\n* var node = new Defs();\n* // returns <Defs>\n*/\n\n// MODULES //\nvar Defs = __var_0__;\n\n\n// EXPORTS //\nexport default Defs;\n"]}