{"version":3,"sources":["@stdlib/plot/components/svg/rug/lib/accessors/is_defined.js","@stdlib/plot/components/svg/rug/lib/props/auto-render/set.js","@stdlib/plot/components/svg/rug/lib/props/auto-render/get.js","@stdlib/plot/components/svg/rug/lib/props/color/set.js","@stdlib/plot/components/svg/rug/lib/props/color/get.js","@stdlib/plot/components/svg/rug/lib/props/data/set.js","@stdlib/plot/components/svg/rug/lib/props/data/get.js","@stdlib/plot/components/svg/rug/lib/props/is-defined/set.js","@stdlib/plot/components/svg/rug/lib/props/is-defined/get.js","@stdlib/plot/components/svg/rug/lib/props/label/set.js","@stdlib/plot/components/svg/rug/lib/props/label/get.js","@stdlib/plot/components/svg/rug/lib/props/opacity/set.js","@stdlib/plot/components/svg/rug/lib/props/opacity/get.js","@stdlib/plot/components/svg/rug/lib/props/orientation/set.js","@stdlib/plot/components/svg/rug/lib/props/orientation/get.js","@stdlib/plot/components/svg/rug/lib/props/pos/get.js","@stdlib/plot/components/svg/rug/lib/props/scale/set.js","@stdlib/plot/components/svg/rug/lib/props/scale/get.js","@stdlib/plot/components/svg/rug/lib/props/size/set.js","@stdlib/plot/components/svg/rug/lib/props/size/get.js","@stdlib/plot/components/svg/rug/lib/render/utils/x_attr.js","@stdlib/plot/components/svg/rug/lib/render/utils/y_attr.js","@stdlib/plot/components/svg/rug/lib/render/utils/tick_dir.js","@stdlib/plot/components/svg/rug/lib/render/ticks.js","@stdlib/plot/components/svg/rug/lib/render/index.js","@stdlib/plot/components/svg/rug/lib/main.js","@stdlib/plot/components/svg/rug/lib/index.js"],"names":["logger","__var_0__","isnan","__var_1__","isPrimitive","debug","isDefined","d","bool","JSON","stringify","isBoolean","set","TypeError","this","_autoRender","emit","get","isString","isFunction","__var_2__","color","_color","self","isArrayLike","data","_data","fcn","_isDefined","label","_label","isNumber","opacity","isNum","RangeError","_opacity","indexOf","ORIENTATIONS","orient","Error","join","_orientation","scale","p","_scale","isNonNegativeInteger","size","_size","xAttr","yAttr","tickDir","h","__var_3__","__var_4__","ELEMENT","render","ctx","props","out","pos","dir","x","y","i","orientation","Array","length","namespace","property","className","attributes","fill","stroke","stroke-width","data-label","ticks","children","vtree","EventEmitter","defineProperty","setReadOnly","objectKeys","copy","__var_5__","merge","__var_6__","isObject","__var_7__","instanceOf","__var_8__","inherit","__var_9__","__var_10__","defaults","__var_11__","setAutoRender","__var_12__","getAutoRender","__var_13__","setColor","__var_14__","getColor","__var_15__","setData","__var_16__","getData","__var_17__","setIsDefined","__var_18__","getIsDefined","__var_19__","setLabel","__var_20__","getLabel","__var_21__","setOpacity","__var_22__","getOpacity","__var_23__","setOrientation","__var_24__","getOrientation","__var_25__","getPos","__var_26__","setScale","__var_27__","getScale","__var_28__","setSize","__var_29__","getSize","__var_30__","__var_31__","PRIVATE_PROPS","Rug","options","keys","opts","key","arguments","linear","call","configurable","enumerable","writable","value","on","onChange","onRender","args","apply","prototype"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isnan = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:accessor:is-defined' );\n\n\n// MAIN //\n\n/**\n* Predicate function which returns a boolean indicating whether a datum is defined.\n*\n* @private\n* @param {number} d - datum\n* @param {integer} i - index\n* @returns {boolean} boolean indicating whether a datum is defined\n*/\nfunction isDefined( d ) {\n\tvar bool = !isnan( d );\n\tdebug( 'Datum: %s. Defined: %s.', JSON.stringify( d ), bool );\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default isDefined;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:auto-render' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tif ( bool !== this._autoRender ) {\n\t\tdebug( 'Current value: %d.', this._autoRender );\n\n\t\tthis._autoRender = bool;\n\t\tdebug( 'New Value: %d.', this._autoRender );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:color' );\n\n\n// MAIN //\n\n/**\n* Sets the color.\n*\n* @private\n* @param {(string|Function)} color - color\n* @throws {TypeError} must be a string primitive or function\n*/\nfunction set( color ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( color ) && !isFunction( color ) ) {\n\t\tthrow new TypeError( 'invalid value. `color` must be a string primitive or a function. Value: `' + color + '.`' );\n\t}\n\tif ( color !== this._color ) {\n\t\tdebug( 'Current value: %d.', this._color );\n\n\t\tthis._color = color;\n\t\tdebug( 'New Value: %d.', this._color );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Returns a function to get a color.\n*\n* @private\n* @returns {Function} color accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( isString( this._color ) ) {\n\t\treturn color;\n\t}\n\treturn this._color;\n\n\t/**\n\t* Returns a color value.\n\t*\n\t* @private\n\t* @returns {string} color\n\t*/\n\tfunction color() {\n\t\treturn self._color; // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-array-like';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isArrayLike = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:data' );\n\n\n// MAIN //\n\n/**\n* Sets the data values.\n*\n* ## Notes\n*\n* -   We always fire a `change` event when set, even if the provided reference is the same, to allow signaling that data values have changed (e.g., a data array has mutated).\n*\n* @private\n* @param {ArrayLike} data - data values\n* @throws {TypeError} must be array-like\n*/\nfunction set( data ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isArrayLike( data ) ) {\n\t\tthrow new TypeError( 'invalid value. `data` must be array-like. Value: `' + data + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._data ) );\n\n\tthis._data = data;\n\tdebug( 'New Value: %s.', JSON.stringify( this._data ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data values.\n*\n* @private\n* @returns {ArrayLike} data values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._data;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:is-defined' );\n\n\n// MAIN //\n\n/**\n* Sets the predicate function for determining whether a value is defined.\n*\n* @private\n* @param {Function} fcn - predicate function\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `isDefined` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tif ( fcn !== this._isDefined ) {\n\t\tdebug( 'Current value: %s.', this._isDefined );\n\n\t\tthis._isDefined = fcn;\n\t\tdebug( 'New Value: %s.', this._isDefined );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the predicate function for determining whether a value is defined.\n*\n* @private\n* @returns {Function} predicate function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._isDefined;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:label' );\n\n\n// MAIN //\n\n/**\n* Sets the label.\n*\n* @private\n* @param {(string|Function)} label - label\n* @throws {TypeError} must be a string primitive or a function\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( label ) && !isFunction( label ) ) {\n\t\tthrow new TypeError( 'invalid value. `label` must be a string primitive or a function. Value: `' + label + '.`' );\n\t}\n\tif ( label !== this._label ) {\n\t\tdebug( 'Current value: %d.', this._label );\n\n\t\tthis._label = label;\n\t\tdebug( 'New Value: %d.', this._label );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Returns a function to get a label.\n*\n* @private\n* @returns {Function} label accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( isString( this._label ) ) {\n\t\treturn label;\n\t}\n\treturn this._label;\n\n\t/**\n\t* Returns a label.\n\t*\n\t* @private\n\t* @returns {string} label\n\t*/\n\tfunction label() {\n\t\treturn self._label; // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the opacity.\n*\n* @private\n* @param {(number|Function)} opacity - opacity\n* @throws {TypeError} must be a number or a function\n* @throws {RangeError} must be a number on the interval `[0,1]`\n*/\nfunction set( opacity ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isNum = isNumber( opacity );\n\tif ( !isNum && !isFunction( opacity ) ) {\n\t\tthrow new TypeError( 'invalid value. `opacity` must be a number or a function. Value: `' + opacity + '.`' );\n\t}\n\tif ( isNum && (opacity !== opacity || opacity < 0.0 || opacity > 1.0) ) {\n\t\tthrow new RangeError( 'invalid value. `opacity` must be a number on the interval `[0,1]`. Value: `' + opacity + '`.' );\n\t}\n\tif ( opacity !== this._opacity ) {\n\t\tdebug( 'Current value: %d.', this._opacity );\n\n\t\tthis._opacity = opacity;\n\t\tdebug( 'New Value: %d.', this._opacity );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNumber = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Returns a function to get an opacity.\n*\n* @private\n* @returns {Function} opacity accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( isNumber( this._opacity ) ) {\n\t\treturn opacity;\n\t}\n\treturn this._opacity;\n\n\t/**\n\t* Returns the opacity.\n\t*\n\t* @private\n\t* @returns {number} opacity\n\t*/\n\tfunction opacity() {\n\t\treturn self._opacity; // eslint-disable-line no-underscore-dangle\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar ORIENTATIONS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:orientation' );\n\n\n// MAIN //\n\n/**\n* Sets the orientation.\n*\n* @private\n* @param {string} orient - orientation\n* @throws {TypeError} must be a supported orientation\n*/\nfunction set( orient ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( ORIENTATIONS, orient ) === -1 ) {\n\t\tthrow new Error( 'invalid value. `orientation` must be one of `['+ORIENTATIONS.join(',')+']`. Value: `' + orient + '.`' );\n\t}\n\tif ( orient !== this._orientation ) {\n\t\tdebug( 'Current value: %d.', this._orientation );\n\n\t\tthis._orientation = orient;\n\t\tdebug( 'New Value: %d.', this._orientation );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the orientation.\n*\n* @private\n* @returns {string} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._orientation;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:pos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.scale;\n\treturn pos;\n\n\t/**\n\t* Maps a value to a coordinate value.\n\t*\n\t* @private\n\t* @param {*} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction pos( d ) {\n\t\tvar p = scale( d );\n\t\tdebug( 'Value: %d => Pixel: %d.', d, p );\n\t\treturn p;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:scale' );\n\n\n// MAIN //\n\n/**\n* Sets the scale function.\n*\n* @private\n* @param {Function} fcn - scale\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `scale` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tif ( fcn !== this._scale ) {\n\t\tdebug( 'Current value: %s.', this._scale );\n\n\t\tthis._scale = fcn;\n\t\tdebug( 'New Value: %s.', this._scale );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the scale function.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._scale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:set:size' );\n\n\n// MAIN //\n\n/**\n* Sets the tick (tassel) size.\n*\n* @private\n* @param {NonNegativeInteger} size - size\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( size ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( size ) ) {\n\t\tthrow new TypeError( 'invalid value. `size` must be a nonnegative integer. Value: `' + size + '.`' );\n\t}\n\tif ( size !== this._size ) {\n\t\tdebug( 'Current value: %d.', this._size );\n\n\t\tthis._size = size;\n\t\tdebug( 'New Value: %d.', this._size );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the tick (tassel) size.\n*\n* @private\n* @returns {NonNegativeInteger} tick size\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._size;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the \"x\" attribute for tick positioning.\n*\n* @private\n* @param {string} orient - rug orientation\n* @returns {string} attribute\n*/\nfunction xAttr( orient ) {\n\tif ( orient === 'left' || orient === 'right' ) {\n\t\treturn 'x';\n\t}\n\treturn 'y';\n}\n\n\n// EXPORTS //\nexport default xAttr;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the \"y\" attribute for tick positioning.\n*\n* @private\n* @param {string} orient - rug orientation\n* @returns {string} attribute\n*/\nfunction yAttr( orient ) {\n\tif ( orient === 'left' || orient === 'right' ) {\n\t\treturn 'y';\n\t}\n\treturn 'x';\n}\n\n\n// EXPORTS //\nexport default yAttr;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the tick direction.\n*\n* @private\n* @param {string} orient - orientation\n* @returns {number} tick direction\n*/\nfunction tickDir( orient ) {\n\tif ( orient === 'bottom' || orient === 'right' ) {\n\t\treturn -1;\n\t}\n\treturn 1;\n}\n\n\n// EXPORTS //\nexport default tickDir;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './utils/x_attr.js';\nimport __var_3__ from './utils/y_attr.js';\nimport __var_4__ from './utils/tick_dir.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar xAttr = __var_2__;\nvar yAttr = __var_3__;\nvar tickDir = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:render:ticks' );\nvar ELEMENT = 'line';\n\n\n// MAIN //\n\n/**\n* Renders rug ticks (tassels).\n*\n* @private\n* @param {Object} ctx - context\n* @returns {Array<VTree>} array of virtual trees\n*/\nfunction render( ctx ) {\n\tvar props;\n\tvar data;\n\tvar out;\n\tvar pos;\n\tvar dir;\n\tvar p;\n\tvar x;\n\tvar y;\n\tvar d;\n\tvar i;\n\n\tdebug( 'Rendering ticks...' );\n\n\tdata = ctx.data;\n\tpos = ctx.pos;\n\tx = xAttr( ctx.orientation );\n\ty = yAttr( ctx.orientation );\n\tdir = tickDir( ctx.orientation );\n\n\tout = new Array( data.length );\n\tfor ( i = 0; i < data.length; i++ ) {\n\t\td = data[ i ];\n\t\tif ( !ctx.isDefined( d, i ) ) {\n\t\t\tdebug( 'Datum %d is not defined. Value: %s.', i, d );\n\t\t\tcontinue;\n\t\t}\n\t\tprops = {\n\t\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t\t'property': 'rug.tick',\n\t\t\t'className': 'tick',\n\t\t\t'attributes': {\n\t\t\t\t'fill': 'none',\n\t\t\t\t'opacity': ctx.opacity( d, i ),\n\t\t\t\t'stroke': ctx.color( d, i ),\n\t\t\t\t'stroke-width': 1,\n\t\t\t\t'data-label': ctx.label( d, i )\n\t\t\t}\n\t\t};\n\n\t\tp = pos( d );\n\t\tprops.attributes[ x+'1' ] = 0;\n\t\tprops.attributes[ x+'2' ] = dir * ctx.size;\n\t\tprops.attributes[ y+'1' ] = p;\n\t\tprops.attributes[ y+'2' ] = p;\n\n\t\tdebug( 'Rendering tick %d with value %s...', i, d );\n\n\t\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\t\tout[ i ] = h( ELEMENT, props, [] );\n\t}\n\tdebug( 'Finished rendering ticks.' );\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/virtual-dom/h.js';\nimport __var_2__ from './ticks.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar h = __var_1__;\nvar ticks = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:render' );\nvar ELEMENT = 'g';\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @returns {VTree} virtual tree\n*/\nfunction render() {\n\t/* eslint-disable no-invalid-this */\n\tvar children;\n\tvar props;\n\tvar vtree;\n\n\tdebug( 'Rendering...' );\n\n\tprops = {\n\t\t'namespace': 'http://www.w3.org/2000/svg',\n\t\t'property': 'rug',\n\t\t'className': 'rug'\n\t};\n\n\tchildren = ticks( this );\n\n\tdebug( 'Generating a virtual DOM tree (%s) with properties: %s.', ELEMENT, JSON.stringify( props ) );\n\tvtree = h( ELEMENT, props, children );\n\n\t// Announce that a new tree has been rendered:\n\tthis.emit( '_render', vtree );\n\n\treturn vtree;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/define-property';\nimport __var_3__ from '@stdlib/utils/define-read-only-property';\nimport __var_4__ from '@stdlib/utils/keys';\nimport __var_5__ from '@stdlib/utils/copy';\nimport __var_6__ from '@stdlib/utils/merge';\nimport __var_7__ from '@stdlib/assert/is-plain-object';\nimport __var_8__ from '@stdlib/assert/instance-of';\nimport __var_9__ from '@stdlib/utils/inherit';\nimport __var_10__ from './accessors/is_defined.js';\nimport __var_11__ from './defaults.json';\nimport __var_12__ from './props/auto-render/set.js';\nimport __var_13__ from './props/auto-render/get.js';\nimport __var_14__ from './props/color/set.js';\nimport __var_15__ from './props/color/get.js';\nimport __var_16__ from './props/data/set.js';\nimport __var_17__ from './props/data/get.js';\nimport __var_18__ from './props/is-defined/set.js';\nimport __var_19__ from './props/is-defined/get.js';\nimport __var_20__ from './props/label/set.js';\nimport __var_21__ from './props/label/get.js';\nimport __var_22__ from './props/opacity/set.js';\nimport __var_23__ from './props/opacity/get.js';\nimport __var_24__ from './props/orientation/set.js';\nimport __var_25__ from './props/orientation/get.js';\nimport __var_26__ from './props/pos/get.js';\nimport __var_27__ from './props/scale/set.js';\nimport __var_28__ from './props/scale/get.js';\nimport __var_29__ from './props/size/set.js';\nimport __var_30__ from './props/size/get.js';\nimport __var_31__ from './render/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nimport {scaleLinear as linear} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\nvar defineProperty = __var_2__;\nvar setReadOnly = __var_3__;\nvar objectKeys = __var_4__;\nvar copy = __var_5__;\nvar merge = __var_6__;\nvar isObject = __var_7__;\nvar instanceOf = __var_8__;\nvar inherit = __var_9__;\nvar isDefined = __var_10__;\nvar defaults = __var_11__;\nvar setAutoRender = __var_12__;\nvar getAutoRender = __var_13__;\nvar setColor = __var_14__;\nvar getColor = __var_15__;\nvar setData = __var_16__;\nvar getData = __var_17__;\nvar setIsDefined = __var_18__;\nvar getIsDefined = __var_19__;\nvar setLabel = __var_20__;\nvar getLabel = __var_21__;\nvar setOpacity = __var_22__;\nvar getOpacity = __var_23__;\nvar setOrientation = __var_24__;\nvar getOrientation = __var_25__;\nvar getPos = __var_26__;\nvar setScale = __var_27__;\nvar getScale = __var_28__;\nvar setSize = __var_29__;\nvar getSize = __var_30__;\nvar render = __var_31__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'rug:main' );\nvar PRIVATE_PROPS = [\n\t'_autoRender',\n\t'_color',\n\t'_data',\n\t'_isDefined',\n\t'_label',\n\t'_opacity',\n\t'_orientation',\n\t'_scale',\n\t'_size'\n];\n\n\n// MAIN //\n\n/**\n* Rug constructor.\n*\n* @constructor\n* @param {Options} [options] - constructor options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a change event\n* @param {(string|Function)} [options.color=\"#aaa\"] - color\n* @param {ArrayLike} [options.data=[]] - data\n* @param {Function} [options.isDefined] - predicate function indicating whether a datum is defined\n* @param {(string|Function)} [options.label] - label\n* @param {(number|Function)} [options.opacity=0.9] - opacity\n* @param {string} [options.orientation=\"bottom\"] - orientation\n* @param {Function} [options.scale] - scale function\n* @param {NonNegativeInteger} [options.size=6] - tick (tassel) size\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Rug} Rug instance\n*\n* @example\n* var node = new Rug({\n*     'data': [ 0.1, 0.2, 0.3 ]\n* });\n* // returns <Rug>\n*/\nfunction Rug( options ) {\n\tvar self;\n\tvar keys;\n\tvar opts;\n\tvar key;\n\tvar i;\n\tif ( !instanceOf( this, Rug ) ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn new Rug( options );\n\t\t}\n\t\treturn new Rug();\n\t}\n\tself = this;\n\n\topts = copy( defaults );\n\topts.isDefined = isDefined;\n\topts.scale = linear();\n\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. `options` argument must be an object. Value: `' + options + '`.' );\n\t\t}\n\t\topts = merge( opts, options );\n\t}\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\t// Set options...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\n\tthis.on( 'change', onChange );\n\tthis.on( '_render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) { // eslint-disable-line no-underscore-dangle\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Re-emits a render event.\n\t*\n\t* @private\n\t*/\n\tfunction onRender() {\n\t\tvar args;\n\t\tvar i;\n\t\tdebug( 'Received a render event. Re-emitting...' );\n\t\targs = new Array( arguments.length+1 );\n\t\targs[ 0 ] = 'render';\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs[ i+1 ] = arguments[ i ];\n\t\t}\n\t\tself.emit.apply( self, args );\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Rug, EventEmitter );\n\n/**\n* Rendering mode. If `true`, an instance re-renders on each change event.\n*\n* @name autoRender\n* @memberof Rug.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var node = new Rug({\n*     'autoRender': true\n* });\n*\n* var mode = node.autoRender;\n* // returns true\n*/\ndefineProperty( Rug.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Tick color. When retrieved, the returned value is a color accessor.\n*\n* @name color\n* @memberof Rug.prototype\n* @type {(string|Function)}\n* @throws {TypeError} must be a primitive string or function\n*\n* @example\n* var node = new Rug({\n*     'color': 'steelblue'\n* });\n*\n* var color = node.color;\n* // returns <Function>\n*/\ndefineProperty( Rug.prototype, 'color', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setColor,\n\t'get': getColor\n});\n\n/**\n* Data.\n*\n* @name data\n* @memberof Rug.prototype\n* @type {ArrayLike}\n* @throws {TypeError} must be array-like\n* @default []\n*\n* @example\n* var node = new Rug({\n*     'data': [ 0.1, 0.2, 0.3 ]\n* });\n*\n* var data = node.data;\n* // returns [ 0.1, 0.2, 0.3 ]\n*/\ndefineProperty( Rug.prototype, 'data', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setData,\n\t'get': getData\n});\n\n/**\n* Predicate function which defines whether a datum is defined. This accessor is used to define how missing values are encoded. The default behavior is to ignore values which are `NaN`.\n*\n* @name isDefined\n* @memberof Rug.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var node = new Rug();\n*\n* function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n* node.isDefined = isDefined;\n*\n* @example\n* function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n* var node = new Rug({\n*     'isDefined': isDefined\n* });\n* var fcn = node.isDefined;\n* // returns <Function>\n*/\ndefineProperty( Rug.prototype, 'isDefined', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setIsDefined,\n\t'get': getIsDefined\n});\n\n/**\n* Tick label. When retrieved, the returned value is a label accessor.\n*\n* @name label\n* @memberof Rug.prototype\n* @type {(string|Function)}\n* @throws {TypeError} must be a primitive string or function\n*\n* @example\n* var node = new Rug({\n*     'label': 'group-1'\n* });\n*\n* var label = node.label;\n* // returns <Function>\n*/\ndefineProperty( Rug.prototype, 'label', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLabel,\n\t'get': getLabel\n});\n\n/**\n* Tick opacity. When retrieved, the returned value is an opacity accessor.\n*\n* @name opacity\n* @memberof Rug.prototype\n* @type {number}\n* @throws {TypeError} must be a number\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default 0.9\n*\n* @example\n* var node = new Rug({\n*     'opacity': 0.5\n* });\n*\n* var opacity = node.opacity;\n* // returns <Function>\n*/\ndefineProperty( Rug.prototype, 'opacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setOpacity,\n\t'get': getOpacity\n});\n\n/**\n* Rug orientation.\n*\n* @name orientation\n* @memberof Rug.prototype\n* @type {string}\n* @throws {TypeError} must be a supported orientation\n*\n* @example\n* var node = new Rug({\n*     'orientation': 'left'\n* });\n*\n* var orient = node.orientation;\n* // returns 'left'\n*/\ndefineProperty( Rug.prototype, 'orientation', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setOrientation,\n\t'get': getOrientation\n});\n\n/**\n* Function to map values to x coordinate values.\n*\n* @name pos\n* @memberof Rug.prototype\n* @type {Function}\n*\n* @example\n* var node = new Rug();\n*\n* var pos = node.pos;\n* // returns <Function>\n*/\ndefineProperty( Rug.prototype, 'pos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getPos\n});\n\n/**\n* Scale function.\n*\n* @name scale\n* @memberof Rug.prototype\n* @type {Function}\n* @throws {TypeError} must be a function\n*\n* @example\n* var node = new Rug({\n*     'scale': function scale() {}\n* });\n*\n* var fcn = node.scale;\n* // returns <Function>\n*/\ndefineProperty( Rug.prototype, 'scale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setScale,\n\t'get': getScale\n});\n\n/**\n* Tick (tassel) size.\n*\n* @name size\n* @memberof Rug.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 6\n*\n* @example\n* var node = new Rug({\n*     'size': 5\n* });\n*\n* var size = node.size;\n* // returns 5\n*/\ndefineProperty( Rug.prototype, 'size', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setSize,\n\t'get': getSize\n});\n\n/**\n* Renders a Virtual DOM tree.\n*\n* @name render\n* @memberof Rug.prototype\n* @type {Function}\n* @returns {VTree} virtual tree\n*\n* @example\n* var node = new Rug();\n*\n* var out = node.render();\n* // returns <Object>\n*/\nsetReadOnly( Rug.prototype, 'render', render );\n\n\n// EXPORTS //\nexport default Rug;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* SVG rug component.\n*\n* @module @stdlib/plot/components/svg/rug\n*\n* @example\n* var Rug = require( '@stdlib/plot/components/svg/rug' );\n*\n* var node = new Rug({\n*     'data': [ 0.1, 0.2, 0.3 ]\n* });\n* // returns <Rug>\n*/\n\n// MODULES //\nvar Rug = __var_0__;\n\n\n// EXPORTS //\nexport default Rug;\n"]}