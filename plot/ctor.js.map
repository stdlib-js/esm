{"version":3,"sources":["@stdlib/plot/ctor/lib/view/stdout/index.js","@stdlib/plot/ctor/lib/view/view.js","@stdlib/plot/ctor/lib/accessors/is_defined.js","@stdlib/plot/ctor/lib/defaults.js","@stdlib/plot/ctor/lib/props/x/set.js","@stdlib/plot/ctor/lib/props/x/get.js","@stdlib/plot/ctor/lib/props/y/set.js","@stdlib/plot/ctor/lib/props/y/get.js","@stdlib/plot/ctor/lib/props/labels/set.js","@stdlib/plot/ctor/lib/props/labels/get.js","@stdlib/plot/ctor/lib/props/is-defined/set.js","@stdlib/plot/ctor/lib/props/is-defined/get.js","@stdlib/plot/ctor/lib/props/colors/colors.js","@stdlib/plot/ctor/lib/props/colors/set.js","@stdlib/plot/ctor/lib/props/colors/get.js","@stdlib/plot/ctor/lib/props/line-style/set.js","@stdlib/plot/ctor/lib/props/line-style/get.js","@stdlib/plot/ctor/lib/props/line-opacity/set.js","@stdlib/plot/ctor/lib/props/line-opacity/get.js","@stdlib/plot/ctor/lib/props/line-width/set.js","@stdlib/plot/ctor/lib/props/line-width/get.js","@stdlib/plot/ctor/lib/props/symbols/set.js","@stdlib/plot/ctor/lib/props/symbols/get.js","@stdlib/plot/ctor/lib/props/symbols-size/set.js","@stdlib/plot/ctor/lib/props/symbols-size/get.js","@stdlib/plot/ctor/lib/props/symbols-opacity/set.js","@stdlib/plot/ctor/lib/props/symbols-opacity/get.js","@stdlib/plot/ctor/lib/props/width/set.js","@stdlib/plot/ctor/lib/props/width/get.js","@stdlib/plot/ctor/lib/props/height/set.js","@stdlib/plot/ctor/lib/props/height/get.js","@stdlib/plot/ctor/lib/props/padding-left/set.js","@stdlib/plot/ctor/lib/props/padding-left/get.js","@stdlib/plot/ctor/lib/props/padding-right/set.js","@stdlib/plot/ctor/lib/props/padding-right/get.js","@stdlib/plot/ctor/lib/props/padding-top/set.js","@stdlib/plot/ctor/lib/props/padding-top/get.js","@stdlib/plot/ctor/lib/props/padding-bottom/set.js","@stdlib/plot/ctor/lib/props/padding-bottom/get.js","@stdlib/plot/ctor/lib/props/x-min/set.js","@stdlib/plot/ctor/lib/utils/min.js","@stdlib/plot/ctor/lib/props/x-min/get.js","@stdlib/plot/ctor/lib/props/x-max/set.js","@stdlib/plot/ctor/lib/utils/max.js","@stdlib/plot/ctor/lib/props/x-max/get.js","@stdlib/plot/ctor/lib/props/y-min/set.js","@stdlib/plot/ctor/lib/props/y-min/get.js","@stdlib/plot/ctor/lib/props/y-max/set.js","@stdlib/plot/ctor/lib/props/y-max/get.js","@stdlib/plot/ctor/lib/props/x-scale/set.js","@stdlib/plot/ctor/lib/props/x-scale/get.js","@stdlib/plot/ctor/lib/props/y-scale/set.js","@stdlib/plot/ctor/lib/props/y-scale/get.js","@stdlib/plot/ctor/lib/props/x-tick-format/set.js","@stdlib/plot/ctor/lib/props/x-tick-format/get.js","@stdlib/plot/ctor/lib/props/y-tick-format/set.js","@stdlib/plot/ctor/lib/props/y-tick-format/get.js","@stdlib/plot/ctor/lib/props/x-num-ticks/set.js","@stdlib/plot/ctor/lib/props/x-num-ticks/get.js","@stdlib/plot/ctor/lib/props/y-num-ticks/set.js","@stdlib/plot/ctor/lib/props/y-num-ticks/get.js","@stdlib/plot/ctor/lib/props/x-axis-orient/set.js","@stdlib/plot/ctor/lib/props/x-axis-orient/get.js","@stdlib/plot/ctor/lib/props/y-axis-orient/set.js","@stdlib/plot/ctor/lib/props/y-axis-orient/get.js","@stdlib/plot/ctor/lib/props/x-rug/set.js","@stdlib/plot/ctor/lib/props/x-rug/get.js","@stdlib/plot/ctor/lib/props/y-rug/set.js","@stdlib/plot/ctor/lib/props/y-rug/get.js","@stdlib/plot/ctor/lib/props/x-rug-orient/set.js","@stdlib/plot/ctor/lib/props/x-rug-orient/get.js","@stdlib/plot/ctor/lib/props/y-rug-orient/set.js","@stdlib/plot/ctor/lib/props/y-rug-orient/get.js","@stdlib/plot/ctor/lib/props/x-rug-opacity/set.js","@stdlib/plot/ctor/lib/props/x-rug-opacity/get.js","@stdlib/plot/ctor/lib/props/y-rug-opacity/set.js","@stdlib/plot/ctor/lib/props/y-rug-opacity/get.js","@stdlib/plot/ctor/lib/props/x-rug-size/set.js","@stdlib/plot/ctor/lib/props/x-rug-size/get.js","@stdlib/plot/ctor/lib/props/y-rug-size/set.js","@stdlib/plot/ctor/lib/props/y-rug-size/get.js","@stdlib/plot/ctor/lib/props/description/set.js","@stdlib/plot/ctor/lib/props/description/get.js","@stdlib/plot/ctor/lib/props/title/set.js","@stdlib/plot/ctor/lib/props/title/get.js","@stdlib/plot/ctor/lib/props/x-label/set.js","@stdlib/plot/ctor/lib/props/x-label/get.js","@stdlib/plot/ctor/lib/props/y-label/set.js","@stdlib/plot/ctor/lib/props/y-label/get.js","@stdlib/plot/ctor/lib/props/engine/set.js","@stdlib/plot/ctor/lib/props/engine/get.js","@stdlib/plot/ctor/lib/props/auto-render/set.js","@stdlib/plot/ctor/lib/props/auto-render/get.js","@stdlib/plot/ctor/lib/props/render-format/set.js","@stdlib/plot/ctor/lib/props/render-format/get.js","@stdlib/plot/ctor/lib/props/viewer/set.js","@stdlib/plot/ctor/lib/props/viewer/get.js","@stdlib/plot/ctor/lib/props/auto-view/set.js","@stdlib/plot/ctor/lib/props/auto-view/get.js","@stdlib/plot/ctor/lib/props/graph-width/get.js","@stdlib/plot/ctor/lib/props/graph-height/get.js","@stdlib/plot/ctor/lib/props/x-domain/get.js","@stdlib/plot/ctor/lib/props/y-domain/get.js","@stdlib/plot/ctor/lib/props/x-range/get.js","@stdlib/plot/ctor/lib/props/y-range/get.js","@stdlib/plot/ctor/lib/props/x-pos/get.js","@stdlib/plot/ctor/lib/props/y-pos/get.js","@stdlib/plot/ctor/lib/render/svg/utils/x_axis_transform.js","@stdlib/plot/ctor/lib/render/svg/utils/y_axis_transform.js","@stdlib/plot/ctor/lib/render/svg/marks/lines.js","@stdlib/plot/ctor/lib/render/svg/marks/symbols.js","@stdlib/plot/ctor/lib/render/svg/utils/x_rug_transform.js","@stdlib/plot/ctor/lib/render/svg/marks/x_rug.js","@stdlib/plot/ctor/lib/render/svg/utils/y_rug_transform.js","@stdlib/plot/ctor/lib/render/svg/marks/y_rug.js","@stdlib/plot/ctor/lib/render/svg/marks/index.js","@stdlib/plot/ctor/lib/render/svg/init.js","@stdlib/plot/ctor/lib/render/svg/sync.js","@stdlib/plot/ctor/lib/render/svg/index.js","@stdlib/plot/ctor/lib/render/validate.js","@stdlib/plot/ctor/lib/render/index.js","@stdlib/plot/ctor/lib/view/index.js","@stdlib/plot/ctor/lib/main.js","@stdlib/plot/ctor/lib/factory.js","@stdlib/plot/ctor/lib/index.js"],"names":["view","plot","console","log","JSON","stringify","stdout","__var_0__","viewer","vtree","Error","logger","isnan","__var_1__","isPrimitive","debug","isDefined","d","bool","isNodeREPL","defaults","isREPL","o","autoRender","autoView","colors","description","engine","height","labels","lineOpacity","lineStyle","lineWidth","paddingBottom","paddingLeft","paddingRight","paddingTop","renderFormat","symbols","symbolsOpacity","symbolsSize","title","width","x","xAxisOrient","xLabel","xMax","xMin","xNumTicks","xRug","xRugOrient","xRugOpacity","xRugSize","xScale","xTickFormat","y","yAxisOrient","yLabel","yMax","yMin","yNumTicks","yRug","yRugOrient","yRugOpacity","yRugSize","yScale","yTickFormat","isArray","set","TypeError","this","_xData","slice","emit","get","_yData","isEmptyArray","isStringArray","__var_2__","primitives","_labels","isFunction","fcn","_isDefined","COLORS","category10","category20","category20b","category20c","isString","__var_3__","v","isStr","_colors","indexOf","LINESTYLES","__var_4__","i","length","join","_lineStyle","isNumber","isNumberArray","isNum","RangeError","_lineOpacity","isNonNegativeInteger","isNonNegativeIntegerArray","isInt","_lineWidth","SYMBOLS","_symbols","_symbolsSize","_symbolsOpacity","isPositiveNumber","_width","_height","padding","_paddingLeft","_paddingRight","_paddingTop","_paddingBottom","isNull","min","_xMin","getMin","arr","tmp","Array","max","_xMax","getMax","_yMin","_yMax","scale","_xScale","time","domain","xDomain","range","xRange","linear","_yScale","yDomain","yRange","fmt","_xTickFormat","timeFormat","format","_yTickFormat","ticks","_xNumTicks","_yNumTicks","ORIENTATIONS","orientation","_xAxisOrient","_yAxisOrient","isBoolean","isBooleanArray","isBool","_xRug","_yRug","_xRugOrient","_yRugOrient","_xRugOpacity","_yRugOpacity","_xRugSize","_yRugSize","str","_description","_title","label","_xLabel","_yLabel","contains","ENGINES","_engine","_autoRender","FORMATS","_renderFormat","VIEWERS","_viewer","_autoView","graphWidth","graphHeight","px","xAxisTransform","orient","yAxisTransform","render","state","nOpacities","opacity","nColors","nStyles","nWidths","color","marks","line","len","$","svg","path","style","push","nSymbols","nSizes","symbol","size","sym","xRugTransform","rugTransform","nOrients","nFlgs","rug","data","properties","className","attributes","transform","yRugTransform","lines","parent","concat","children","count","defineProperty","Annotations","ClipPath","Canvas","Graph","__var_5__","Title","__var_6__","Marks","__var_7__","Bkgd","__var_8__","Defs","__var_9__","Axis","__var_10__","Path","__var_11__","Symbols","__var_12__","Rug","__var_13__","init","configurable","enumerable","writable","value","id","_clipPathId","clipPathId","sync","canvas","clipPath","graph","translateX","translateY","text","bkgd","xAxis","tickFormat","numTicks","yAxis","renderMarks","annotations","defs","validate","vdom2html","renderSVG","out","arguments","_view","EventEmitter","objectKeys","setReadOnly","isObject","copy","inherit","mergeFcn","factory","minstd","setX","getX","setY","__var_14__","getY","__var_15__","setLabels","__var_16__","getLabels","__var_17__","setIsDefined","__var_18__","getIsDefined","__var_19__","setColors","__var_20__","getColors","__var_21__","setLineStyle","__var_22__","getLineStyle","__var_23__","setLineOpacity","__var_24__","getLineOpacity","__var_25__","setLineWidth","__var_26__","getLineWidth","__var_27__","setSymbols","__var_28__","getSymbols","__var_29__","setSymbolsSize","__var_30__","getSymbolsSize","__var_31__","setSymbolsOpacity","__var_32__","getSymbolsOpacity","__var_33__","setWidth","__var_34__","getWidth","__var_35__","setHeight","__var_36__","getHeight","__var_37__","setPaddingLeft","__var_38__","getPaddingLeft","__var_39__","setPaddingRight","__var_40__","getPaddingRight","__var_41__","setPaddingTop","__var_42__","getPaddingTop","__var_43__","setPaddingBottom","__var_44__","getPaddingBottom","__var_45__","setXMin","__var_46__","getXMin","__var_47__","setXMax","__var_48__","getXMax","__var_49__","setYMin","__var_50__","getYMin","__var_51__","setYMax","__var_52__","getYMax","__var_53__","setXScale","__var_54__","getXScale","__var_55__","setYScale","__var_56__","getYScale","__var_57__","setXTickFormat","__var_58__","getXTickFormat","__var_59__","setYTickFormat","__var_60__","getYTickFormat","__var_61__","setXNumTicks","__var_62__","getXNumTicks","__var_63__","setYNumTicks","__var_64__","getYNumTicks","__var_65__","setXAxisOrient","__var_66__","getXAxisOrient","__var_67__","setYAxisOrient","__var_68__","getYAxisOrient","__var_69__","setXRug","__var_70__","getXRug","__var_71__","setYRug","__var_72__","getYRug","__var_73__","setXRugOrient","__var_74__","getXRugOrient","__var_75__","setYRugOrient","__var_76__","getYRugOrient","__var_77__","setXRugOpacity","__var_78__","getXRugOpacity","__var_79__","setYRugOpacity","__var_80__","getYRugOpacity","__var_81__","setXRugSize","__var_82__","getXRugSize","__var_83__","setYRugSize","__var_84__","getYRugSize","__var_85__","setDescription","__var_86__","getDescription","__var_87__","setTitle","__var_88__","getTitle","__var_89__","setXLabel","__var_90__","getXLabel","__var_91__","setYLabel","__var_92__","getYLabel","__var_93__","setEngine","__var_94__","getEngine","__var_95__","setAutoRender","__var_96__","getAutoRender","__var_97__","setRenderFormat","__var_98__","getRenderFormat","__var_99__","setViewer","__var_100__","getViewer","__var_101__","setAutoView","__var_102__","getAutoView","__var_103__","getGraphWidth","__var_104__","getGraphHeight","__var_105__","getXDomain","__var_106__","getYDomain","__var_107__","getXRange","__var_108__","getYRange","__var_109__","getXPos","__var_110__","getYPos","__var_111__","__var_112__","viewMethod","__var_113__","PRIVATE_PROPS","merge","extend","Plot","options","nargs","keys","self","opts","key","call","toString","on","onChange","onRender","prototype"],"mappings":"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","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Writes a plot (rendered as a virtual DOM tree) to `stdout`.\n*\n* @private\n* @param {VTree} plot - virtual tree\n*/\nfunction view( plot ) {\n\tconsole.log( JSON.stringify( plot ) );\n}\n\n\n// EXPORTS //\nexport default view;\n","import __var_0__ from './stdout/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar stdout = __var_0__;\n\n\n// MAIN //\n\n/**\n* Generates a plot view.\n*\n* @private\n* @param {Plot} plot - plot context\n* @param {string} viewer - plot viewer\n* @param {VTree} vtree - virtual tree\n* @throws {Error} must specify a supported viewer\n* @returns {void}\n*/\nfunction view( plot, viewer, vtree ) {\n\tif ( viewer === 'none' ) {\n\t\treturn;\n\t}\n\tif ( viewer === 'stdout' ) {\n\t\treturn stdout( vtree );\n\t}\n\tif ( viewer === 'browser' ) {\n\t\tthrow new Error( 'invalid argument. Must provide a supported viewer. Value: `'+viewer+'`.' );\n\t}\n\tif ( viewer === 'terminal' ) {\n\t\t// TODO: ASCII\n\t\treturn;\n\t}\n\tthrow new Error( 'invalid argument. Must provide a supported viewer. Value: `'+viewer+'`.' );\n}\n\n\n// EXPORTS //\nexport default view;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isnan = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:accessor:is-defined' );\n\n\n// MAIN //\n\n/**\n* Accessor function which determines whether a datum is defined.\n*\n* @private\n* @param {number} d - datum\n* @param {integer} i - index\n* @returns {boolean} boolean indicating whether a datum is defined\n*/\nfunction isDefined( d ) {\n\tvar bool = !isnan( d );\n\tdebug( 'Datum: %s. Defined: %s.', JSON.stringify( d ), bool );\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default isDefined;\n","import __var_0__ from '@stdlib/assert/is-node-repl';\nimport __var_1__ from './accessors/is_defined.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNodeREPL = __var_0__;\nvar isDefined = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns default options.\n*\n* @private\n* @returns {Object} default options\n*/\nfunction defaults() {\n\tvar isREPL;\n\tvar o;\n\n\tisREPL = isNodeREPL();\n\to = {};\n\n\t// Boolean indicating whether to re-render on a change event:\n\to.autoRender = false;\n\n\t// Boolean indicating whether to generate an updated view on a render event:\n\to.autoView = false;\n\n\t// Data colors:\n\to.colors = 'category10';\n\n\t// Plot description:\n\to.description = '';\n\n\t// Plot engine:\n\to.engine = 'svg';\n\n\t// Plot height:\n\to.height = 400; // px\n\n\t// Accessor indicating whether a datum is defined:\n\to.isDefined = isDefined;\n\n\t// Data labels:\n\to.labels = [];\n\n\t// Data line opacity:\n\to.lineOpacity = 0.9; // [0,1]\n\n\t// Data line style(s):\n\to.lineStyle = '-';\n\n\t// Data line width(s):\n\to.lineWidth = 2; // px\n\n\t// FIXME: padding props depend on orientation (may require using `null` to flag)\n\n\t// Bottom padding:\n\to.paddingBottom = 80; // px\n\n\t// Left padding:\n\to.paddingLeft = 90; // px\n\n\t// Right padding:\n\to.paddingRight = 20; // px\n\n\t// Top padding:\n\to.paddingTop = 80; // px\n\n\t// Render format:\n\to.renderFormat = 'vdom';\n\n\t// Data symbols:\n\to.symbols = 'none';\n\n\t// Symbols opacity:\n\to.symbolsOpacity = 0.9; // [0,1]\n\n\t// Symbols size:\n\to.symbolsSize = 6; // px\n\n\t// Plot title:\n\to.title = '';\n\n\t// Plot viewer:\n\tif ( isREPL ) {\n\t\to.viewer = 'window';\n\t} else {\n\t\to.viewer = 'none';\n\t}\n\t// Plot width:\n\to.width = 400; // px\n\n\t// x-values:\n\to.x = [];\n\n\t// x-axis orientation:\n\to.xAxisOrient = 'bottom';\n\n\t// x-axis label:\n\to.xLabel = 'x';\n\n\t// Maximum value of x-axis domain:\n\to.xMax = null;\n\n\t// Minimum value of x-axis domain:\n\to.xMin = null;\n\n\t// Number of x-axis tick marks:\n\to.xNumTicks = 5;\n\n\t// Boolean indicating whether to render a rug plot along the x-axis:\n\to.xRug = false;\n\n\t// x-axis rug orientation:\n\to.xRugOrient = 'bottom';\n\n\t// x-axis rug opacity:\n\to.xRugOpacity = 0.1; // [0,1]\n\n\t// x-axis rug tick (tassel) size:\n\to.xRugSize = 6; // px\n\n\t// x-axis scale:\n\to.xScale = 'linear';\n\n\t// x-axis tick format:\n\to.xTickFormat = null;\n\n\t// y-values:\n\to.y = [];\n\n\t// y-axis orientation:\n\to.yAxisOrient = 'left';\n\n\t// y-axis label:\n\to.yLabel = 'y';\n\n\t// Maximum value of y-axis domain:\n\to.yMax = null;\n\n\t// Minimum value of y-axis domain:\n\to.yMin = null;\n\n\t// Number of y-axis tick marks:\n\to.yNumTicks = 5;\n\n\t// Boolean indicating whether to render a rug plot along the y-axis:\n\to.yRug = false;\n\n\t// y-axis rug orientation:\n\to.yRugOrient = 'left';\n\n\t// y-axis rug opacity:\n\to.yRugOpacity = 0.1; // [0,1]\n\n\t// y-axis rug tick (tassel) size:\n\to.yRugSize = 6; // px\n\n\t// y-axis scale:\n\to.yScale = 'linear';\n\n\t// y-axis tick format:\n\to.yTickFormat = null;\n\n\treturn o;\n}\n\n\n// EXPORTS //\nexport default defaults;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isArray = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x' );\n\n\n// MAIN //\n\n/**\n* Sets the plot `x` values.\n*\n* @private\n* @param {Array} x - x values\n* @throws {TypeError} must be an array\n* @returns {void}\n*/\nfunction set( x ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isArray( x ) ) {\n\t\tthrow new TypeError( 'invalid value. `x` must be an array. Value: `' + x + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._xData ) );\n\n\tthis._xData = x.slice();\n\tdebug( 'New Value: %s.', JSON.stringify( this._xData ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the plot `x` values.\n*\n* @private\n* @returns {Array} x values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xData.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isArray = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y' );\n\n\n// MAIN //\n\n/**\n* Sets the plot `y` values.\n*\n* @private\n* @param {Array} y - y values\n* @throws {TypeError} must be an array\n* @returns {void}\n*/\nfunction set( y ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isArray( y ) ) {\n\t\tthrow new TypeError( 'invalid value. `y` must be an array. Value: `' + y + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._yData ) );\n\n\tthis._yData = y.slice();\n\tdebug( 'New Value: %s.', JSON.stringify( this._yData ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the plot `y` values.\n*\n* @private\n* @returns {Array} y values\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yData.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-empty-array';\nimport __var_2__ from '@stdlib/assert/is-string-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isEmptyArray = __var_1__;\nvar isStringArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:labels' );\n\n\n// MAIN //\n\n/**\n* Sets the data labels.\n*\n* @private\n* @param {(StringArray|EmptyArray)} labels - data labels\n* @throws {TypeError} must be either an array of strings or an empty array\n* @returns {void}\n*/\nfunction set( labels ) {\n\t/* eslint-disable no-invalid-this */\n\tif (\n\t\t!isEmptyArray( labels ) &&\n\t\t!isStringArray( labels )\n\t) {\n\t\tthrow new TypeError( 'invalid value. `labels` must be either an array of strings or an empty array. Value: `' + labels + '.`' );\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._labels ) );\n\n\tthis._labels = labels.slice();\n\tdebug( 'New Value: %s.', JSON.stringify( this._labels ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data labels.\n*\n* @private\n* @returns {(EmptyArray|StringArray)} labels\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._labels.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isFunction = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:is-defined' );\n\n\n// MAIN //\n\n/**\n* Sets the accessor for defined values.\n*\n* @private\n* @param {Function} fcn - accessor\n* @throws {TypeError} must be a function\n*/\nfunction set( fcn ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid value. `isDefined` must be a function. Value: `' + fcn + '.`' );\n\t}\n\tif ( fcn !== this._isDefined ) {\n\t\tdebug( 'Current value: %s.', this._isDefined );\n\n\t\tthis._isDefined = fcn;\n\t\tdebug( 'New Value: %s.', this._isDefined );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the accessor for defined values.\n*\n* @private\n* @returns {Function} accessor\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._isDefined;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* See [D3]{@link https://github.com/d3/d3-scale/blob/master/README.md}.\n*/\n\nvar COLORS = {};\n\nCOLORS.category10 = [\n\t'#1f77b4', // 'category10-1'\n\t'#ff7f0e', // 'category10-2'\n\t'#2ca02c', // 'category10-3'\n\t'#d62728', // 'category10-4'\n\t'#9467bd', // 'category10-5'\n\t'#8c564b', // 'category10-6'\n\t'#e377c2', // 'category10-7'\n\t'#7f7f7f', // 'category10-8'\n\t'#bcdb22', // 'category10-9'\n\t'#17becf'  // 'category10-10'\n];\n\nCOLORS.category20 = [\n\t'#1f77b4', // 'category20-1'\n\t'#aec7e8', // 'category20-2'\n\t'#ff7f0e', // 'category20-3'\n\t'#ffbb78', // 'category20-4'\n\t'#2ca02c', // 'category20-5'\n\t'#98df8a', // 'category20-6'\n\t'#d62728', // 'category20-7'\n\t'#ff9896', // 'category20-8'\n\t'#9467bd', // 'category20-9'\n\t'#c5b0d5', // 'category20-10'\n\t'#8c564b', // 'category20-11'\n\t'#c49c94', // 'category20-12'\n\t'#e377c2', // 'category20-13'\n\t'#f7b6d2', // 'category20-14'\n\t'#7f7f7f', // 'category20-15'\n\t'#c7c7c7', // 'category20-16'\n\t'#bcbd22', // 'category20-17'\n\t'#dbdb8d', // 'category20-18'\n\t'#17becf', // 'category20-19'\n\t'#9edae5'  // 'category20-20'\n];\n\nCOLORS.category20b = [\n\t'#393b79', // 'category20b-1'\n\t'#5254a3', // 'category20b-2'\n\t'#6b6ecf', // 'category20b-3'\n\t'#9c9ede', // 'category20b-4'\n\t'#637939', // 'category20b-5'\n\t'#8ca252', // 'category20b-6'\n\t'#b5cf6b', // 'category20b-7'\n\t'#cedb9c', // 'category20b-8'\n\t'#8c6d31', // 'category20b-9'\n\t'#bd9e39', // 'category20b-10'\n\t'#e7ba52', // 'category20b-11'\n\t'#e7cb94', // 'category20b-12'\n\t'#843c39', // 'category20b-13'\n\t'#ad494a', // 'category20b-14'\n\t'#d6616b', // 'category20b-15'\n\t'#e7969c', // 'category20b-16'\n\t'#7b4173', // 'category20b-17'\n\t'#a55194', // 'category20b-18'\n\t'#ce6dbd', // 'category20b-19'\n\t'#de9ed6'  // 'category20b-20'\n];\n\nCOLORS.category20c = [\n\t'#3182bd', // 'category20c-1'\n\t'#6baed6', // 'category20c-2'\n\t'#9ecae1', // 'category20c-3'\n\t'#c6dbef', // 'category20c-4'\n\t'#e6550d', // 'category20c-5'\n\t'#fd8d3c', // 'category20c-6'\n\t'#fdae6b', // 'category20c-7'\n\t'#fdd0a2', // 'category20c-8'\n\t'#31a354', // 'category20c-9'\n\t'#74c476', // 'category20c-10'\n\t'#a1d99b', // 'category20c-11'\n\t'#c7e9c0', // 'category20c-12'\n\t'#756bb1', // 'category20c-13'\n\t'#9e9ac8', // 'category20c-14'\n\t'#bcbddc', // 'category20c-15'\n\t'#dadaeb', // 'category20c-16'\n\t'#636363', // 'category20c-17'\n\t'#969696', // 'category20c-18'\n\t'#bdbdbd', // 'category20c-19'\n\t'#d9d9d9'  // 'category20c-20'\n];\n\n\n// EXPORTS //\nexport default COLORS;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-string-array';\nimport __var_3__ from './colors.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isStringArray = __var_2__.primitives;\nvar COLORS = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:colors' );\n\n\n// MAIN //\n\n/**\n* Sets the data colors.\n*\n* @private\n* @param {(string|StringArray)} v - data colors\n* @throws {TypeError} must be either a string or an array of strings\n* @returns {void}\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isStr = isString( v );\n\tif ( !isStr && !isStringArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `colors` must be either a string or a string array. Value: `' + v + '.`' );\n\t}\n\tif ( isStr ) {\n\t\tif ( COLORS[ v ] === void 0 ) {\n\t\t\tv = [ v ];\n\t\t} else {\n\t\t\tv = COLORS[ v ].slice();\n\t\t}\n\t} else {\n\t\tv = v.slice();\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._colors ) );\n\n\tthis._colors = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._colors ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data colors.\n*\n* @private\n* @returns {StringArray} colors\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._colors.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-string-array';\nimport __var_3__ from '@stdlib/utils/index-of';\nimport __var_4__ from './line_styles.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isStringArray = __var_2__.primitives;\nvar indexOf = __var_3__;\nvar LINESTYLES = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:line-style' );\n\n\n// MAIN //\n\n/**\n* Sets the data line style(s).\n*\n* @private\n* @param {(string|StringArray)} v - line style(s)\n* @throws {TypeError} must be a string or string array\n* @throws {Error} must be a supported line style\n* @returns {void}\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isStr = isString( v );\n\tvar i;\n\tif ( !isStr && !isStringArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `lineStyle` must be a string or a string array. Value: `'+v+'.`' );\n\t}\n\tif ( isStr ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( indexOf( LINESTYLES, v[i] ) === -1 ) {\n\t\t\tthrow new Error( 'invalid value. Unsupported/unrecognized line style. Must be one of `['+LINESTYLES.join(',')+']`. Value: `'+v[i]+'`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._lineStyle ) );\n\n\tthis._lineStyle = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._lineStyle ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data line style(s).\n*\n* @private\n* @returns {StringArray} line style(s)\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._lineStyle.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-number-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\nvar isNumberArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:line-opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the data line opacity.\n*\n* @private\n* @param {(number|NumberArray)} v - opacity\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @returns {void}\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isNum = isNumber( v );\n\tvar i;\n\tif ( !isNum && !isNumberArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `lineOpacity` must be a number or number array. Value: `' + v + '.`' );\n\t}\n\tif ( isNum ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( v[ i ] < 0.0 || v[ i ] > 1.0 ) {\n\t\t\tthrow new RangeError( 'invalid value. A `lineOpacity` must be a number on the interval `[0,1]`. Value: `' + v[i] + '`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._lineOpacity ) );\n\n\tthis._lineOpacity = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._lineOpacity ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data line opacity.\n*\n* @private\n* @returns {NumberArray} line opacity\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._lineOpacity.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\nvar isNonNegativeIntegerArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:line-width' );\n\n\n// MAIN //\n\n/**\n* Sets the data line width(s).\n*\n* @private\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} v - width\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n* @returns {void}\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isInt = isNonNegativeInteger( v );\n\tif ( !isInt && !isNonNegativeIntegerArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `lineWidth` must be a nonnegative integer or nonnegative integer array. Value: `' + v + '.`' );\n\t}\n\tif ( isInt ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._lineWidth ) );\n\n\tthis._lineWidth = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._lineWidth ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data line width.\n*\n* @private\n* @returns {Array<NonNegativeInteger>} line width(s)\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._lineWidth.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-string-array';\nimport __var_3__ from '@stdlib/utils/index-of';\nimport __var_4__ from './symbols.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isStringArray = __var_2__.primitives;\nvar indexOf = __var_3__;\nvar SYMBOLS = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:symbols' );\n\n\n// MAIN //\n\n/**\n* Sets the data symbols.\n*\n* @private\n* @param {(string|StringArray)} v - data symbols\n* @throws {TypeError} must be a string or string array\n* @throws {Error} must be a supported symbol\n* @returns {void}\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isStr = isString( v );\n\tvar i;\n\tif ( !isStr && !isStringArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `symbols` must be a string or string array. Value: `'+v+'.`' );\n\t}\n\tif ( isStr ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( indexOf( SYMBOLS, v[i] ) === -1 ) {\n\t\t\tthrow new Error( 'invalid value. Unrecognized/unsupported symbol. Value: `['+v.join(',')+']`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._symbols ) );\n\n\tthis._symbols = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._symbols ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the data symbols.\n*\n* @private\n* @returns {StringArray} symbols\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._symbols.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\nvar isNonNegativeIntegerArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:symbols-size' );\n\n\n// MAIN //\n\n/**\n* Sets the symbols size.\n*\n* @private\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} v - size\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n* @returns {void}\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isInt = isNonNegativeInteger( v );\n\tif ( !isInt && !isNonNegativeIntegerArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `symbolsSize` must be a nonnegative integer or nonnegative integer array. Value: `' + v + '.`' );\n\t}\n\tif ( isInt ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._symbolsSize ) );\n\n\tthis._symbolsSize = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._symbolsSize ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the symbols size.\n*\n* @private\n* @returns {Array<NonNegativeInteger>} symbols sizes\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._symbolsSize.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-number-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\nvar isNumberArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:symbols-opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the symbol opacity.\n*\n* @private\n* @param {(number|NumberArray)} v - opacity\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @returns {void}\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isNum = isNumber( v );\n\tvar i;\n\tif ( !isNum && !isNumberArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `symbolsOpacity` must be a number or number array. Value: `' + v + '.`' );\n\t}\n\tif ( isNum ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( v[ i ] < 0.0 || v[ i ] > 1.0 ) {\n\t\t\tthrow new RangeError( 'invalid value. A `symbolsOpacity` must be a number on the interval `[0,1]`. Value: `' + v[i] + '`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._symbolsOpacity ) );\n\n\tthis._symbolsOpacity = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._symbolsOpacity ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the symbols opacity.\n*\n* @private\n* @returns {NumberArray} symbols opacity\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._symbolsOpacity.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isPositiveNumber = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:width' );\n\n\n// MAIN //\n\n/**\n* Sets the width.\n*\n* @private\n* @param {PositiveNumber} width - width\n* @throws {TypeError} must be a positive number\n*/\nfunction set( width ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isPositiveNumber( width ) ) {\n\t\tthrow new TypeError( 'invalid value. `width` must be a positive number. Value: `' + width + '.`' );\n\t}\n\tif ( width !== this._width ) {\n\t\tdebug( 'Current value: %d.', this._width );\n\n\t\tthis._width = width;\n\t\tdebug( 'New value: %d.', this._width );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the width.\n*\n* @private\n* @returns {number} width\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._width;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-positive-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isPositiveNumber = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:height' );\n\n\n// MAIN //\n\n/**\n* Sets the height.\n*\n* @private\n* @param {PositiveNumber} height - height\n* @throws {TypeError} must be a positive number\n* @returns {void}\n*/\nfunction set( height ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isPositiveNumber( height ) ) {\n\t\tthrow new TypeError( 'invalid value. `height` must be a positive number. Value: `' + height + '.`' );\n\t}\n\tif ( height !== this._height ) {\n\t\tdebug( 'Current value: %d.', this._height );\n\n\t\tthis._height = height;\n\t\tdebug( 'New Value: %d.', this._height );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the height.\n*\n* @private\n* @returns {number} height\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._height;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:padding-left' );\n\n\n// MAIN //\n\n/**\n* Sets the left padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingLeft` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingLeft ) {\n\t\tdebug( 'Current value: %d.', this._paddingLeft );\n\n\t\tthis._paddingLeft = padding;\n\t\tdebug( 'New value: %d.', this._paddingLeft );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the left padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingLeft;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:padding-right' );\n\n\n// MAIN //\n\n/**\n* Sets the right padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingRight` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingRight ) {\n\t\tdebug( 'Current value: %d.', this._paddingRight );\n\n\t\tthis._paddingRight = padding;\n\t\tdebug( 'New value: %d.', this._paddingRight );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the right padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingRight;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:padding-top' );\n\n\n// MAIN //\n\n/**\n* Sets the top padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingTop` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingTop ) {\n\t\tdebug( 'Current value: %d.', this._paddingTop );\n\n\t\tthis._paddingTop = padding;\n\t\tdebug( 'New value: %d.', this._paddingTop );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the top padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingTop;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:padding-bottom' );\n\n\n// MAIN //\n\n/**\n* Sets the bottom padding.\n*\n* @private\n* @param {NonNegativeInteger} padding - padding\n* @throws {TypeError} must be a nonnegative integer\n*/\nfunction set( padding ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNonNegativeInteger( padding ) ) {\n\t\tthrow new TypeError( 'invalid value. `paddingBottom` must be a nonnegative integer. Value: `' + padding + '.`' );\n\t}\n\tif ( padding !== this._paddingBottom ) {\n\t\tdebug( 'Current value: %d.', this._paddingBottom );\n\n\t\tthis._paddingBottom = padding;\n\t\tdebug( 'New value: %d.', this._paddingBottom );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the bottom padding.\n*\n* @private\n* @returns {number} padding\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._paddingBottom;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNumber = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-min' );\n\n\n// MAIN //\n\n/**\n* Sets the minimum value of the x-axis domain.\n*\n* @private\n* @param {(Date|FiniteNumber|null)} min - minimum value\n* @throws {TypeError} must be a finite number primitive or null\n* @returns {void}\n*/\nfunction set( min ) {\n\t/* eslint-disable no-invalid-this */\n\n\t// TODO: add test to determine if evaluates to valid date?\n\tif (\n\t\t!isNull( min ) &&\n\t\t!isNumber( min ) // FIXME: finite number\n\n\t\t// TODO: Date\n\t) {\n\t\tthrow new TypeError( 'invalid value. `xMin` must be either a finite number, Date, or null. Value: `' + min + '.`' );\n\t}\n\tdebug( 'Current value: %s.', this._xMin );\n\n\tthis._xMin = min;\n\tdebug( 'New value: %s.', this._xMin );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes a minimum value.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {(number|null)} minimum value or null\n*/\nfunction getMin( arr ) {\n\tvar min;\n\tvar i;\n\tif ( arr.length === 0 ) {\n\t\treturn null;\n\t}\n\tmin = arr[ 0 ];\n\tfor ( i = 1; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] < min ) {\n\t\t\tmin = arr[ i ];\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\nexport default getMin;\n","import __var_0__ from '@stdlib/assert/is-null';\nimport __var_1__ from './../../utils/min.js'; // TODO: replace with mod when written\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\nvar min = __var_1__;\n\n\n// FUNCTIONS //\n\n/**\n* Computes a minimum value.\n*\n* @private\n* @param {Array<NumericArray>} arr - input array\n* @returns {(number|null)} minimum value or null\n*/\nfunction getMin( arr ) {\n\tvar tmp;\n\tvar i;\n\tif ( arr.length === 0 ) {\n\t\treturn null;\n\t}\n\ttmp = new Array( arr.length );\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\ttmp[ i ] = min( arr[ i ] );\n\t}\n\treturn min( tmp );\n}\n\n\n// MAIN //\n\n/**\n* Returns the minimum value of the x-axis domain.\n*\n* @private\n* @returns {number} minimum value\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar min;\n\tif ( isNull( this._xMin ) ) {\n\t\tmin = getMin( this._xData );\n\t\treturn ( isNull( min ) ) ? 0.0 : min;\n\t}\n\treturn this._xMin;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNumber = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'line:set:x-max' );\n\n\n// MAIN //\n\n/**\n* Sets the maximum value of the x-axis domain.\n*\n* @private\n* @param {(Date|FiniteNumber|null)} max - maximum value\n* @throws {TypeError} must be a finite number primitive or null\n*/\nfunction set( max ) {\n\t/* eslint-disable no-invalid-this */\n\n\t// TODO: add test to determine if evaluates to valid date?\n\tif (\n\t\t!isNull( max ) &&\n\t\t!isNumber( max ) // FIXME: finite number\n\n\t\t// TODO: Date\n\t) {\n\t\tthrow new TypeError( 'invalid value. `xMax` must be either a finite number, Date, or null. Value: `' + max + '.`' );\n\t}\n\tif ( max !== this._xMax ) {\n\t\tdebug( 'Current value: %s.', this._xMax );\n\n\t\tthis._xMax = max;\n\t\tdebug( 'New value: %s.', this._xMax );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes a maximum value.\n*\n* @private\n* @param {NumericArray} arr - input array\n* @returns {(number|null)} maximum value or null\n*/\nfunction getMax( arr ) {\n\tvar max;\n\tvar i;\n\tif ( arr.length === 0 ) {\n\t\treturn null;\n\t}\n\tmax = arr[ 0 ];\n\tfor ( i = 1; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] > max ) {\n\t\t\tmax = arr[ i ];\n\t\t}\n\t}\n\treturn max;\n}\n\n\n// EXPORTS //\nexport default getMax;\n","import __var_0__ from '@stdlib/assert/is-null';\nimport __var_1__ from './../../utils/max.js'; // TODO: replace with mod when written\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\nvar max = __var_1__;\n\n\n// FUNCTIONS //\n\n/**\n* Computes a maximum value.\n*\n* @private\n* @param {Array<NumericArray>} arr - input array\n* @returns {(number|null)} maximum value or null\n*/\nfunction getMax( arr ) {\n\tvar tmp;\n\tvar i;\n\tif ( arr.length === 0 ) {\n\t\treturn null;\n\t}\n\ttmp = new Array( arr.length );\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\ttmp[ i ] = max( arr[ i ] );\n\t}\n\treturn max( tmp );\n}\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of the x-axis domain.\n*\n* @private\n* @returns {number} maximum value\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar max;\n\tif ( isNull( this._xMax ) ) {\n\t\tmax = getMax( this._xData );\n\t\treturn ( isNull( max ) ) ? 1.0 : max;\n\t}\n\treturn this._xMax;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNumber = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-min' );\n\n\n// MAIN //\n\n/**\n* Sets the minimum value of the y-axis domain.\n*\n* @private\n* @param {(FiniteNumber|null)} min - minimum value\n* @throws {TypeError} must be a finite number primitive or null\n* @returns {void}\n*/\nfunction set( min ) {\n\t/* eslint-disable no-invalid-this */\n\tif (\n\t\t!isNull( min ) &&\n\t\t!isNumber( min ) // FIXME: finite number\n\t) {\n\t\tthrow new TypeError( 'invalid value. `yMin` must be either a finite number or null. Value: `' + min + '.`' );\n\t}\n\tif ( min !== this._yMin ) {\n\t\tdebug( 'Current value: %d.', this._yMin );\n\n\t\tthis._yMin = min;\n\t\tdebug( 'New value: %d.', this._yMin );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-null';\nimport __var_1__ from './../../utils/min.js'; // TODO: replace with mod when written\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\nvar min = __var_1__;\n\n\n// FUNCTIONS //\n\n/**\n* Computes a minimum value.\n*\n* @private\n* @param {Array<NumericArray>} arr - input array\n* @returns {(number|null)} minimum value or null\n*/\nfunction getMin( arr ) {\n\tvar tmp;\n\tvar i;\n\tif ( arr.length === 0 ) {\n\t\treturn null;\n\t}\n\ttmp = new Array( arr.length );\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\ttmp[ i ] = min( arr[ i ] );\n\t}\n\treturn min( tmp );\n}\n\n\n// MAIN //\n\n/**\n* Returns the minimum value of the y-axis domain.\n*\n* @private\n* @returns {number} minimum value\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar min;\n\tif ( isNull( this._yMin ) ) {\n\t\tmin = getMin( this._yData );\n\t\treturn ( isNull( min ) ) ? 0.0 : min;\n\t}\n\treturn this._yMin;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-number';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNumber = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-max' );\n\n\n// MAIN //\n\n/**\n* Sets the maximum value of the y-axis domain.\n*\n* @private\n* @param {(FiniteNumber|null)} max - maximum value\n* @throws {TypeError} must be a finite number primitive or null\n* @returns {void}\n*/\nfunction set( max ) {\n\t/* eslint-disable no-invalid-this */\n\tif (\n\t\t!isNull( max ) &&\n\t\t!isNumber( max ) // FIXME: finite number\n\t) {\n\t\tthrow new TypeError( 'invalid value. `yMax` must be either a finite number or null. Value: `' + max + '.`' );\n\t}\n\tif ( max !== this._yMax ) {\n\t\tdebug( 'Current value: %d.', this._yMax );\n\n\t\tthis._yMax = max;\n\t\tdebug( 'New value: %d.', this._yMax );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-null';\nimport __var_1__ from './../../utils/max.js'; // TODO: replace with mod when written\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNull = __var_0__;\nvar max = __var_1__;\n\n\n// FUNCTIONS //\n\n/**\n* Computes a maximum value.\n*\n* @private\n* @param {Array<NumericArray>} arr - input array\n* @returns {(number|null)} maximum value or null\n*/\nfunction getMax( arr ) {\n\tvar tmp;\n\tvar i;\n\tif ( arr.length === 0 ) {\n\t\treturn null;\n\t}\n\ttmp = new Array( arr.length );\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\ttmp[ i ] = max( arr[ i ] );\n\t}\n\treturn max( tmp );\n}\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of the y-axis domain.\n*\n* @private\n* @returns {number} maximum value\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar max;\n\tif ( isNull( this._yMax ) ) {\n\t\tmax = getMax( this._yData );\n\t\treturn ( isNull( max ) ) ? 1.0 : max;\n\t}\n\treturn this._yMax;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-scale' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis scale.\n*\n* @private\n* @param {string} scale - axis scale\n* @throws {TypeError} must be a string primitive\n* @returns {void}\n*/\nfunction set( scale ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( scale ) ) {\n\t\tthrow new TypeError( 'invalid value. `xScale` must be a string. Value: `' + scale + '.`' );\n\t}\n\t// TODO: test for valid scale\n\n\tif ( scale !== this._xScale ) {\n\t\tdebug( 'Current value: %s.', this._xScale );\n\n\t\tthis._xScale = scale;\n\t\tdebug( 'New value: %s.', this._xScale );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {scaleLinear as linear} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\nimport {scaleTime as time} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\n\n\n// MAIN //\n\n/**\n* Returns a scale function for mapping values to a coordinate along the x-axis.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale;\n\tif ( this._xScale === 'time' ) {\n\t\tscale = time()\n\t\t\t.domain( this.xDomain )\n\t\t\t.range( this.xRange );\n\t} else if ( this._xScale === 'linear' ) {\n\t\tscale = linear()\n\t\t\t.domain( this.xDomain )\n\t\t\t.range( this.xRange );\n\t}\n\t// TODO: other scales\n\treturn scale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-scale' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis scale.\n*\n* @private\n* @param {string} scale - axis scale\n* @throws {TypeError} must be a string primitive\n* @returns {void}\n*/\nfunction set( scale ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( scale ) ) {\n\t\tthrow new TypeError( 'invalid value. `yScale` must be a string. Value: `' + scale + '.`' );\n\t}\n\t// TODO: test for valid scale\n\n\tdebug( 'Current value: %s.', this._yScale );\n\n\tthis._yScale = scale;\n\tdebug( 'New value: %s.', this._yScale );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {scaleLinear as linear} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\nimport {scaleTime as time} from '@stdlib/vendor/d3-scale.js'; // TODO: remove\n\n\n// MAIN //\n\n/**\n* Returns a scale function for mapping values to a coordinate along the y-axis.\n*\n* @private\n* @returns {Function} scale function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale;\n\tif ( this._yScale === 'time' ) {\n\t\tscale = time()\n\t\t\t.domain( this.yDomain )\n\t\t\t.range( this.yRange );\n\t} else if ( this._yScale === 'linear' ) {\n\t\tscale = linear()\n\t\t\t.domain( this.yDomain )\n\t\t\t.range( this.yRange );\n\t}\n\t// TODO: other scales\n\treturn scale;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isString = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-tick-format' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis tick format.\n*\n* @private\n* @param {(string|null)} fmt - axis tick format\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( fmt ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( fmt ) && !isString( fmt ) ) {\n\t\tthrow new TypeError( 'invalid value. `xTickFormat` must be a string or null. Value: `' + fmt + '.`' );\n\t}\n\tif ( fmt !== this._xTickFormat ) {\n\t\tdebug( 'Current value: %s.', this._xTickFormat );\n\n\t\tthis._xTickFormat = fmt;\n\t\tdebug( 'New value: %s.', this._xTickFormat );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {format as format} from '@stdlib/vendor/d3-format.js'; // TODO: remove\nimport {timeFormat as timeFormat} from '@stdlib/vendor/d3-time-format.js'; // TODO: remove\nvar isNull = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns the x-axis tick format.\n*\n* @private\n* @returns {(Function|null)} format function or null\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tif ( isNull( this._xTickFormat ) ) {\n\t\treturn this._xTickFormat;\n\t}\n\tif ( this._xScale === 'time' ) {\n\t\treturn timeFormat( this._xTickFormat );\n\t}\n\treturn format( this._xTickFormat );\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isString = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-tick-format' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis tick format.\n*\n* @private\n* @param {(string|null)} fmt - axis tick format\n* @throws {TypeError} must be a string primitive or null\n*/\nfunction set( fmt ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( fmt ) && !isString( fmt ) ) {\n\t\tthrow new TypeError( 'invalid value. `yTickFormat` must be a string or null. Value: `' + fmt + '.`' );\n\t}\n\tif ( fmt !== this._yTickFormat ) {\n\t\tdebug( 'Current value: %s.', this._yTickFormat );\n\n\t\tthis._yTickFormat = fmt;\n\t\tdebug( 'New value: %s.', this._yTickFormat );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","import __var_0__ from '@stdlib/assert/is-null';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nimport {format as format} from '@stdlib/vendor/d3-format.js'; // TODO: remove\nimport {timeFormat as timeFormat} from '@stdlib/vendor/d3-time-format.js'; // TODO: remove\nvar isNull = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns the y-axis tick format.\n*\n* @private\n* @returns {(Function|null)} format function or null\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tif ( isNull( this._yTickFormat ) ) {\n\t\treturn this._yTickFormat;\n\t}\n\tif ( this._yScale === 'time' ) {\n\t\treturn timeFormat( this._yTickFormat );\n\t}\n\treturn format( this._yTickFormat );\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNonNegativeInteger = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-num-ticks' );\n\n\n// MAIN //\n\n/**\n* Sets the number of x-axis tick marks.\n*\n* @private\n* @param {(NonNegativeInteger|null)} ticks - number of ticks\n* @throws {TypeError} must be a nonnegative integer or null\n*/\nfunction set( ticks ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( ticks ) && !isNonNegativeInteger( ticks ) ) {\n\t\tthrow new TypeError( 'invalid value. `xNumTicks` must be a nonnegative integer or null. Value: `' + ticks + '.`' );\n\t}\n\tif ( ticks !== this._xNumTicks ) {\n\t\tdebug( 'Current value: %d.', this._xNumTicks );\n\n\t\tthis._xNumTicks = ticks;\n\t\tdebug( 'New value: %d.', this._xNumTicks );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the number of x-axis tick marks.\n*\n* @private\n* @returns {(NonNegativeInteger|null)} number of ticks\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xNumTicks;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-null';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNull = __var_1__;\nvar isNonNegativeInteger = __var_2__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-num-ticks' );\n\n\n// MAIN //\n\n/**\n* Sets the number of y-axis tick marks.\n*\n* @private\n* @param {(NonNegativeInteger|null)} ticks - number of ticks\n* @throws {TypeError} must be a nonnegative integer or null\n*/\nfunction set( ticks ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isNull( ticks ) && !isNonNegativeInteger( ticks ) ) {\n\t\tthrow new TypeError( 'invalid value. `yNumTicks` must be a nonnegative integer or null. Value: `' + ticks + '.`' );\n\t}\n\tif ( ticks !== this._yNumTicks ) {\n\t\tdebug( 'Current value: %d.', this._yNumTicks );\n\n\t\tthis._yNumTicks = ticks;\n\t\tdebug( 'New value: %d.', this._yNumTicks );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the number of y-axis tick marks.\n*\n* @private\n* @returns {(NonNegativeInteger|null)} number of ticks\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yNumTicks;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar ORIENTATIONS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-axis-orient' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis orientation.\n*\n* @private\n* @param {string} orientation - axis orientation\n* @throws {TypeError} must be either `'bottom'` or `'top'`\n*/\nfunction set( orientation ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( ORIENTATIONS, orientation ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. `xAxisOrient` must be one of `[' + ORIENTATIONS.join( ', ' ) + ']`. Value: `' + orientation + '.`' );\n\t}\n\tif ( orientation !== this._xAxisOrient ) {\n\t\tdebug( 'Current value: %s.', this._xAxisOrient );\n\n\t\tthis._xAxisOrient = orientation;\n\t\tdebug( 'New value: %s.', this._xAxisOrient );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis orientation.\n*\n* @private\n* @returns {string} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xAxisOrient;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar ORIENTATIONS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-axis-orient' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis orientation.\n*\n* @private\n* @param {string} orientation - axis orientation\n* @throws {TypeError} must be either `'left'` or `'right'`\n*/\nfunction set( orientation ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( ORIENTATIONS, orientation ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. `yAxisOrient` must be one of `[' + ORIENTATIONS.join( ', ' ) + ']`. Value: `' + orientation + '.`' );\n\t}\n\tif ( orientation !== this._yAxisOrient ) {\n\t\tdebug( 'Current value: %s.', this._yAxisOrient );\n\n\t\tthis._yAxisOrient = orientation;\n\t\tdebug( 'New value: %s.', this._yAxisOrient );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis orientation.\n*\n* @private\n* @returns {string} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yAxisOrient;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\nimport __var_2__ from '@stdlib/assert/is-boolean-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\nvar isBooleanArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-rug' );\n\n\n// MAIN //\n\n/**\n* Sets a flag indicating whether to display a rug plot along the x-axis.\n*\n* @private\n* @param {(boolean|BooleanArray)} v - boolean flag(s) indicating whether to display a rug plot along the x-axis\n* @throws {TypeError} must be a boolean primitive or boolean array\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isBool = isBoolean( v );\n\tif ( !isBool && !isBooleanArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `xRug` must be a boolean or boolean array. Value: `' + v + '.`' );\n\t}\n\tif ( isBool ) {\n\t\tv = [ v ];\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._xRug ) );\n\n\tthis._xRug = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._xRug ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns whether a rug plot is displayed along the x-axis.\n*\n* @private\n* @returns {BooleanArray} boolean flags\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xRug.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\nimport __var_2__ from '@stdlib/assert/is-boolean-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\nvar isBooleanArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-rug' );\n\n\n// MAIN //\n\n/**\n* Sets a flag indicating whether to display a rug plot along the y-axis.\n*\n* @private\n* @param {(boolean|BooleanArray)} v - boolean flag(s) indicating whether to display a rug plot along the y-axis\n* @throws {TypeError} must be a boolean primitive or boolean array\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isBool = isBoolean( v );\n\tif ( !isBool && !isBooleanArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `yRug` must be a boolean or boolean array. Value: `' + v + '.`' );\n\t}\n\tif ( isBool ) {\n\t\tv = [ v ];\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._yRug ) );\n\n\tthis._yRug = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._yRug ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns whether a rug plot is displayed along the y-axis.\n*\n* @private\n* @returns {BooleanArray} boolean flag\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yRug.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-string-array';\nimport __var_3__ from '@stdlib/utils/index-of';\nimport __var_4__ from './orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isStringArray = __var_2__.primitives;\nvar indexOf = __var_3__;\nvar ORIENTATIONS = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-rug-orient' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis rug orientation.\n*\n* @private\n* @param {(string|StringArray)} v - rug orientation\n* @throws {TypeError} must be either a string or string array\n* @throws {TypeError} must be either `'bottom'` or `'top'`\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isStr = isString( v );\n\tvar i;\n\tif ( !isStr && !isStringArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `xRugOrient` must be either a string or string array. Value: `' + v + '`.' );\n\t}\n\tif ( isStr ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( indexOf( ORIENTATIONS, v[i] ) === -1 ) {\n\t\t\tthrow new TypeError( 'invalid value. Unrecognized/unsupported orientation. An `xRugOrient` value must be one of `[' + ORIENTATIONS.join( ', ' ) + ']`. Value: `' + v[i] + '.`' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._xRugOrient ) );\n\n\tthis._xRugOrient = v;\n\tdebug( 'New value: %s.', JSON.stringify( this._xRugOrient ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis rug orientation.\n*\n* @private\n* @returns {StringArray} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xRugOrient.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-string-array';\nimport __var_3__ from '@stdlib/utils/index-of';\nimport __var_4__ from './orientations.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isStringArray = __var_2__.primitives;\nvar indexOf = __var_3__;\nvar ORIENTATIONS = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-rug-orient' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis rug orientation.\n*\n* @private\n* @param {(string|StringArray)} v - rug orientation\n* @throws {TypeError} must be either a string or string array\n* @throws {TypeError} must be either `'bottom'` or `'top'`\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isStr = isString( v );\n\tvar i;\n\tif ( !isStr && !isStringArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `yRugOrient` must be either a string or string array. Value: `' + v + '`.' );\n\t}\n\tif ( isStr ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( indexOf( ORIENTATIONS, v[i] ) === -1 ) {\n\t\t\tthrow new TypeError( 'invalid value. Unrecognized/unsupported orientation. A `yRugOrient` value must be one of `[' + ORIENTATIONS.join( ', ' ) + ']`. Value: `' + v[i] + '.`' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._yRugOrient ) );\n\n\tthis._yRugOrient = v;\n\tdebug( 'New value: %s.', JSON.stringify( this._yRugOrient ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis rug orientation.\n*\n* @private\n* @returns {StringArray} orientation\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yRugOrient.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-number-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\nvar isNumberArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-rug-opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis rug opacity.\n*\n* @private\n* @param {(number|NumberArray)} v - opacity\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isNum = isNumber( v );\n\tvar i;\n\tif ( !isNum && !isNumberArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `xRugOpacity` must be a number or number array. Value: `' + v + '.`' );\n\t}\n\tif ( isNum ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( v[ i ] < 0.0 || v[ i ] > 1.0 ) {\n\t\t\tthrow new RangeError( 'invalid value. An `xRugOpacity` must be a number on the interval `[0,1]`. Value: `' + v[i] + '`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._xRugOpacity ) );\n\n\tthis._xRugOpacity = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._xRugOpacity ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis rug opacity.\n*\n* @private\n* @returns {NumberArray} rug opacities\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xRugOpacity.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-number-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNumber = __var_1__.isPrimitive;\nvar isNumberArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-rug-opacity' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis rug opacity.\n*\n* @private\n* @param {(number|NumberArray)} v - opacity\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isNum = isNumber( v );\n\tvar i;\n\tif ( !isNum && !isNumberArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `yRugOpacity` must be a number or number array. Value: `' + v + '.`' );\n\t}\n\tif ( isNum ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tfor ( i = 0; i < v.length; i++ ) {\n\t\tif ( v[ i ] < 0.0 || v[ i ] > 1.0 ) {\n\t\t\tthrow new RangeError( 'invalid value. A `yRugOpacity` must be a number on the interval `[0,1]`. Value: `' + v[i] + '`.' );\n\t\t}\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._yRugOpacity ) );\n\n\tthis._yRugOpacity = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._yRugOpacity ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis rug opacity.\n*\n* @private\n* @returns {NumberArray} rug opacities\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yRugOpacity.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\nvar isNonNegativeIntegerArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-rug-size' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis rug tick (tassel) size.\n*\n* @private\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} v - size\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isInt = isNonNegativeInteger( v );\n\tif ( !isInt && !isNonNegativeIntegerArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `xRugSize` must be a nonnegative integer or nonnegative integer array. Value: `' + v + '.`' );\n\t}\n\tif ( isInt ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._xRugSize ) );\n\n\tthis._xRugSize = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._xRugSize ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis rug tick (tassel) size.\n*\n* @private\n* @returns {Array<NonNegativeInteger>} tick sizes\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xRugSize.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_2__ from '@stdlib/assert/is-nonnegative-integer-array';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\nvar isNonNegativeIntegerArray = __var_2__.primitives;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-rug-size' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis rug tick (tassel) size.\n*\n* @private\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} v - size\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n*/\nfunction set( v ) {\n\t/* eslint-disable no-invalid-this */\n\tvar isInt = isNonNegativeInteger( v );\n\tif ( !isInt && !isNonNegativeIntegerArray( v ) ) {\n\t\tthrow new TypeError( 'invalid value. `yRugSize` must be a nonnegative integer or nonnegative integer array. Value: `' + v + '.`' );\n\t}\n\tif ( isInt ) {\n\t\tv = [ v ];\n\t} else {\n\t\tv = v.slice();\n\t}\n\tdebug( 'Current value: %s.', JSON.stringify( this._yRugSize ) );\n\n\tthis._yRugSize = v;\n\tdebug( 'New Value: %s.', JSON.stringify( this._yRugSize ) );\n\n\tthis.emit( 'change' );\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis rug tick (tassel) size.\n*\n* @private\n* @returns {Array<NonNegativeInteger>} tick sizes\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yRugSize.slice();\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:description' );\n\n\n// MAIN //\n\n/**\n* Sets the description.\n*\n* @private\n* @param {string} str - description\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( str ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid value. `description` must be a string. Value: `' + str + '.`' );\n\t}\n\tif ( str !== this._description ) {\n\t\tdebug( 'Current value: %s.', this._description );\n\n\t\tthis._description = str;\n\t\tdebug( 'New value: %s.', this._description );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the description.\n*\n* @private\n* @returns {string} description\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._description;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:title' );\n\n\n// MAIN //\n\n/**\n* Sets the title.\n*\n* @private\n* @param {string} str - title\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( str ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid value. `title` must be a string. Value: `' + str + '.`' );\n\t}\n\tif ( str !== this._title ) {\n\t\tdebug( 'Current value: %s.', this._title );\n\n\t\tthis._title = str;\n\t\tdebug( 'New value: %s.', this._title );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the title.\n*\n* @private\n* @returns {string} title\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._title;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:x-label' );\n\n\n// MAIN //\n\n/**\n* Sets the x-axis label.\n*\n* @private\n* @param {string} label - axis label\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( label ) ) {\n\t\tthrow new TypeError( 'invalid value. `xLabel` must be a string. Value: `' + label + '.`' );\n\t}\n\tif ( label !== this._xLabel ) {\n\t\tdebug( 'Current value: %s.', this._xLabel );\n\n\t\tthis._xLabel = label;\n\t\tdebug( 'New value: %s.', this._xLabel );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis label.\n*\n* @private\n* @returns {string} label\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._xLabel;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isString = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:y-label' );\n\n\n// MAIN //\n\n/**\n* Sets the y-axis label.\n*\n* @private\n* @param {string} label - axis label\n* @throws {TypeError} must be a string primitive\n*/\nfunction set( label ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isString( label ) ) {\n\t\tthrow new TypeError( 'invalid value. `yLabel` must be a string. Value: `' + label + '.`' );\n\t}\n\tif ( label !== this._yLabel ) {\n\t\tdebug( 'Current value: %s.', this._yLabel );\n\n\t\tthis._yLabel = label;\n\t\tdebug( 'New value: %s.', this._yLabel );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis label.\n*\n* @private\n* @returns {string} label\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._yLabel;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/contains';\nimport __var_2__ from './engines.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar contains = __var_1__;\nvar ENGINES = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:engine' );\n\n\n// MAIN //\n\n/**\n* Sets the engine.\n*\n* @private\n* @param {string} engine - engine\n* @throws {TypeError} must be a recognized engine\n*/\nfunction set( engine ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !contains( ENGINES, engine ) ) {\n\t\tthrow new TypeError( 'invalid value. `engine` must be one of `[' + ENGINES.join( ', ' ) + ']`. Value: `' + engine + '.`' );\n\t}\n\tif ( engine !== this._engine ) {\n\t\tdebug( 'Current value: %s.', this._engine );\n\n\t\tthis._engine = engine;\n\t\tdebug( 'New value: %s.', this._engine );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the plot engine.\n*\n* @private\n* @returns {string} engine\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._engine;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:auto-render' );\n\n\n// MAIN //\n\n/**\n* Sets the rendering mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to re-render on a change event\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoRender` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tif ( bool !== this._autoRender ) {\n\t\tdebug( 'Current value: %s.', this._autoRender );\n\n\t\tthis._autoRender = bool;\n\t\tdebug( 'New Value: %s.', this._autoRender );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the rendering mode.\n*\n* @private\n* @returns {boolean} rendering mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoRender;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './formats.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar FORMATS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:renderformat' );\n\n\n// MAIN //\n\n/**\n* Sets the render format.\n*\n* @private\n* @param {string} format - format\n* @throws {TypeError} must be a recognized render format\n*/\nfunction set( format ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( FORMATS, format ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. Unrecognized/unsupported `format`. Must be one of `[' + FORMATS.join( ', ' ) + ']`. Value: `' + format + '.`' );\n\t}\n\tif ( format !== this._renderFormat ) {\n\t\tdebug( 'Current value: %s.', this._renderFormat );\n\n\t\tthis._renderFormat = format;\n\t\tdebug( 'New value: %s.', this._renderFormat );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the render format.\n*\n* @private\n* @returns {string} format\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._renderFormat;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/index-of';\nimport __var_2__ from './viewers.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar indexOf = __var_1__;\nvar VIEWERS = __var_2__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:viewer' );\n\n\n// MAIN //\n\n/**\n* Sets the viewer.\n*\n* @private\n* @param {string} viewer - viewer\n* @throws {TypeError} must be a recognized viewer\n*/\nfunction set( viewer ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( indexOf( VIEWERS, viewer ) === -1 ) {\n\t\tthrow new TypeError( 'invalid value. Unrecognized/unsupported `viewer`. Value: `' + viewer + '.`' );\n\t}\n\tif ( viewer !== this._viewer ) {\n\t\tdebug( 'Current value: %s.', this._viewer );\n\n\t\tthis._viewer = viewer;\n\t\tdebug( 'New value: %s.', this._viewer );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the plot viewer.\n*\n* @private\n* @returns {string} viewer\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._viewer;\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/assert/is-boolean';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar isBoolean = __var_1__.isPrimitive;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:set:auto-view' );\n\n\n// MAIN //\n\n/**\n* Sets the viewing mode.\n*\n* @private\n* @param {boolean} bool - boolean indicating whether to generate an updated view on a render event\n* @throws {TypeError} must be a boolean primitive\n*/\nfunction set( bool ) {\n\t/* eslint-disable no-invalid-this */\n\tif ( !isBoolean( bool ) ) {\n\t\tthrow new TypeError( 'invalid value. `autoView` must be a boolean primitive. Value: `' + bool + '.`' );\n\t}\n\tif ( bool !== this._autoView ) {\n\t\tdebug( 'Current value: %s.', this._autoView );\n\n\t\tthis._autoView = bool;\n\t\tdebug( 'New Value: %s.', this._autoView );\n\n\t\tthis.emit( 'change' );\n\t}\n}\n\n\n// EXPORTS //\nexport default set;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the viewing mode.\n*\n* @private\n* @returns {boolean} viewing mode\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._autoView;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the expected graph width.\n*\n* @private\n* @returns {number} graph width\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._width - this._paddingLeft - this._paddingRight;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the expected graph height.\n*\n* @private\n* @returns {number} graph height\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._height - this._paddingTop - this._paddingBottom;\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis domain.\n*\n* @private\n* @returns {Array} domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ this.xMin, this.xMax ];\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis domain.\n*\n* @private\n* @returns {Array} domain\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ this.yMin, this.yMax ];\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the x-axis range.\n*\n* @private\n* @returns {NumberArray} range\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ 0, this.graphWidth ];\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the y-axis range.\n*\n* @private\n* @returns {NumberArray} range\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\treturn [ this.graphHeight, 0 ];\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:x-pos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to x-axis coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.xScale;\n\treturn xPos;\n\n\t/**\n\t* Maps a value to a x-axis coordinate value.\n\t*\n\t* @private\n\t* @param {number} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction xPos( d ) {\n\t\tvar px = scale( d );\n\t\tdebug( 'Value: %d => Pixel: %d.', d, px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:y-pos' );\n\n\n// MAIN //\n\n/**\n* Returns a function to map values to y-axis coordinate values.\n*\n* @private\n* @returns {Function} map function\n*/\nfunction get() {\n\t/* eslint-disable no-invalid-this */\n\tvar scale = this.yScale;\n\treturn yPos;\n\n\t/**\n\t* Maps a value to a y-axis coordinate value.\n\t*\n\t* @private\n\t* @param {number} d - datum\n\t* @returns {number} pixel value\n\t*/\n\tfunction yPos( d ) {\n\t\tvar px = scale( d );\n\t\tdebug( 'Value: %d => Pixel: %d.', d, px );\n\t\treturn px;\n\t}\n}\n\n\n// EXPORTS //\nexport default get;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns an x-axis translation transform.\n*\n* @private\n* @param {string} orient - axis orientation\n* @param {number} height - graph height\n* @returns {string} transform\n*/\nfunction xAxisTransform( orient, height ) {\n\tif ( orient === 'top' ) {\n\t\treturn 'translate(0,0)';\n\t}\n\treturn 'translate(0,'+height+')';\n}\n\n\n// EXPORTS //\nexport default xAxisTransform;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a y-axis translation transform.\n*\n* @private\n* @param {string} orient - axis orientation\n* @param {number} width - graph width\n* @returns {string} transform\n*/\nfunction yAxisTransform( orient, width ) {\n\tif ( orient === 'left' ) {\n\t\treturn 'translate(0,0)';\n\t}\n\treturn 'translate('+width+',0)';\n}\n\n\n// EXPORTS //\nexport default yAxisTransform;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:marks:lines' );\n\n\n// MAIN //\n\n/**\n* Renders line marks.\n*\n* @private\n* @param {Object} state - state\n* @returns {VTree} virtual tree\n*/\nfunction render( state ) {\n\tvar nOpacities;\n\tvar lineStyle;\n\tvar opacity;\n\tvar nColors;\n\tvar nStyles;\n\tvar nWidths;\n\tvar color;\n\tvar width;\n\tvar marks;\n\tvar line;\n\tvar len;\n\tvar i;\n\n\tline = state.$.svg.path;\n\tnOpacities = state.lineOpacity.length;\n\tnStyles = state.lineStyle.length;\n\tnWidths = state.lineWidth.length;\n\tnColors = state.colors.length;\n\n\tlen = state.x.length;\n\tmarks = [];\n\n\tdebug( 'Rendering lines...' );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tlineStyle = state.lineStyle[ i%nStyles ];\n\t\tdebug( 'Line style: %s (%d).', lineStyle, i );\n\n\t\tif ( lineStyle === 'none' ) {\n\t\t\tdebug( 'Line style (%d) is `none`. Skipping...', i );\n\t\t\tcontinue;\n\t\t}\n\t\tcolor = state.colors[ i%nColors ];\n\t\tdebug( 'Line color: %s (%d).', color, i );\n\n\t\topacity = state.lineOpacity[ i%nOpacities ];\n\t\tdebug( 'Line opacity: %s (%d).', opacity, i );\n\n\t\twidth = state.lineWidth[ i%nWidths ];\n\t\tdebug( 'Line width: %s (%d).', width, i );\n\n\t\tline.x = state.x[ i ];\n\t\tline.y = state.y[ i ];\n\t\tline.style = lineStyle;\n\t\tline.label = state.labels[ i ] || '';\n\t\tline.color = color;\n\t\tline.opacity = opacity;\n\t\tline.width = width;\n\n\t\tdebug( 'Rendering line %d...', i );\n\t\tmarks.push( line.render() );\n\t}\n\tdebug( 'Finished rendering lines.' );\n\treturn marks;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:marks:symbols' );\n\n\n// MAIN //\n\n/**\n* Renders symbols marks.\n*\n* @private\n* @param {Object} state - state\n* @returns {VTree} virtual tree\n*/\nfunction render( state ) {\n\tvar nOpacities;\n\tvar nSymbols;\n\tvar nColors;\n\tvar opacity;\n\tvar nSizes;\n\tvar symbol;\n\tvar color;\n\tvar marks;\n\tvar size;\n\tvar sym;\n\tvar len;\n\tvar i;\n\n\tsym = state.$.svg.symbols;\n\tnOpacities = state.symbolsOpacity.length;\n\tnSymbols = state.symbols.length;\n\tnColors = state.colors.length;\n\tnSizes = state.symbolsSize.length;\n\n\tlen = state.x.length;\n\tmarks = [];\n\n\tdebug( 'Rendering symbols...' );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tsymbol = state.symbols[ i%nSymbols ];\n\t\tdebug( 'Symbol: %s (%d).', symbol, i );\n\n\t\tif ( symbol === 'none' ) {\n\t\t\tdebug( 'Symbol (%d) is `none`. Skipping...', i );\n\t\t\tcontinue;\n\t\t}\n\t\topacity = state.symbolsOpacity[ i%nOpacities ];\n\t\tdebug( 'Symbols opacity: %d (%d).', opacity, i );\n\n\t\tsize = state.symbolsSize[ i%nSizes ];\n\t\tdebug( 'Symbols size: %d (%d).', size, i );\n\n\t\tcolor = state.colors[ i%nColors ];\n\t\tdebug( 'Symbols color: %s (%d).', color, i );\n\n\t\tsym.x = state.x[ i ];\n\t\tsym.y = state.y[ i ];\n\t\tsym.symbol = symbol;\n\t\tsym.label = state.labels[ i ] || '';\n\t\tsym.color = color;\n\t\tsym.size = size;\n\t\tsym.opacity = opacity;\n\n\t\tdebug( 'Rendering symbols %d...', i );\n\t\tmarks.push( sym.render() );\n\t}\n\tdebug( 'Finished rendering symbols.' );\n\treturn marks;\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns an x-axis rug translation transform.\n*\n* @private\n* @param {string} orient - axis orientation\n* @param {number} height - graph height\n* @returns {string} transform\n*/\nfunction xRugTransform( orient, height ) {\n\tif ( orient === 'top' ) {\n\t\treturn 'translate(0,0)';\n\t}\n\treturn 'translate(0,'+height+')';\n}\n\n\n// EXPORTS //\nexport default xRugTransform;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../utils/x_rug_transform.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar xRugTransform = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:marks:x-rug' );\n\n\n// MAIN //\n\n/**\n* Renders x-axis rug plots.\n*\n* @private\n* @param {Object} state - state\n* @returns {VTree} virtual tree\n*/\nfunction render( state ) {\n\tvar rugTransform;\n\tvar nOpacities;\n\tvar nOrients;\n\tvar opacity;\n\tvar nColors;\n\tvar nSizes;\n\tvar orient;\n\tvar nFlgs;\n\tvar color;\n\tvar marks;\n\tvar size;\n\tvar rug;\n\tvar len;\n\tvar tmp;\n\tvar i;\n\n\trug = state.$.svg.xRug;\n\n\tnOpacities = state.xRugOpacity.length;\n\tnOrients = state.xRugOrient.length;\n\tnColors = state.colors.length;\n\tnSizes = state.xRugSize.length;\n\tnFlgs = state.xRug.length;\n\n\tlen = state.x.length;\n\tmarks = [];\n\n\tdebug( 'Rendering x-axis rug plots...' );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !state.xRug[ i%nFlgs ] ) {\n\t\t\tdebug( 'Rug plot (%d) disabled. Skipping...', i );\n\t\t\tcontinue;\n\t\t}\n\t\tcolor = state.colors[ i%nColors ];\n\t\tdebug( 'Rug color: %s (%d).', color, i );\n\n\t\topacity = state.xRugOpacity[ i%nOpacities ];\n\t\tdebug( 'Rug opacity: %d (%d).', opacity, i );\n\n\t\torient = state.xRugOrient[ i%nOrients ];\n\t\tdebug( 'Rug orientation: %s (%d).', orient, i );\n\n\t\tsize = state.xRugSize[ i%nSizes ];\n\t\tdebug( 'Rug tick size: %d (%d).', size, i );\n\n\t\trug.data = state.x[ i ];\n\t\trug.label = state.labels[ i ] || '';\n\t\trug.color = color;\n\t\trug.size = size;\n\t\trug.opacity = opacity;\n\t\trug.orientation = orient;\n\n\t\tdebug( 'Rendering x-axis rug %d...', i );\n\t\ttmp = rug.render();\n\n\t\t// Update the class name to indicate this is an x-axis rug and add a transform to translate the rug into position based on the graph dimensions.\n\t\ttmp.properties.className += ' x';\n\t\trugTransform = xRugTransform( orient, state.graphHeight );\n\t\tif ( !tmp.properties.attributes ) {\n\t\t\ttmp.properties.attributes = {};\n\t\t}\n\t\ttmp.properties.attributes.transform = rugTransform;\n\n\t\tmarks.push( tmp );\n\t}\n\tdebug( 'Finished rendering x-axis rug plots.' );\n\treturn marks;\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a y-axis rug translation transform.\n*\n* @private\n* @param {string} orient - axis orientation\n* @param {number} width - graph width\n* @returns {string} transform\n*/\nfunction yRugTransform( orient, width ) {\n\tif ( orient === 'left' ) {\n\t\treturn 'translate(0,0)';\n\t}\n\treturn 'translate('+width+',0)';\n}\n\n\n// EXPORTS //\nexport default yRugTransform;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './../utils/y_rug_transform.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar yRugTransform = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:marks:y-rug' );\n\n\n// MAIN //\n\n/**\n* Renders y-axis rug plots.\n*\n* @private\n* @param {Object} state - state\n* @returns {VTree} virtual tree\n*/\nfunction render( state ) {\n\tvar rugTransform;\n\tvar nOpacities;\n\tvar nOrients;\n\tvar opacity;\n\tvar nColors;\n\tvar nSizes;\n\tvar orient;\n\tvar nFlgs;\n\tvar color;\n\tvar marks;\n\tvar size;\n\tvar rug;\n\tvar len;\n\tvar tmp;\n\tvar i;\n\n\trug = state.$.svg.yRug;\n\n\tnOpacities = state.yRugOpacity.length;\n\tnOrients = state.yRugOrient.length;\n\tnColors = state.colors.length;\n\tnSizes = state.yRugSize.length;\n\tnFlgs = state.yRug.length;\n\n\tlen = state.y.length;\n\tmarks = [];\n\n\tdebug( 'Rendering y-axis rug plots...' );\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( !state.yRug[ i%nFlgs ] ) {\n\t\t\tdebug( 'Rug plot (%d) disabled. Skipping...', i );\n\t\t\tcontinue;\n\t\t}\n\t\tcolor = state.colors[ i%nColors ];\n\t\tdebug( 'Rug color: %s (%d).', color, i );\n\n\t\topacity = state.yRugOpacity[ i%nOpacities ];\n\t\tdebug( 'Rug opacity: %d (%d).', opacity, i );\n\n\t\torient = state.yRugOrient[ i%nOrients ];\n\t\tdebug( 'Rug orientation: %s (%d).', orient, i );\n\n\t\tsize = state.yRugSize[ i%nSizes ];\n\t\tdebug( 'Rug tick size: %d (%d).', size, i );\n\n\t\trug.data = state.y[ i ];\n\t\trug.label = state.labels[ i ] || '';\n\t\trug.color = color;\n\t\trug.size = size;\n\t\trug.opacity = opacity;\n\t\trug.orientation = orient;\n\n\t\tdebug( 'Rendering y-axis rug %d...', i );\n\t\ttmp = rug.render();\n\n\t\t// Update the class name to indicate this is a y-axis rug and add a transform to translate the rug into position based on the graph dimensions.\n\t\ttmp.properties.className += ' y';\n\t\trugTransform = yRugTransform( orient, state.graphWidth );\n\t\tif ( !tmp.properties.attributes ) {\n\t\t\ttmp.properties.attributes = {};\n\t\t}\n\t\ttmp.properties.attributes.transform = rugTransform;\n\n\t\tmarks.push( tmp );\n\t}\n\tdebug( 'Finished rendering y-axis rug plots.' );\n\treturn marks;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './lines.js';\nimport __var_2__ from './symbols.js';\nimport __var_3__ from './x_rug.js';\nimport __var_4__ from './y_rug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar lines = __var_1__;\nvar symbols = __var_2__;\nvar xRug = __var_3__;\nvar yRug = __var_4__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:marks' );\n\n\n// MAIN //\n\n/**\n* Renders individual marks.\n*\n* @private\n* @param {Object} state - state\n* @returns {VTree} virtual tree\n*/\nfunction render( state ) {\n\tvar parent;\n\tvar marks;\n\tvar len;\n\tvar i;\n\n\tdebug( 'Rendering marks group...' );\n\tparent = state.$.svg.marks.render();\n\n\tlen = state.x.length;\n\tif ( len === 0 ) {\n\t\tdebug( 'No individual marks to render.' );\n\t\treturn parent;\n\t}\n\tmarks = [];\n\n\tdebug( 'Rendering lines...' );\n\tmarks = marks.concat( lines( state ) );\n\n\tdebug( 'Rendering symbols...' );\n\tmarks = marks.concat( symbols( state ) );\n\n\tdebug( 'Rendering x-axis rug plots...' );\n\tmarks = marks.concat( xRug( state ) );\n\n\tdebug( 'Rendering y-axis rug plots...' );\n\tmarks = marks.concat( yRug( state ) );\n\n\tdebug( 'Inserting individual marks into marks group...' );\n\tfor ( i = 0; i < marks.length; i++ ) {\n\t\tparent.children.push( marks[i] );\n\t\tparent.count += marks[i].count;\n\t}\n\tdebug( 'Finished rendering marks.' );\n\treturn parent;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/utils/define-property';\nimport __var_2__ from '@stdlib/plot/components/svg/annotations';\nimport __var_3__ from '@stdlib/plot/components/svg/clip-path';\nimport __var_4__ from '@stdlib/plot/components/svg/canvas';\nimport __var_5__ from '@stdlib/plot/components/svg/graph';\nimport __var_6__ from '@stdlib/plot/components/svg/title';\nimport __var_7__ from '@stdlib/plot/components/svg/marks';\nimport __var_8__ from '@stdlib/plot/components/svg/background';\nimport __var_9__ from '@stdlib/plot/components/svg/defs';\nimport __var_10__ from '@stdlib/plot/components/svg/axis';\nimport __var_11__ from '@stdlib/plot/components/svg/path';\nimport __var_12__ from '@stdlib/plot/components/svg/symbols';\nimport __var_13__ from '@stdlib/plot/components/svg/rug';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar defineProperty = __var_1__;\nvar Annotations = __var_2__;\nvar ClipPath = __var_3__;\nvar Canvas = __var_4__;\nvar Graph = __var_5__;\nvar Title = __var_6__;\nvar Marks = __var_7__;\nvar Bkgd = __var_8__;\nvar Defs = __var_9__;\nvar Axis = __var_10__;\nvar Path = __var_11__;\nvar Symbols = __var_12__;\nvar Rug = __var_13__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:init' );\n\n\n// MAIN //\n\n/**\n* Initializes SVG components.\n*\n* @private\n* @param {Object} state - state\n*/\nfunction init( state ) {\n\tvar svg = state.$.svg;\n\n\tdebug( 'Initializing components...' );\n\n\tdebug( 'Initializing canvas component...' );\n\tdefineProperty( svg, 'canvas', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Canvas({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing definitions component...' );\n\tdefineProperty( svg, 'defs', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Defs({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing clipping path component...' );\n\tdefineProperty( svg, 'clipPath', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new ClipPath({\n\t\t\t'autoRender': false,\n\t\t\t'id': state._clipPathId // eslint-disable-line no-underscore-dangle\n\t\t})\n\t});\n\n\tdebug( 'Initializing graph component...' );\n\tdefineProperty( svg, 'graph', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Graph({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing annotations component...' );\n\tdefineProperty( svg, 'annotations', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Annotations({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing title component...' );\n\tdefineProperty( svg, 'title', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Title({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing background component...' );\n\tdefineProperty( svg, 'bkgd', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Bkgd({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing marks component...' );\n\tdefineProperty( svg, 'marks', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Marks({\n\t\t\t'autoRender': false,\n\t\t\t'clipPathId': state._clipPathId // eslint-disable-line no-underscore-dangle\n\t\t})\n\t});\n\n\tdebug( 'Initializing path component...' );\n\tdefineProperty( svg, 'path', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Path({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing symbols component...' );\n\tdefineProperty( svg, 'symbols', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Symbols({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing x-axis rug component...' );\n\tdefineProperty( svg, 'xRug', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Rug({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing y-axis rug component...' );\n\tdefineProperty( svg, 'yRug', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Rug({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing x-axis component...' );\n\tdefineProperty( svg, 'xAxis', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Axis({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'Initializing y-axis component...' );\n\tdefineProperty( svg, 'yAxis', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': new Axis({\n\t\t\t'autoRender': false\n\t\t})\n\t});\n\n\tdebug( 'All components initialized.' );\n}\n\n\n// EXPORTS //\nexport default init;\n","import __var_0__ from '@stdlib/vendor/debug.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:sync' );\n\n\n// MAIN //\n\n/**\n* Syncs SVG components with the current state.\n*\n* @private\n* @param {Object} state - state\n*/\nfunction sync( state ) {\n\tvar svg = state.$.svg;\n\n\tdebug( 'Syncing...' );\n\n\tdebug( 'Syncing canvas...' );\n\tsvg.canvas.width = state.width;\n\tsvg.canvas.height = state.height;\n\n\tdebug( 'Syncing definitions...' );\n\n\t// ...\n\n\tdebug( 'Syncing clipping path...' );\n\tsvg.clipPath.width = state.graphWidth;\n\tsvg.clipPath.height = state.graphHeight;\n\n\tdebug( 'Syncing graph...' );\n\tsvg.graph.translateX = state.paddingLeft;\n\tsvg.graph.translateY = state.paddingTop;\n\n\tdebug( 'Syncing annotations...' );\n\n\t// ...\n\n\tdebug( 'Syncing title...' );\n\tsvg.title.text = state.title;\n\n\tdebug( 'Syncing background...' );\n\tsvg.bkgd.width = state.graphWidth;\n\tsvg.bkgd.height = state.graphHeight;\n\n\tdebug( 'Syncing marks...' );\n\tsvg.marks.clipPathId = state._clipPathId; // eslint-disable-line no-underscore-dangle\n\n\tdebug( 'Syncing path...' );\n\tsvg.path.xScale = state.xScale;\n\tsvg.path.yScale = state.yScale;\n\n\t// svg.path.isDefined = state.isDefined; // TODO\n\n\tdebug( 'Syncing symbols...' );\n\tsvg.symbols.xScale = state.xScale;\n\tsvg.symbols.yScale = state.yScale;\n\n\t// svg.symbols.isDefined = state.isDefined; // TODO\n\n\tdebug( 'Syncing x-axis rug...' );\n\tsvg.xRug.scale = state.xScale;\n\n\t// svg.xRug.isDefined = state.isDefined; // TODO\n\n\tdebug( 'Syncing y-axis rug...' );\n\tsvg.yRug.scale = state.yScale;\n\n\t// svg.yRug.isDefined = state.isDefined; // TODO\n\n\tdebug( 'Syncing x-axis...' );\n\tsvg.xAxis.scale = state.xScale;\n\tsvg.xAxis.label = state.xLabel;\n\tsvg.xAxis.tickFormat = state.xTickFormat;\n\tsvg.xAxis.numTicks = state.xNumTicks;\n\tsvg.xAxis.orientation = state.xAxisOrient;\n\n\tdebug( 'Syncing y-axis...' );\n\tsvg.yAxis.scale = state.yScale;\n\tsvg.yAxis.label = state.yLabel;\n\tsvg.yAxis.tickFormat = state.yTickFormat;\n\tsvg.yAxis.numTicks = state.yNumTicks;\n\tsvg.yAxis.orientation = state.yAxisOrient;\n\n\tdebug( 'Sync complete.' );\n}\n\n\n// EXPORTS //\nexport default sync;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './utils/x_axis_transform.js';\nimport __var_2__ from './utils/y_axis_transform.js';\nimport __var_3__ from './marks/index.js';\nimport __var_4__ from './init.js';\nimport __var_5__ from './sync.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar xAxisTransform = __var_1__;\nvar yAxisTransform = __var_2__;\nvar renderMarks = __var_3__;\nvar init = __var_4__;\nvar sync = __var_5__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render:svg:main' );\n\n\n// MAIN //\n\n/**\n* Renders a virtual DOM tree.\n*\n* @private\n* @param {Object} state - state\n* @returns {VTree} virtual tree\n*/\nfunction render( state ) {\n\tvar annotations;\n\tvar clipPath;\n\tvar canvas;\n\tvar title;\n\tvar graph;\n\tvar marks;\n\tvar xAxis;\n\tvar yAxis;\n\tvar bkgd;\n\tvar defs;\n\tvar svg;\n\n\tsvg = state.$.svg;\n\n\t// Lazily initialize...\n\tif ( !svg.canvas ) {\n\t\tdebug( 'Initializing components...' );\n\t\tinit( state );\n\t}\n\tdebug( 'Syncing component states...' );\n\tsync( state );\n\n\tdebug( 'Rendering individual components...' );\n\n\tdebug( 'Rendering annotations...' );\n\tannotations = svg.annotations.render();\n\n\tdebug( 'Rendering clip-path...' );\n\tclipPath = svg.clipPath.render();\n\n\tdebug( 'Rendering canvas...' );\n\tcanvas = svg.canvas.render();\n\n\tdebug( 'Rendering graph...' );\n\tgraph = svg.graph.render();\n\n\tdebug( 'Rendering title...' );\n\ttitle = svg.title.render();\n\n\tdebug( 'Rendering x-axis...' );\n\txAxis = svg.xAxis.render();\n\n\tdebug( 'Rendering y-axis...' );\n\tyAxis = svg.yAxis.render();\n\n\tdebug( 'Rendering background...' );\n\tbkgd = svg.bkgd.render();\n\n\tdebug( 'Rendering definitions...' );\n\tdefs = svg.defs.render();\n\n\tdebug( 'Rendering marks...' );\n\tmarks = renderMarks( state );\n\n\tdebug( 'Updating rendered components...' );\n\n\tdebug( 'Updating title...' );\n\ttitle.properties.attributes.x = state.paddingLeft + ( state.graphWidth/2 );\n\ttitle.properties.attributes.y = state.paddingTop / 2;\n\n\tdebug( 'Updating x-axis...' );\n\txAxis.properties.className += ' x';\n\txAxis.properties.attributes.transform = xAxisTransform( state.xAxisOrient, state.graphHeight ); // eslint-disable-line max-len\n\n\tdebug( 'Updating y-axis...' );\n\tyAxis.properties.className += ' y';\n\tyAxis.properties.attributes.transform = yAxisTransform( state.yAxisOrient, state.graphWidth ); // eslint-disable-line max-len\n\n\tdebug( 'Assembling virtual tree...' );\n\n\tdebug( 'Inserting clip-path into definitions...' );\n\tdefs.children.push( clipPath );\n\tdefs.count += clipPath.count;\n\n\tdebug( 'Inserting background into graph...' );\n\tgraph.children.push( bkgd );\n\tgraph.count += bkgd.count;\n\n\tdebug( 'Inserting marks into graph...' );\n\tgraph.children.push( marks );\n\tgraph.count += marks.count;\n\n\tdebug( 'Inserting x-axis into graph...' );\n\tgraph.children.push( xAxis );\n\tgraph.count += xAxis.count;\n\n\tdebug( 'Inserting y-axis into graph...' );\n\tgraph.children.push( yAxis );\n\tgraph.count += yAxis.count;\n\n\tdebug( 'Inserting title into annotations...' );\n\tannotations.children.push( title );\n\tannotations.count += title.count;\n\n\tdebug( 'Inserting definitions into canvas...' );\n\tcanvas.children.push( defs );\n\tcanvas.count += defs.count;\n\n\tdebug( 'Inserting graph into canvas...' );\n\tcanvas.children.push( graph );\n\tcanvas.count += graph.count;\n\n\tdebug( 'Inserting annotations into canvas...' );\n\tcanvas.children.push( annotations );\n\tcanvas.count += annotations.count;\n\n\treturn canvas;\n}\n\n\n// EXPORTS //\nexport default render;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Validates that an instance is in a valid state for rendering.\n*\n* @private\n* @param {Object} state - state\n* @throws {Error} must be in a valid state to render\n*/\nfunction validate( state ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar x;\n\tvar y;\n\tvar i;\n\n\tx = state._xData;\n\ty = state._yData;\n\tif ( x.length !== y.length ) {\n\t\tthrow new Error( 'invalid state. `x` and `y` are different lengths. `x` length: '+x.length+', `y` length: '+y.length+'.' );\n\t}\n\t// TODO: will need to refactor to some degree to support `ndarray`-like `x` and `y`\n\tfor ( i = 0; i < x.length; i++ ) {\n\t\tif ( x[ i ].length !== y[ i ].length ) {\n\t\t\tthrow new Error( 'invalid state. Each `x[i]:y[i]` pair must be the same length. x['+i+'].length: '+x[i].length+', y['+i+'].length: '+y[i].length+'.' );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\nexport default validate;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from '@stdlib/vendor/vdom-to-html.js';\nimport __var_2__ from './svg/index.js';\nimport __var_3__ from './validate.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar vdom2html = __var_1__;\nvar renderSVG = __var_2__;\nvar validate = __var_3__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:render' );\n\n\n// MAIN //\n\n/**\n* Renders a plot.\n*\n* @private\n* @param {string} [format] - render format\n* @returns {(VTree|string)} virtual tree or a string\n*/\nfunction render( format ) {\n\t/* eslint-disable no-invalid-this */\n\tvar out;\n\tvar tmp;\n\tvar fmt;\n\n\ttmp = this.renderFormat;\n\tif ( arguments.length ) {\n\t\t// Temporarily set the render format:\n\t\tthis.renderFormat = format;\n\t\tfmt = format;\n\t} else {\n\t\tfmt = tmp;\n\t}\n\tdebug( 'Validating render state...' );\n\tvalidate( this );\n\n\tdebug( 'Render format: %s.', this.renderFormat );\n\tdebug( 'Rendering...' );\n\tif ( this._engine === 'svg' ) {\n\t\tout = renderSVG( this );\n\n\t\t// Default render format is virtual DOM.\n\t\tif ( fmt === 'html' ) {\n\t\t\tout = vdom2html( out );\n\t\t}\n\t\tthis.emit( 'render', out );\n\t}\n\tif ( arguments.length ) {\n\t\t// Restore the render format:\n\t\tthis.renderFormat = tmp;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default render;\n","import __var_0__ from '@stdlib/vendor/debug.js';\nimport __var_1__ from './view.js'; // eslint-disable-line no-underscore-dangle\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar logger = __var_0__;\nvar _view = __var_1__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:view' );\n\n\n// MAIN //\n\n/**\n* Generates a plot view.\n*\n* @private\n* @param {string} viewer - plot viewer\n*/\nfunction view( viewer ) {\n\t/* eslint-disable no-invalid-this */\n\tvar tmp = this.viewer;\n\tif ( arguments.length ) {\n\t\t// Temporarily set the viewer:\n\t\tthis.viewer = viewer;\n\t}\n\tdebug( 'Viewer: %s.', this.viewer );\n\tdebug( 'Generating view...' );\n\t_view( this, this.viewer, this.render() );\n\tif ( arguments.length ) {\n\t\t// Restore the viewer:\n\t\tthis.viewer = tmp;\n\t}\n}\n\n\n// EXPORTS //\nexport default view;\n","import __var_0__ from '@stdlib/vendor/events.js';\nimport __var_1__ from '@stdlib/vendor/debug.js';\nimport __var_2__ from '@stdlib/utils/keys';\nimport __var_3__ from '@stdlib/utils/define-property';\nimport __var_4__ from '@stdlib/utils/define-read-only-property';\nimport __var_5__ from '@stdlib/assert/is-plain-object';\nimport __var_6__ from '@stdlib/utils/copy';\nimport __var_7__ from '@stdlib/utils/inherit';\nimport __var_8__ from '@stdlib/utils/merge';\nimport __var_9__ from '@stdlib/random/base/minstd';\nimport __var_10__ from './view/view.js';\nimport __var_11__ from './defaults.js';\nimport __var_12__ from './props/x/set.js';\nimport __var_13__ from './props/x/get.js';\nimport __var_14__ from './props/y/set.js';\nimport __var_15__ from './props/y/get.js';\nimport __var_16__ from './props/labels/set.js';\nimport __var_17__ from './props/labels/get.js';\nimport __var_18__ from './props/is-defined/set.js';\nimport __var_19__ from './props/is-defined/get.js';\nimport __var_20__ from './props/colors/set.js';\nimport __var_21__ from './props/colors/get.js';\nimport __var_22__ from './props/line-style/set.js';\nimport __var_23__ from './props/line-style/get.js';\nimport __var_24__ from './props/line-opacity/set.js';\nimport __var_25__ from './props/line-opacity/get.js';\nimport __var_26__ from './props/line-width/set.js';\nimport __var_27__ from './props/line-width/get.js';\nimport __var_28__ from './props/symbols/set.js';\nimport __var_29__ from './props/symbols/get.js';\nimport __var_30__ from './props/symbols-size/set.js';\nimport __var_31__ from './props/symbols-size/get.js';\nimport __var_32__ from './props/symbols-opacity/set.js';\nimport __var_33__ from './props/symbols-opacity/get.js';\nimport __var_34__ from './props/width/set.js';\nimport __var_35__ from './props/width/get.js';\nimport __var_36__ from './props/height/set.js';\nimport __var_37__ from './props/height/get.js';\nimport __var_38__ from './props/padding-left/set.js';\nimport __var_39__ from './props/padding-left/get.js';\nimport __var_40__ from './props/padding-right/set.js';\nimport __var_41__ from './props/padding-right/get.js';\nimport __var_42__ from './props/padding-top/set.js';\nimport __var_43__ from './props/padding-top/get.js';\nimport __var_44__ from './props/padding-bottom/set.js';\nimport __var_45__ from './props/padding-bottom/get.js';\nimport __var_46__ from './props/x-min/set.js';\nimport __var_47__ from './props/x-min/get.js';\nimport __var_48__ from './props/x-max/set.js';\nimport __var_49__ from './props/x-max/get.js';\nimport __var_50__ from './props/y-min/set.js';\nimport __var_51__ from './props/y-min/get.js';\nimport __var_52__ from './props/y-max/set.js';\nimport __var_53__ from './props/y-max/get.js';\nimport __var_54__ from './props/x-scale/set.js';\nimport __var_55__ from './props/x-scale/get.js';\nimport __var_56__ from './props/y-scale/set.js';\nimport __var_57__ from './props/y-scale/get.js';\nimport __var_58__ from './props/x-tick-format/set.js';\nimport __var_59__ from './props/x-tick-format/get.js';\nimport __var_60__ from './props/y-tick-format/set.js';\nimport __var_61__ from './props/y-tick-format/get.js';\nimport __var_62__ from './props/x-num-ticks/set.js';\nimport __var_63__ from './props/x-num-ticks/get.js';\nimport __var_64__ from './props/y-num-ticks/set.js';\nimport __var_65__ from './props/y-num-ticks/get.js';\nimport __var_66__ from './props/x-axis-orient/set.js';\nimport __var_67__ from './props/x-axis-orient/get.js';\nimport __var_68__ from './props/y-axis-orient/set.js';\nimport __var_69__ from './props/y-axis-orient/get.js';\nimport __var_70__ from './props/x-rug/set.js';\nimport __var_71__ from './props/x-rug/get.js';\nimport __var_72__ from './props/y-rug/set.js';\nimport __var_73__ from './props/y-rug/get.js';\nimport __var_74__ from './props/x-rug-orient/set.js';\nimport __var_75__ from './props/x-rug-orient/get.js';\nimport __var_76__ from './props/y-rug-orient/set.js';\nimport __var_77__ from './props/y-rug-orient/get.js';\nimport __var_78__ from './props/x-rug-opacity/set.js';\nimport __var_79__ from './props/x-rug-opacity/get.js';\nimport __var_80__ from './props/y-rug-opacity/set.js';\nimport __var_81__ from './props/y-rug-opacity/get.js';\nimport __var_82__ from './props/x-rug-size/set.js';\nimport __var_83__ from './props/x-rug-size/get.js';\nimport __var_84__ from './props/y-rug-size/set.js';\nimport __var_85__ from './props/y-rug-size/get.js';\nimport __var_86__ from './props/description/set.js';\nimport __var_87__ from './props/description/get.js';\nimport __var_88__ from './props/title/set.js';\nimport __var_89__ from './props/title/get.js';\nimport __var_90__ from './props/x-label/set.js';\nimport __var_91__ from './props/x-label/get.js';\nimport __var_92__ from './props/y-label/set.js';\nimport __var_93__ from './props/y-label/get.js';\nimport __var_94__ from './props/engine/set.js';\nimport __var_95__ from './props/engine/get.js';\nimport __var_96__ from './props/auto-render/set.js';\nimport __var_97__ from './props/auto-render/get.js';\nimport __var_98__ from './props/render-format/set.js';\nimport __var_99__ from './props/render-format/get.js';\nimport __var_100__ from './props/viewer/set.js';\nimport __var_101__ from './props/viewer/get.js';\nimport __var_102__ from './props/auto-view/set.js';\nimport __var_103__ from './props/auto-view/get.js';\nimport __var_104__ from './props/graph-width/get.js';\nimport __var_105__ from './props/graph-height/get.js';\nimport __var_106__ from './props/x-domain/get.js';\nimport __var_107__ from './props/y-domain/get.js';\nimport __var_108__ from './props/x-range/get.js';\nimport __var_109__ from './props/y-range/get.js';\nimport __var_110__ from './props/x-pos/get.js';\nimport __var_111__ from './props/y-pos/get.js';\nimport __var_112__ from './render/index.js';\nimport __var_113__ from './view/index.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\nvar EventEmitter = __var_0__.EventEmitter;\nvar logger = __var_1__;\nvar objectKeys = __var_2__;\nvar defineProperty = __var_3__;\nvar setReadOnly = __var_4__;\nvar isObject = __var_5__;\nvar copy = __var_6__;\nvar inherit = __var_7__;\nvar mergeFcn = __var_8__.factory;\nvar minstd = __var_9__;\nvar view = __var_10__;\nvar defaults = __var_11__;\nvar setX = __var_12__;\nvar getX = __var_13__;\nvar setY = __var_14__;\nvar getY = __var_15__;\nvar setLabels = __var_16__;\nvar getLabels = __var_17__;\nvar setIsDefined = __var_18__;\nvar getIsDefined = __var_19__;\nvar setColors = __var_20__;\nvar getColors = __var_21__;\nvar setLineStyle = __var_22__;\nvar getLineStyle = __var_23__;\nvar setLineOpacity = __var_24__;\nvar getLineOpacity = __var_25__;\nvar setLineWidth = __var_26__;\nvar getLineWidth = __var_27__;\nvar setSymbols = __var_28__;\nvar getSymbols = __var_29__;\nvar setSymbolsSize = __var_30__;\nvar getSymbolsSize = __var_31__;\nvar setSymbolsOpacity = __var_32__;\nvar getSymbolsOpacity = __var_33__;\nvar setWidth = __var_34__;\nvar getWidth = __var_35__;\nvar setHeight = __var_36__;\nvar getHeight = __var_37__;\nvar setPaddingLeft = __var_38__;\nvar getPaddingLeft = __var_39__;\nvar setPaddingRight = __var_40__;\nvar getPaddingRight = __var_41__;\nvar setPaddingTop = __var_42__;\nvar getPaddingTop = __var_43__;\nvar setPaddingBottom = __var_44__;\nvar getPaddingBottom = __var_45__;\nvar setXMin = __var_46__;\nvar getXMin = __var_47__;\nvar setXMax = __var_48__;\nvar getXMax = __var_49__;\nvar setYMin = __var_50__;\nvar getYMin = __var_51__;\nvar setYMax = __var_52__;\nvar getYMax = __var_53__;\nvar setXScale = __var_54__;\nvar getXScale = __var_55__;\nvar setYScale = __var_56__;\nvar getYScale = __var_57__;\nvar setXTickFormat = __var_58__;\nvar getXTickFormat = __var_59__;\nvar setYTickFormat = __var_60__;\nvar getYTickFormat = __var_61__;\nvar setXNumTicks = __var_62__;\nvar getXNumTicks = __var_63__;\nvar setYNumTicks = __var_64__;\nvar getYNumTicks = __var_65__;\nvar setXAxisOrient = __var_66__;\nvar getXAxisOrient = __var_67__;\nvar setYAxisOrient = __var_68__;\nvar getYAxisOrient = __var_69__;\nvar setXRug = __var_70__;\nvar getXRug = __var_71__;\nvar setYRug = __var_72__;\nvar getYRug = __var_73__;\nvar setXRugOrient = __var_74__;\nvar getXRugOrient = __var_75__;\nvar setYRugOrient = __var_76__;\nvar getYRugOrient = __var_77__;\nvar setXRugOpacity = __var_78__;\nvar getXRugOpacity = __var_79__;\nvar setYRugOpacity = __var_80__;\nvar getYRugOpacity = __var_81__;\nvar setXRugSize = __var_82__;\nvar getXRugSize = __var_83__;\nvar setYRugSize = __var_84__;\nvar getYRugSize = __var_85__;\nvar setDescription = __var_86__;\nvar getDescription = __var_87__;\nvar setTitle = __var_88__;\nvar getTitle = __var_89__;\nvar setXLabel = __var_90__;\nvar getXLabel = __var_91__;\nvar setYLabel = __var_92__;\nvar getYLabel = __var_93__;\nvar setEngine = __var_94__;\nvar getEngine = __var_95__;\nvar setAutoRender = __var_96__;\nvar getAutoRender = __var_97__;\nvar setRenderFormat = __var_98__;\nvar getRenderFormat = __var_99__;\nvar setViewer = __var_100__;\nvar getViewer = __var_101__;\nvar setAutoView = __var_102__;\nvar getAutoView = __var_103__;\nvar getGraphWidth = __var_104__;\nvar getGraphHeight = __var_105__;\nvar getXDomain = __var_106__;\nvar getYDomain = __var_107__;\nvar getXRange = __var_108__;\nvar getYRange = __var_109__;\nvar getXPos = __var_110__;\nvar getYPos = __var_111__;\nvar render = __var_112__;\nvar viewMethod = __var_113__;\n\n\n// VARIABLES //\n\nvar debug = logger( 'plot:main' );\nvar PRIVATE_PROPS = [\n\t'_autoRender',\n\t'_autoView',\n\t'_colors',\n\t'_description',\n\t'_engine',\n\t'_height',\n\t'_isDefined',\n\t'_labels',\n\t'_lineOpacity',\n\t'_lineStyle',\n\t'_lineWidth',\n\t'_paddingBottom',\n\t'_paddingLeft',\n\t'_paddingRight',\n\t'_paddingTop',\n\t'_renderFormat',\n\t'_symbols',\n\t'_symbolsOpacity',\n\t'_symbolsSize',\n\t'_title',\n\t'_viewer',\n\t'_width',\n\t'_xAxisOrient',\n\t'_xData',\n\t'_xLabel',\n\t'_xMax',\n\t'_xMin',\n\t'_xNumTicks',\n\t'_xRug',\n\t'_xRugOpacity',\n\t'_xRugOrient',\n\t'_xRugSize',\n\t'_xScale',\n\t'_xTickFormat',\n\t'_yAxisOrient',\n\t'_yData',\n\t'_yLabel',\n\t'_yMax',\n\t'_yMin',\n\t'_yNumTicks',\n\t'_yRug',\n\t'_yRugOpacity',\n\t'_yRugOrient',\n\t'_yRugSize',\n\t'_yScale',\n\t'_yTickFormat'\n];\n\n\n// FUNCTIONS //\n\nvar merge = mergeFcn({\n\t'extend': false\n});\n\n\n// MAIN //\n\n/**\n* Plot constructor.\n*\n* @constructor\n* @param {Array} [x] - x-values\n* @param {Array} [y] - y-values\n* @param {Options} [options] - constructor options\n* @param {boolean} [options.autoRender=false] - indicates whether to re-render on a change event\n* @param {boolean} [options.autoView=false] - indicates whether to generate an updated view on a render event\n* @param {(string|StringArray)} [options.colors='category10'] - data colors\n* @param {string} [options.description=''] - plot description\n* @param {string} [options.engine='svg'] - plot engine\n* @param {PositiveNumber} [options.height=400] - plot height\n* @param {Function} [options.isDefined] - accessor indicating whether a datum is defined\n* @param {(StringArray|EmptyArray)} [options.labels] - data labels\n* @param {(number|NumberArray)} [options.lineOpacity=0.9] - data line opacity\n* @param {(string|StringArray)} [options.lineStyle='-'] - data line style(s)\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} [options.lineWidth=2] - data line width(s)\n* @param {NonNegativeInteger} [options.paddingBottom=80] - bottom padding\n* @param {NonNegativeInteger} [options.paddingLeft=90] - left padding\n* @param {NonNegativeInteger} [options.paddingRight=20] - right padding\n* @param {NonNegativeInteger} [options.paddingTop=80] - top padding\n* @param {string} [options.renderFormat='vdom'] - plot render format\n* @param {(string|StringArray)} [options.symbols='none'] - data symbols\n* @param {(number|NumberArray)} [options.symbolsOpacity=0.9] - symbols opacity\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} [options.symbolsSize=6] - symbols size\n* @param {string} [options.title=''] - plot title\n* @param {string} [options.viewer='none'] - plot viewer\n* @param {PositiveNumber} [options.width=400] - plot width\n* @param {Array} [options.x=[]] - x-values\n* @param {string} [options.xAxisOrient='bottom'] - x-axis orientation\n* @param {string} [options.xLabel='x'] - x-axis label\n* @param {(Date|FiniteNumber|null)} [options.xMax=null] - maximum value of x-axis domain\n* @param {(Date|FiniteNumber|null)} [options.xMin=null] - minimum value of x-axis domain\n* @param {(NonNegativeInteger|null)} [options.xNumTicks=5] - number of x-axis tick marks\n* @param {(boolean|BooleanArray)} [options.xRug=false] - indicates whether to render a rug plot along the x-axis\n* @param {(string|StringArray)} [options.xRugOrient='bottom'] - x-axis rug orientation\n* @param {(number|NumberArray)} [options.xRugOpacity=0.1] - x-axis rug opacity\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} [options.xRugSize=6] - x-axis rug tick (tassel) size\n* @param {string} [options.xScale='linear'] - x-axis scale\n* @param {(string|null)} [options.xTickFormat=null] - x-axis tick format\n* @param {Array} [options.y=[]] - y-values\n* @param {string} [options.yAxisOrient='left'] - y-axis orientation\n* @param {string} [options.yLabel='y'] - y-axis label\n* @param {(FiniteNumber|null)} [options.yMax=null] - maximum value of y-axis domain\n* @param {(FiniteNumber|null)} [options.yMin=null] - minimum value of y-axis domain\n* @param {(NonNegativeInteger|null)} [options.yNumTicks=5] - number of y-axis tick marks\n* @param {(boolean|BooleanArray)} [options.yRug=false] - indicates whether to render a rug plot along the y-axis\n* @param {(string|StringArray)} [options.yRugOrient='left'] - y-axis rug orientation\n* @param {(number|NumberArray)} [options.yRugOpacity=0.1] - y-axis rug opacity\n* @param {(NonNegativeInteger|Array<NonNegativeInteger>)} [options.yRugSize=6] - y-axis rug tick (tassel) size\n* @param {string} [options.yScale='linear'] - y-axis scale\n* @param {(string|null)} [options.yTickFormat=null] - y-axis tick format\n* @throws {TypeError} must provide valid options\n* @returns {Plot} Plot instance\n*\n* @example\n* var plot = new Plot();\n*/\nfunction Plot() {\n\tvar options;\n\tvar nargs;\n\tvar keys;\n\tvar self;\n\tvar opts;\n\tvar key;\n\tvar i;\n\n\tnargs = arguments.length;\n\tif ( !(this instanceof Plot) ) {\n\t\tif ( nargs === 0 ) {\n\t\t\treturn new Plot();\n\t\t}\n\t\tif ( nargs === 1 ) {\n\t\t\treturn new Plot( arguments[0] );\n\t\t}\n\t\tif ( nargs === 2 ) {\n\t\t\treturn new Plot( arguments[0], arguments[1] );\n\t\t}\n\t\treturn new Plot( arguments[0], arguments[1], arguments[2] );\n\t}\n\tself = this;\n\n\topts = defaults();\n\tif ( nargs === 0 ) {\n\t\toptions = {};\n\t} else if ( nargs === 1 ) {\n\t\toptions = arguments[ 0 ];\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an `object`. Value: `' + options + '`.' );\n\t\t}\n\t} else if ( nargs === 2 ) {\n\t\toptions = {\n\t\t\t'x': arguments[ 0 ],\n\t\t\t'y': arguments[ 1 ]\n\t\t};\n\t} else if ( nargs > 2 ) {\n\t\tif ( !isObject( arguments[2] ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options argument must be an `object`. Value: `' + arguments[2] + '`.' );\n\t\t}\n\t\toptions = copy( arguments[2] ); // avoid mutation\n\t\toptions.x = arguments[ 0 ];\n\t\toptions.y = arguments[ 1 ];\n\t}\n\topts = merge( opts, options );\n\n\tdebug( 'Creating an instance with the following configuration: %s.', JSON.stringify( opts ) );\n\tEventEmitter.call( this );\n\n\tfor ( i = 0; i < PRIVATE_PROPS.length; i++ ) {\n\t\tdefineProperty( this, PRIVATE_PROPS[i], {\n\t\t\t'configurable': false,\n\t\t\t'enumerable': false,\n\t\t\t'writable': true,\n\t\t\t'value': null\n\t\t});\n\t}\n\t// Set a clipping path id:\n\tdefineProperty( this, '_clipPathId', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': minstd().toString() // TODO: uuid\n\t});\n\n\t// Initialize an internal cache for renderers...\n\tdefineProperty( this, '$', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': {}\n\t});\n\tdefineProperty( this.$, 'svg', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': {}\n\t});\n\n\t// Set options...\n\tkeys = objectKeys( opts );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tthis[ key ] = opts[ key ];\n\t}\n\n\t// Add event listeners:\n\tthis.on( 'change', onChange );\n\tthis.on( 'render', onRender );\n\n\treturn this;\n\n\t/**\n\t* Callback invoked upon receiving a change event.\n\t*\n\t* @private\n\t*/\n\tfunction onChange() {\n\t\t/* eslint-disable no-underscore-dangle */\n\t\tdebug( 'Received a change event.' );\n\t\tif ( self._autoRender ) {\n\t\t\tself.render();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon receiving a render event.\n\t*\n\t* @private\n\t* @param {*} plot - rendered plot\n\t*/\n\tfunction onRender( plot ) {\n\t\t/* eslint-disable no-underscore-dangle */\n\t\tdebug( 'Received a render event.' );\n\t\tif ( self._autoView ) {\n\t\t\tdebug( 'Viewer: %s.', self._viewer );\n\t\t\tdebug( 'Generating view...' );\n\t\t\tview( self, self._viewer, plot );\n\t\t}\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Plot, EventEmitter );\n\n/**\n* `x` values.\n*\n* @name x\n* @memberof Plot.prototype\n* @type {Array}\n* @throws {TypeError} must be an array\n* @default []\n*\n* @example\n* var plot = new Plot();\n* plot.x = [ [ 1417563950959, 1417563952959 ] ];\n*\n* @example\n* var plot = new Plot({\n*     'x': [ [ 1417563950959, 1417563952959 ] ]\n* });\n* var x = plot.x;\n* // returns [ [ 1417563950959, 1417563952959 ] ]\n*/\ndefineProperty( Plot.prototype, 'x', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setX,\n\t'get': getX\n});\n\n/**\n* `y` values.\n*\n* @name y\n* @memberof Plot.prototype\n* @type {Array}\n* @throws {TypeError} must be an array\n* @default []\n*\n* @example\n* var plot = new Plot();\n* plot.x = [ [ 1417563950959, 1417563952959 ] ];\n* plot.y = [ [ 0.25, 0.23 ] ];\n*\n* @example\n* var plot = new Plot({\n*     'x': [ [ 1417563950959, 1417563952959 ] ],\n*     'y': [ [ 0.25, 0.23 ] ]\n* });\n* var y = plot.y;\n* // returns [ [ 0.25, 0.23 ] ]\n*/\ndefineProperty( Plot.prototype, 'y', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setY,\n\t'get': getY\n});\n\n/**\n* Data labels.\n*\n* @name labels\n* @memberof Plot.prototype\n* @type {(StringArray|EmptyArray)}\n* @throws {TypeError} must be either an array of strings or an empty array\n* @default []\n*\n* @example\n* var plot = new Plot();\n* plot.labels = [ 'beep', 'boop' ];\n*\n* @example\n* var plot = new Plot({\n*     'labels': [ 'beep', 'boop' ]\n* });\n* var labels = plot.labels;\n* // returns [ 'beep', 'boop' ]\n*/\ndefineProperty( Plot.prototype, 'labels', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLabels,\n\t'get': getLabels\n});\n\n/**\n* Accessor which defines whether a datum is defined.\n*\n* ## Notes\n*\n* -   This accessor is used to define how missing values are encoded.\n* -   The default behavior is to ignore values which are `NaN`.\n*\n* @name isDefined\n* @memberof Plot.prototype\n* @type {Function}\n* @param {*} d - datum\n* @param {integer} i - index\n* @throws {TypeError} must be a function\n*\n* @example\n* var plot = new Plot();\n* plot.isDefined = function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n*\n* @example\n* function isDefined( d ) {\n*     // Check for `NaN`:\n*     return ( d === d );\n* }\n* var plot = new Plot({\n*     'isDefined': isDefined\n* });\n* var fcn = plot.isDefined;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'isDefined', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setIsDefined,\n\t'get': getIsDefined\n});\n\n/**\n* Data colors. When retrieved, the returned value is always an `array`.\n*\n* @name colors\n* @memberof Plot.prototype\n* @type {(string|StringArray)}\n* @throws {TypeError} must be either a string or an array of strings\n* @default 'category10'\n*\n* @example\n* var plot = new Plot();\n* plot.colors = 'category20';\n*\n* @example\n* var plot = new Plot({\n*     'colors': 'category20'\n* });\n* var colors = plot.colors;\n* // returns [...]\n*/\ndefineProperty( Plot.prototype, 'colors', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setColors,\n\t'get': getColors\n});\n\n/**\n* Data line style(s).\n*\n* ## Notes\n*\n* -   When retrieved, the returned value is always an `array`.\n*\n* @name lineStyle\n* @memberof Plot.prototype\n* @type {(string|StringArray)}\n* @throws {TypeError} must be a string or string array\n* @throws {Error} must be a supported line style\n* @default '-'\n*\n* @example\n* var plot = new Plot();\n* plot.lineStyle = [ '-', 'none' ];\n*\n* @example\n* var plot = new Plot({\n*     'lineStyle': 'none'\n* });\n* var lineStyle = plot.lineStyle;\n* // returns [ 'none' ]\n*/\ndefineProperty( Plot.prototype, 'lineStyle', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLineStyle,\n\t'get': getLineStyle\n});\n\n/**\n* Data line opacity.\n*\n* ## Notes\n*\n* -   When retrieved, the returned value is always an `array`.\n*\n* @name lineOpacity\n* @memberof Plot.prototype\n* @type {(number|NumberArray)}\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default '0.9'\n*\n* @example\n* var plot = new Plot();\n* plot.lineOpacity = [ 1.0, 0.5 ];\n*\n* @example\n* var plot = new Plot({\n*     'lineOpacity': 0.5\n* });\n* var opacity = plot.lineOpacity;\n* // returns [ 0.5 ]\n*/\ndefineProperty( Plot.prototype, 'lineOpacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLineOpacity,\n\t'get': getLineOpacity\n});\n\n/**\n* Data line width.\n*\n* ## Notes\n*\n* -   When retrieved, the returned value is always an `array`.\n*\n* @name lineWidth\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|NonNegativeIntegerArray)}\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n* @default 2\n*\n* @example\n* var plot = new Plot();\n* plot.lineWidth = 1;\n*\n* @example\n* var plot = new Plot({\n*     'lineWidth': [ 1, 3 ]\n* });\n* var width = plot.lineWidth;\n* // returns [ 1, 3 ]\n*/\ndefineProperty( Plot.prototype, 'lineWidth', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setLineWidth,\n\t'get': getLineWidth\n});\n\n/**\n* Data symbols. When retrieved, the returned value is always an `array`.\n*\n* @name symbols\n* @memberof Plot.prototype\n* @type {(string|StringArray)}\n* @throws {TypeError} must be a string or string array\n* @throws {Error} must be a supported symbol\n* @default 'none'\n*\n* @example\n* var plot = new Plot();\n* plot.symbols = [ 'open-circle', 'closed-circle' ];\n*\n* @example\n* var plot = new Plot({\n*     'symbols': 'closed-circle'\n* });\n* var symbols = plot.symbols;\n* // returns [ 'closed-circle' ]\n*/\ndefineProperty( Plot.prototype, 'symbols', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setSymbols,\n\t'get': getSymbols\n});\n\n/**\n* Symbols size. When retrieved, the returned value is always an `array`.\n*\n* @name symbolsSize\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|NonNegativeIntegerArray)}\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n* @default 6\n*\n* @example\n* var plot = new Plot();\n* plot.symbolsSize = 4;\n*\n* @example\n* var plot = new Plot({\n*     'symbolsSize': [ 4, 6 ]\n* });\n* var size = plot.symbolsSize;\n* // returns [ 4, 6 ]\n*/\ndefineProperty( Plot.prototype, 'symbolsSize', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setSymbolsSize,\n\t'get': getSymbolsSize\n});\n\n/**\n* Symbols opacity. When retrieved, the returned value is always an `array`.\n*\n* @name symbolsOpacity\n* @memberof Plot.prototype\n* @type {(number|NumberArray)}\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default 0.9\n*\n* @example\n* var plot = new Plot();\n* plot.symbolsOpacity = [ 0.2, 0.5 ];\n*\n* @example\n* var plot = new Plot({\n*     'symbolsOpacity': 0.2\n* });\n* var opacity = plot.symbolsOpacity;\n* // returns [ 0.2 ]\n*/\ndefineProperty( Plot.prototype, 'symbolsOpacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setSymbolsOpacity,\n\t'get': getSymbolsOpacity\n});\n\n/**\n* Plot width.\n*\n* @name width\n* @memberof Plot.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.width = 100;\n*\n* @example\n* var plot = new Plot({\n*     'width': 480\n* });\n* var width = plot.width;\n* // returns 480\n*/\ndefineProperty( Plot.prototype, 'width', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setWidth,\n\t'get': getWidth\n});\n\n/**\n* Plot height.\n*\n* @name height\n* @memberof Plot.prototype\n* @type {PositiveNumber}\n* @throws {TypeError} must be a positive number\n* @default 400 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.height = 100;\n*\n* @example\n* var plot = new Plot({\n*     'height': 360\n* });\n* var height = plot.height;\n* // returns 360\n*/\ndefineProperty( Plot.prototype, 'height', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setHeight,\n\t'get': getHeight\n});\n\n/**\n* Plot left padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a left-oriented y-axis.\n*\n* @name paddingLeft\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 90 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingLeft = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingLeft': 100\n* });\n* var padding = plot.paddingLeft;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingLeft', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingLeft,\n\t'get': getPaddingLeft\n});\n\n/**\n* Plot right padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a right-oriented y-axis.\n*\n* @name paddingRight\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 20 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingRight = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingRight': 100\n* });\n* var padding = plot.paddingRight;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingRight', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingRight,\n\t'get': getPaddingRight\n});\n\n/**\n* Plot top padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a title or top-oriented x-axis.\n*\n* @name paddingTop\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 80 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingTop = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingTop': 100\n* });\n* var padding = plot.paddingTop;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingTop', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingTop,\n\t'get': getPaddingTop\n});\n\n/**\n* Plot bottom padding.\n*\n* ## Notes\n*\n* -   Typically used to create space for a bottom-oriented y-axis.\n*\n* @name paddingBottom\n* @memberof Plot.prototype\n* @type {NonNegativeInteger}\n* @throws {TypeError} must be a nonnegative integer\n* @default 80 (px)\n*\n* @example\n* var plot = new Plot();\n* plot.paddingBottom = 100;\n*\n* @example\n* var plot = new Plot({\n*     'paddingBottom': 100\n* });\n* var padding = plot.paddingBottom;\n* // returns 100\n*/\ndefineProperty( Plot.prototype, 'paddingBottom', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setPaddingBottom,\n\t'get': getPaddingBottom\n});\n\n/**\n* Minimum value of the x-axis domain.\n*\n* ## Notes\n*\n* -   When retrieved, if the value has been set to `null`, the returned value is computed from the `x` data.\n*\n* @name xMin\n* @memberof Plot.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.xMin = -1.0;\n*\n* @example\n* var plot = new Plot({\n*     'xMin': -10.0\n* });\n* var xmin = plot.xMin;\n* // returns -10.0\n*/\ndefineProperty( Plot.prototype, 'xMin', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXMin,\n\t'get': getXMin\n});\n\n/**\n* Maximum value of the x-axis domain.\n*\n* ## Notes\n*\n* -   When retrieved, if the value has been set to `null`, the returned value is computed from the `x` data.\n*\n* @name xMax\n* @memberof Plot.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.xMax = 100.0;\n*\n* @example\n* var plot = new Plot({\n*     'xMax': 10.0\n* });\n* var xmax = plot.xMax;\n* // returns 10.0\n*/\ndefineProperty( Plot.prototype, 'xMax', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXMax,\n\t'get': getXMax\n});\n\n/**\n* Minimum value of the y-axis domain.\n*\n* ## Notes\n*\n* -   When retrieved, if the value has been set to `null`, the returned value is computed from the `y` data.\n*\n* @name yMin\n* @memberof Plot.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.yMin = -100.0;\n*\n* @example\n* var plot = new Plot({\n*     'yMin': 3.14\n* });\n* var ymin = plot.yMin;\n* // returns 3.14\n*/\ndefineProperty( Plot.prototype, 'yMin', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYMin,\n\t'get': getYMin\n});\n\n/**\n* Maximum value of the y-axis domain.\n*\n* ## Notes\n*\n* -   When retrieved, if the value has been set to `null`, the returned value is computed from the `y` data.\n*\n* @name yMax\n* @memberof Plot.prototype\n* @type {(FiniteNumber|null)}\n* @throws {TypeError} must be a finite number primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.yMax = 100.0;\n*\n* @example\n* var plot = new Plot({\n*     'yMax': 31.4\n* });\n* var ymax = plot.yMax;\n* // returns 31.4\n*/\ndefineProperty( Plot.prototype, 'yMax', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYMax,\n\t'get': getYMax\n});\n\n/**\n* Scale function for mapping values to a coordinate along the x-axis. When retrieved, the returned value is a scale function.\n*\n* @name xScale\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default 'linear'\n*\n* @example\n* var plot = new Plot();\n* plot.xScale = 'time';\n*\n* @example\n* var plot = new Plot({\n*     'xScale': 'time'\n* });\n* var scale = plot.xScale;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'xScale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXScale,\n\t'get': getXScale\n});\n\n/**\n* Scale function for mapping values to a coordinate along the y-axis. When retrieved, the returned value is a scale function.\n*\n* @name yScale\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default 'linear'\n*\n* @example\n* var plot = new Plot();\n* plot.yScale = 'linear';\n*\n* @example\n* var plot = new Plot({\n*     'yScale': 'linear'\n* });\n* var scale = plot.yScale;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'yScale', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYScale,\n\t'get': getYScale\n});\n\n/**\n* x-axis tick format.\n*\n* ## Notes\n*\n* -   When retrieved, if the value is not `null`, the returned value is a formatting function.\n*\n* @name xTickFormat\n* @memberof Plot.prototype\n* @type {(string|null)}\n* @throws {TypeError} must be a string primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.xScale = 'time';\n* plot.xTickFormat = '%H:%M';\n*\n* @example\n* var plot = new Plot({\n*     'xScale': 'time',\n*     'xTickFormat': '%H:%M'\n* });\n* var fmt = plot.xTickFormat;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'xTickFormat', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXTickFormat,\n\t'get': getXTickFormat\n});\n\n/**\n* y-axis tick format.\n*\n* ## Notes\n*\n* -   If the value is not `null`, when retrieved, the returned value is a formatting function.\n*\n* @name yTickFormat\n* @memberof Plot.prototype\n* @type {(string|null)}\n* @throws {TypeError} must be a string primitive or null\n* @default null\n*\n* @example\n* var plot = new Plot();\n* plot.yTickFormat = '.0%';\n*\n* @example\n* var plot = new Plot({\n*     'yTickFormat': '.0%'\n* });\n* var fmt = plot.yTickFormat;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'yTickFormat', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYTickFormat,\n\t'get': getYTickFormat\n});\n\n/**\n* Number of x-axis tick marks.\n*\n* @name xNumTicks\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|null)}\n* @throws {TypeError} must be a nonnegative integer or null\n* @default 5\n*\n* @example\n* var plot = new Plot();\n* plot.xNumTicks = 10;\n*\n* @example\n* var plot = new Plot({\n*     'xNumTicks': 10\n* });\n* var ticks = plot.xNumTicks;\n* // returns 10\n*/\ndefineProperty( Plot.prototype, 'xNumTicks', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXNumTicks,\n\t'get': getXNumTicks\n});\n\n/**\n* Number of y-axis tick marks.\n*\n* @name yNumTicks\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|null)}\n* @throws {TypeError} must be a nonnegative integer or null\n* @default 5\n*\n* @example\n* var plot = new Plot();\n* plot.yNumTicks = 10;\n*\n* @example\n* var plot = new Plot({\n*     'yNumTicks': 10\n* });\n* var ticks = plot.yNumTicks;\n* // returns 10\n*/\ndefineProperty( Plot.prototype, 'yNumTicks', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYNumTicks,\n\t'get': getYNumTicks\n});\n\n/**\n* x-axis orientation.\n*\n* @name xAxisOrient\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be either `'top'` or `'bottom'`\n* @default 'bottom'\n*\n* @example\n* var plot = new Plot();\n* plot.xAxisOrient = 'bottom';\n*\n* @example\n* var plot = new Plot({\n*     'xAxisOrient': 'bottom'\n* });\n* var orientation = plot.xAxisOrient;\n* // returns 'bottom'\n*/\ndefineProperty( Plot.prototype, 'xAxisOrient', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXAxisOrient,\n\t'get': getXAxisOrient\n});\n\n/**\n* y-axis orientation.\n*\n* @name yAxisOrient\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be either `'left'` or `'right'`\n* @default 'left'\n*\n* @example\n* var plot = new Plot();\n* plot.yAxisOrient = 'left';\n*\n* @example\n* var plot = new Plot({\n*     'yAxisOrient': 'left'\n* });\n* var orientation = plot.yAxisOrient;\n* // returns 'left'\n*/\ndefineProperty( Plot.prototype, 'yAxisOrient', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYAxisOrient,\n\t'get': getYAxisOrient\n});\n\n/**\n* Boolean flag(s) indicating whether to display a rug plot along the x-axis. When retrieved, the returned value is always an `array`.\n*\n* @name xRug\n* @memberof Plot.prototype\n* @type {(boolean|BooleanArray)}\n* @throws {TypeError} must be a boolean primitive or boolean array\n* @default false\n*\n* @example\n* var plot = new Plot({\n*     'xRug': true\n* });\n*\n* var bool = plot.xRug;\n* // returns [ true ]\n*/\ndefineProperty( Plot.prototype, 'xRug', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXRug,\n\t'get': getXRug\n});\n\n/**\n* Boolean flag(s) indicating whether to display a rug plot along the y-axis. When retrieved, the returned value is always an `array`.\n*\n* @name yRug\n* @memberof Plot.prototype\n* @type {(boolean|BooleanArray)}\n* @throws {TypeError} must be a boolean primitive or boolean array\n* @default false\n*\n* @example\n* var plot = new Plot({\n*     'yRug': true\n* });\n*\n* var bool = plot.yRug;\n* // returns [ true ]\n*/\ndefineProperty( Plot.prototype, 'yRug', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYRug,\n\t'get': getYRug\n});\n\n/**\n* x-axis rug orientation. When retrieved, the returned value is always an `array`.\n*\n* @name xRugOrient\n* @memberof Plot.prototype\n* @type {(string|StringArray)}\n* @throws {TypeError} must be a string or string array\n* @throws {TypeError} must be either `'top'` or `'bottom'`\n* @default 'bottom'\n*\n* @example\n* var plot = new Plot();\n* plot.xRugOrient = [ 'bottom', 'top' ];\n*\n* @example\n* var plot = new Plot({\n*     'xRugOrient': 'bottom'\n* });\n* var orientation = plot.xRugOrient;\n* // returns [ 'bottom' ]\n*/\ndefineProperty( Plot.prototype, 'xRugOrient', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXRugOrient,\n\t'get': getXRugOrient\n});\n\n/**\n* y-axis rug orientation. When retrieved, the returned value is always an `array`.\n*\n* @name yRugOrient\n* @memberof Plot.prototype\n* @type {(string|StringArray)}\n* @throws {TypeError} must be a string or string array\n* @throws {TypeError} must be either `'left'` or `'right'`\n* @default 'left'\n*\n* @example\n* var plot = new Plot();\n* plot.yRugOrient = [ 'right', 'left' ];\n*\n* @example\n* var plot = new Plot({\n*     'yRugOrient': 'left'\n* });\n* var orientation = plot.yRugOrient;\n* // returns [ 'left' ]\n*/\ndefineProperty( Plot.prototype, 'yRugOrient', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYRugOrient,\n\t'get': getYRugOrient\n});\n\n/**\n* x-axis rug opacity. When retrieved, the returned value is always an `array`.\n*\n* @name xRugOpacity\n* @memberof Plot.prototype\n* @type {(number|NumberArray)}\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default 0.1\n*\n* @example\n* var plot = new Plot();\n* plot.xRugOpacity = [ 0.1, 0.5 ];\n*\n* @example\n* var plot = new Plot({\n*     'xRugOpacity': 0.1\n* });\n* var opacity = plot.xRugOpacity;\n* // returns [ 0.1 ]\n*/\ndefineProperty( Plot.prototype, 'xRugOpacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXRugOpacity,\n\t'get': getXRugOpacity\n});\n\n/**\n* y-axis rug opacity. When retrieved, the returned value is always an `array`.\n*\n* @name yRugOpacity\n* @memberof Plot.prototype\n* @type {(number|NumberArray)}\n* @throws {TypeError} must be a number or number array\n* @throws {RangeError} must be a number on the interval `[0,1]`\n* @default 0.1\n*\n* @example\n* var plot = new Plot();\n* plot.yRugOpacity = [ 0.1, 0.5 ];\n*\n* @example\n* var plot = new Plot({\n*     'yRugOpacity': 0.1\n* });\n* var opacity = plot.yRugOpacity;\n* // returns [ 0.1 ]\n*/\ndefineProperty( Plot.prototype, 'yRugOpacity', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYRugOpacity,\n\t'get': getYRugOpacity\n});\n\n/**\n* x-axis rug tick (tassel) size. When retrieved, the returned value is always an `array`.\n*\n* @name xRugSize\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|Array<NonNegativeInteger>)}\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n* @default 6\n*\n* @example\n* var plot = new Plot();\n* plot.xRugSize = [ 4, 6 ];\n*\n* @example\n* var plot = new Plot({\n*     'xRugSize': 4\n* });\n* var size = plot.xRugSize;\n* // returns [ 4 ]\n*/\ndefineProperty( Plot.prototype, 'xRugSize', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXRugSize,\n\t'get': getXRugSize\n});\n\n/**\n* y-axis rug tick (tassel) size. When retrieved, the returned value is always an `array`.\n*\n* @name yRugSize\n* @memberof Plot.prototype\n* @type {(NonNegativeInteger|Array<NonNegativeInteger>)}\n* @throws {TypeError} must be a nonnegative integer or nonnegative integer array\n* @default 6\n*\n* @example\n* var plot = new Plot();\n* plot.yRugSize = [ 4, 6 ];\n*\n* @example\n* var plot = new Plot({\n*     'yRugSize': 4\n* });\n* var size = plot.yRugSize;\n* // returns [ 4 ]\n*/\ndefineProperty( Plot.prototype, 'yRugSize', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYRugSize,\n\t'get': getYRugSize\n});\n\n/**\n* Plot description.\n*\n* @name description\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default ''\n*\n* @example\n* var plot = new Plot();\n* plot.description = 'Average stock market index covering the last 100 years.';\n*\n* @example\n* var plot = new Plot({\n*     'description': 'A plot description.'\n* });\n* var desc = plot.description;\n* // returns 'A plot description.'\n*/\ndefineProperty( Plot.prototype, 'description', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setDescription,\n\t'get': getDescription\n});\n\n/**\n* Plot title.\n*\n* @name title\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default ''\n*\n* @example\n* var plot = new Plot();\n* plot.title = 'Time Series';\n*\n* @example\n* var plot = new Plot({\n*     'title': 'Time Series'\n* });\n* var t = plot.title;\n* // returns 'Time Series'\n*/\ndefineProperty( Plot.prototype, 'title', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setTitle,\n\t'get': getTitle\n});\n\n/**\n* x-axis label.\n*\n* @name xLabel\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default 'x'\n*\n* @example\n* var plot = new Plot();\n* plot.xLabel = 'time';\n*\n* @example\n* var plot = new Plot({\n*     'xLabel': 'time'\n* });\n* var xLabel = plot.xLabel;\n* // returns 'time'\n*/\ndefineProperty( Plot.prototype, 'xLabel', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setXLabel,\n\t'get': getXLabel\n});\n\n/**\n* y-axis label.\n*\n* @name yLabel\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a string primitive\n* @default 'y'\n*\n* @example\n* var plot = new Plot();\n* plot.yLabel = 'value';\n*\n* @example\n* var plot = new Plot({\n*     'yLabel': 'value'\n* });\n* var yLabel = plot.yLabel;\n* // returns 'value'\n*/\ndefineProperty( Plot.prototype, 'yLabel', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setYLabel,\n\t'get': getYLabel\n});\n\n/**\n* Plot engine.\n*\n* @name engine\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a recognized engine\n* @default 'svg'\n*\n* @example\n* var plot = new Plot();\n* plot.engine = 'svg';\n*\n* @example\n* var plot = new Plot({\n*     'engine': 'svg'\n* });\n* var engine = plot.engine;\n* // returns 'svg'\n*/\ndefineProperty( Plot.prototype, 'engine', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setEngine,\n\t'get': getEngine\n});\n\n/**\n* Rendering mode.\n*\n* ## Notes\n*\n* -   If `true`, an instance re-renders on each change event.\n*\n* @name autoRender\n* @memberof Plot.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var plot = new Plot({\n*     'autoRender': true\n* });\n*\n* var mode = plot.autoRender;\n* // returns true\n*/\ndefineProperty( Plot.prototype, 'autoRender', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoRender,\n\t'get': getAutoRender\n});\n\n/**\n* Plot render format.\n*\n* @name renderFormat\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a recognized format\n* @default 'vdom'\n*\n* @example\n* var plot = new Plot();\n* plot.renderFormat = 'vdom';\n*\n* @example\n* var plot = new Plot({\n*     'renderFormat': 'html'\n* });\n* var fmt = plot.renderFormat;\n* // returns 'html'\n*/\ndefineProperty( Plot.prototype, 'renderFormat', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setRenderFormat,\n\t'get': getRenderFormat\n});\n\n/**\n* Plot viewer.\n*\n* @name viewer\n* @memberof Plot.prototype\n* @type {string}\n* @throws {TypeError} must be a recognized viewer\n* @default 'none'\n*\n* @example\n* var plot = new Plot();\n* plot.viewer = 'none';\n*\n* @example\n* var plot = new Plot({\n*     'viewer': 'none'\n* });\n* var viewer = plot.viewer;\n* // returns 'none'\n*/\ndefineProperty( Plot.prototype, 'viewer', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setViewer,\n\t'get': getViewer\n});\n\n/**\n* Viewer mode. If `true`, an instance generates an updated view on each render event.\n*\n* @name autoView\n* @memberof Plot.prototype\n* @type {boolean}\n* @throws {TypeError} must be a boolean primitive\n* @default false\n*\n* @example\n* var plot = new Plot({\n*     'autoView': false\n* });\n*\n* var mode = plot.autoView;\n* // returns false\n*/\ndefineProperty( Plot.prototype, 'autoView', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'set': setAutoView,\n\t'get': getAutoView\n});\n\n/**\n* Expected graph width.\n*\n* @name graphWidth\n* @memberof Plot.prototype\n* @type {number}\n*\n* @example\n* var plot = new Plot({\n*     'width': 100,\n*     'paddingLeft': 10,\n*     'paddingRight': 10\n* });\n* var width = plot.graphWidth;\n* // returns 80\n*/\ndefineProperty( Plot.prototype, 'graphWidth', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getGraphWidth\n});\n\n/**\n* Expected graph height.\n*\n* @name graphHeight\n* @memberof Plot.prototype\n* @type {number}\n*\n* @example\n* var plot = new Plot({\n*     'height': 100,\n*     'paddingTop': 10,\n*     'paddingBottom': 20\n* });\n* var height = plot.graphHeight;\n* // returns 70\n*/\ndefineProperty( Plot.prototype, 'graphHeight', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getGraphHeight\n});\n\n/**\n* x-axis domain.\n*\n* @name xDomain\n* @memberof Plot.prototype\n* @type {Array}\n*\n* @example\n* var plot = new Plot({\n*     'xMin': 0,\n*     'xMax': 100\n* });\n* var domain = plot.xDomain;\n* // returns [ 0, 100 ]\n*/\ndefineProperty( Plot.prototype, 'xDomain', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXDomain\n});\n\n/**\n* y-axis domain.\n*\n* @name yDomain\n* @memberof Plot.prototype\n* @type {NumberArray}\n*\n* @example\n* var plot = new Plot({\n*     'yMin': 0,\n*     'yMax': 100\n* });\n* var domain = plot.yDomain;\n* // returns [ 0, 100 ]\n*/\ndefineProperty( Plot.prototype, 'yDomain', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYDomain\n});\n\n/**\n* x-axis range.\n*\n* @name xRange\n* @memberof Plot.prototype\n* @type {NumberArray}\n*\n* @example\n* var plot = new Plot({\n*     'width': 100,\n*     'paddingLeft': 10,\n*     'paddingRight': 10\n* });\n* var range = plot.xRange;\n* // returns [ 0, 80 ]\n*/\ndefineProperty( Plot.prototype, 'xRange', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXRange\n});\n\n/**\n* y-axis range.\n*\n* @name yRange\n* @memberof Plot.prototype\n* @type {NumberArray}\n*\n* @example\n* var plot = new Plot({\n*     'height': 100,\n*     'paddingTop': 10,\n*     'paddingBottom': 20\n* });\n* var range = plot.yRange;\n* // returns [ 70, 0 ]\n*/\ndefineProperty( Plot.prototype, 'yRange', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYRange\n});\n\n/**\n* Function to map values to x-axis coordinate values.\n*\n* @name xPos\n* @memberof Plot.prototype\n* @type {Function}\n*\n* @example\n* var plot = new Plot();\n* var xPos = plot.xPos;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'xPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getXPos\n});\n\n/**\n* Function to map values to y-axis coordinate values.\n*\n* @name yPos\n* @memberof Plot.prototype\n* @type {Function}\n*\n* @example\n* var plot = new Plot();\n* var yPos = plot.yPos;\n* // returns <Function>\n*/\ndefineProperty( Plot.prototype, 'yPos', {\n\t'configurable': false,\n\t'enumerable': true,\n\t'get': getYPos\n});\n\n/**\n* Renders a plot.\n*\n* @name render\n* @memberof Plot.prototype\n* @type {Function}\n* @param {string} [format] - render format\n* @throws {TypeError} must provide a recognized format\n* @returns {(VTree|string)} virtual tree or string\n*\n* @example\n* var plot = new Plot();\n* plot.x = [ [ 1, 2, 3 ] ];\n* plot.y = [ [ 1, 0, 1 ] ];\n*\n* var out = plot.render();\n*\n* @example\n* var plot = new Plot();\n* plot.x = [ [ 1, 2, 3 ] ];\n* plot.y = [ [ 1, 0, 1 ] ];\n*\n* var out = plot.render( 'html' );\n*/\nsetReadOnly( Plot.prototype, 'render', render );\n\n/**\n* Generates a plot view.\n*\n* @name view\n* @memberof Plot.prototype\n* @type {Function}\n* @param {string} [viewer]\n* @throws {TypeError} must provide a recognized viewer\n*\n* @example\n* var plot = new Plot();\n* plot.x = [ [ 1, 2, 3 ] ];\n* plot.y = [ [ 1, 0, 1 ] ];\n*\n* plot.view( 'stdout' );\n*/\nsetReadOnly( Plot.prototype, 'view', viewMethod );\n\n\n// EXPORTS //\nexport default Plot;\n","import __var_0__ from '@stdlib/assert/is-plain-object';\nimport __var_1__ from '@stdlib/utils/copy';\nimport __var_2__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isObject = __var_0__;\nvar copy = __var_1__;\nvar Plot = __var_2__;\n\n\n// MAIN //\n\n/**\n* Returns a reusable function for generating plots.\n*\n* @param {Options} [options] - factory options\n* TODO\n* @throws {TypeError} must provide an object\n* @returns {Function} plot function\n*\n* @example\n* var opts = {\n*     'width': 600,\n*     'height': 400\n* };\n* var plot = factory( opts );\n* var h1 = plot( [[1,2,3]], [[1,0,1]] );\n* var h2 = plot( [[4,5,6]], [[0,1,0]] );\n*/\nfunction factory( options ) {\n\tvar opts;\n\tif ( arguments.length ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. `options` argument must be a plain object. Value: `' + options + '`' );\n\t\t}\n\t\topts = copy( options );\n\t} else {\n\t\topts = {};\n\t}\n\treturn plot;\n\n\t/**\n\t* Creates a plot.\n\t*\n\t* @private\n\t* @param {Array} [x] - x-values\n\t* @param {Array} [y] - y-values\n\t* @throws {TypeError} must provide valid options\n\t* @returns {Plot} plot instance\n\t*/\n\tfunction plot( x, y ) {\n\t\tif ( arguments.length === 2 ) {\n\t\t\treturn new Plot( x, y, opts );\n\t\t}\n\t\treturn new Plot( opts );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a 2-dimensional plot.\n*\n* @module @stdlib/plot/ctor\n*\n* @example\n* var Plot = require( '@stdlib/plot/ctor' );\n*\n* var x = [ 1, 2, 3 ];\n* var y = [ 1, 0, 1 ];\n*\n* var p = new Plot( [ x ], [ y ] );\n*\n* @example\n* var Plot = require( '@stdlib/plot/ctor' );\n*\n* var opts = {\n*     'width': 600,\n*     'height': 400\n* };\n* var myPlot = Plot.factory( opts );\n*\n* var h1 = myPlot( [[1,2,3]], [[1,0,1]] );\n* var h2 = myPlot( [[4,5,6]], [[0,1,0]] );\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar Plot = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( Plot, 'factory', factory );\n\n\n// EXPORTS //\nexport default Plot;\n"]}