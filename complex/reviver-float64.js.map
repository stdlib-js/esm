{"version":3,"sources":["@stdlib/complex/reviver-float64/lib/reviver.js","@stdlib/complex/reviver-float64/lib/index.js"],"names":["isNumber","__var_0__","isPrimitive","Complex128","__var_1__","reviver","key","value","type","re","im"],"mappings":"oEAuBA,IAAIA,EAAWC,EAAUC,YACrBC,EAAaC,EAoBjB,SAASC,EAASC,EAAKC,GACtB,OACCA,GACAA,EAAMC,MACS,eAAfD,EAAMC,MACNR,EAAUO,EAAME,KAChBT,EAAUO,EAAMG,IAET,IAAIP,EAAYI,EAAME,GAAIF,EAAMG,IAEjCH,ECjBL,IAACF,EAAUJ","sourcesContent":["import __var_0__ from '@stdlib/assert/is-number';\nimport __var_1__ from '@stdlib/complex/float64';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNumber = __var_0__.isPrimitive;\nvar Complex128 = __var_1__;\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized 128-bit complex number.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Complex128)} value or 128-bit complex number\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n*\n* var str = '{\"type\":\"Complex128\",\"re\":5,\"im\":3}';\n*\n* var z = parseJSON( str, reviver );\n* // returns <Complex128>\n*/\nfunction reviver( key, value ) {\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tvalue.type === 'Complex128' &&\n\t\tisNumber( value.re ) &&\n\t\tisNumber( value.im )\n\t) {\n\t\treturn new Complex128( value.re, value.im );\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\nexport default reviver;\n","import __var_0__ from './reviver.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized 128-bit complex number.\n*\n* @module @stdlib/complex/reviver-float64\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n* var reviver = require( '@stdlib/complex/reviver-float64' );\n*\n* var str = '{\"type\":\"Complex128\",\"re\":5,\"im\":3}';\n*\n* var z = parseJSON( str, reviver );\n* // returns <Complex128>\n*/\n\n// MODULES //\nvar reviver = __var_0__;\n\n\n// EXPORTS //\nexport default reviver;\n"]}