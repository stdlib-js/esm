{"version":3,"sources":["@stdlib/complex/reim/lib/reim.js","@stdlib/complex/reim/lib/index.js"],"names":["Float64Array","__var_0__","Float32Array","__var_1__","reim","z","out","BYTES_PER_ELEMENT","re","im"],"mappings":"0EAuBA,IAAIA,EAAeC,EACfC,EAAeC,EA2BnB,SAASC,EAAMC,GACd,IAAIC,EAQJ,OANCA,EAD4B,IAAxBD,EAAEE,kBACA,IAAIL,EAAc,GAElB,IAAIF,EAAc,IAEpB,GAAMK,EAAEG,GACbF,EAAK,GAAMD,EAAEI,GACNH,ECdL,IAACF,EAAOH","sourcesContent":["import __var_0__ from '@stdlib/array/float64';\nimport __var_1__ from '@stdlib/array/float32';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar Float64Array = __var_0__;\nvar Float32Array = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns the real and imaginary components of a complex number.\n*\n* @param {Complex} z - complex number\n* @returns {(Float64Array|Float32Array)} real and imaginary components\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var out = reim( z );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var out = reim( z );\n* // returns <Float32Array>[ 5.0, 3.0 ]\n*/\nfunction reim( z ) {\n\tvar out;\n\tif ( z.BYTES_PER_ELEMENT === 4 ) {\n\t\tout = new Float32Array( 2 );\n\t} else {\n\t\tout = new Float64Array( 2 );\n\t}\n\tout[ 0 ] = z.re;\n\tout[ 1 ] = z.im;\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default reim;\n","import __var_0__ from './reim.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the real and imaginary components of a complex number.\n*\n* @module @stdlib/complex/reim\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var reim = require( '@stdlib/complex/reim' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var out = reim( z );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var reim = require( '@stdlib/complex/reim' );\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var out = reim( z );\n* // returns <Float32Array>[ 5.0, 3.0 ]\n*/\n\n// MODULES //\nvar reim = __var_0__;\n\n\n// EXPORTS //\nexport default reim;\n"]}