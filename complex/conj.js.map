{"version":3,"sources":["@stdlib/complex/conj/lib/conj.js","@stdlib/complex/conj/lib/index.js"],"names":["conj","z","constructor","re","im","__var_0__"],"mappings":"AAmCA,SAASA,EAAMC,GACd,OAAO,IAAIA,EAAEC,YAAaD,EAAEE,IAAKF,EAAEG,ICCjC,IAACJ,EAAOK","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the complex conjugate of a complex number.\n*\n* @param {Complex} z - complex number\n* @returns {Complex} complex conjugate\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var v = conj( z );\n* // returns <Complex128>\n*/\nfunction conj( z ) {\n\treturn new z.constructor( z.re, -z.im );\n}\n\n\n// EXPORTS //\nexport default conj;\n","import __var_0__ from './conj.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the complex conjugate of a complex number.\n*\n* @module @stdlib/complex/conj\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var conj = require( '@stdlib/complex/conj' );\n*\n* var z = new Complex128( 5.0, 3.0 );\n*\n* var v = conj( z );\n* // returns <Complex128>\n*/\n\n// MODULES //\nvar conj = __var_0__;\n\n\n// EXPORTS //\nexport default conj;\n"]}