{"version":3,"sources":["@stdlib/utils/object-inverse/lib/object_inverse.js","@stdlib/utils/object-inverse/lib/index.js"],"names":["objectKeys","__var_0__","isArray","__var_1__","isObject","__var_2__","isObjectLike","__var_3__","isBoolean","__var_4__","isPrimitive","hasOwnProp","__var_5__","invert","obj","opts","keys","len","key","val","out","v","i","allowDupes","TypeError","arguments","length","duplicates","push"],"mappings":"mPA2BA,IAAIA,EAAaC,EACbC,EAAUC,EACVC,EAAWC,EACXC,EAAeC,EACfC,EAAYC,EAAUC,YACtBC,EAAaC,EAyCjB,SAASC,EAAQC,EAAKC,GACrB,IACIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPAC,GAAa,EAQjB,IAAMjB,EAAcQ,GACnB,MAAM,IAAIU,UAAW,iEAAmEV,EAAM,MAE/F,GAAKW,UAAUC,OAAS,EAAI,CAC3B,IAAMtB,EAAUW,GACf,MAAM,IAAIS,UAAW,kEAAoET,EAAO,MAEjG,GAAKJ,EAAYI,EAAM,gBACtBQ,EAAaR,EAAKY,YACZnB,EAAWe,IAChB,MAAM,IAAIC,UAAW,+EAAiFD,EAAa,MAOtH,GAFAN,GADAD,EAAOhB,EAAYc,IACRY,OACXN,EAAM,GACDG,EACJ,IAAMD,EAAI,EAAGA,EAAIL,EAAKK,IAErBH,EAAML,EADNI,EAAMF,EAAMM,IAENX,EAAYS,EAAKD,IAIvBE,EAAID,EAAKD,GACJjB,EAASmB,GACbD,EAAKD,GAAMS,KAAMV,GAEjBE,EAAKD,GAAQ,CAAEE,EAAGH,IAPlBE,EAAKD,GAAQD,OAWf,IAAMI,EAAI,EAAGA,EAAIL,EAAKK,IAErBF,EAAKN,EADLI,EAAMF,EAAMM,KACQJ,EAGtB,OAAOE,ECnEL,IAACP,EAASZ","sourcesContent":["import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/assert/is-array';\nimport __var_2__ from '@stdlib/assert/is-plain-object';\nimport __var_3__ from '@stdlib/assert/is-object-like';\nimport __var_4__ from '@stdlib/assert/is-boolean';\nimport __var_5__ from '@stdlib/assert/has-own-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar isArray = __var_1__;\nvar isObject = __var_2__;\nvar isObjectLike = __var_3__;\nvar isBoolean = __var_4__.isPrimitive;\nvar hasOwnProp = __var_5__;\n\n\n// MAIN //\n\n/**\n* Inverts an object, such that keys become values and values become keys.\n*\n* @param {ObjectLike} obj - input object\n* @param {Options} [opts] - function options\n* @param {boolean} [opts.duplicates=true] - boolean indicating whether to store duplicate keys\n* @throws {TypeError} first argument must be object-like\n* @throws {TypeError} second argument must an an object\n* @throws {TypeError} must provide valid options\n* @returns {Object} inverted object\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'boop'\n* });\n* // returns { 'beep': 'a', 'boop': 'b' }\n*\n* @example\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'beep'\n* });\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* @example\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* var out = invert( obj, {\n*     'duplicates': false\n* });\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\nfunction invert( obj, opts ) {\n\tvar allowDupes = true;\n\tvar keys;\n\tvar len;\n\tvar key;\n\tvar val;\n\tvar out;\n\tvar v;\n\tvar i;\n\tif ( !isObjectLike( obj ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be object-like. Value: `' + obj + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Options arguments must be an object. Value: `' + opts + '`.' );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'duplicates' ) ) {\n\t\t\tallowDupes = opts.duplicates;\n\t\t\tif ( !isBoolean( allowDupes ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. `duplicates` option must be a boolean primitive. Option: `' + allowDupes + '`.' );\n\t\t\t}\n\t\t}\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tout = {};\n\tif ( allowDupes ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tval = obj[ key ];\n\t\t\tif ( !hasOwnProp( out, val ) ) {\n\t\t\t\tout[ val ] = key;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tv = out[ val ];\n\t\t\tif ( isArray( v ) ) {\n\t\t\t\tout[ val ].push( key );\n\t\t\t} else {\n\t\t\t\tout[ val ] = [ v, key ];\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tkey = keys[ i ];\n\t\t\tout[ obj[ key ] ] = key;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default invert;\n","import __var_0__ from './object_inverse.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invert an object, such that keys become values and values become keys.\n*\n* @module @stdlib/utils/object-inverse\n*\n* @example\n* var invert = require( '@stdlib/utils/object-inverse' );\n*\n* var out = invert({\n*     'a': 'beep',\n*     'b': 'boop'\n* });\n* // returns { 'beep': 'a', 'boop': 'b' }\n*\n* out = invert({\n*     'a': 'beep',\n*     'b': 'beep'\n* });\n* // returns { 'beep': [ 'a', 'b' ] }\n*\n* var obj = {};\n* obj.a = 'beep';\n* obj.b = 'boop';\n* obj.c = 'beep'; // inserted after `a`\n*\n* out = invert( obj, {\n*     'duplicates': false\n* });\n* // returns { 'beep': 'c', 'boop': 'b' }\n*/\n\n// MODULES //\nvar invert = __var_0__;\n\n\n// EXPORTS //\nexport default invert;\n"]}