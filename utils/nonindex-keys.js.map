{"version":3,"sources":["@stdlib/utils/nonindex-keys/lib/main.js","@stdlib/utils/nonindex-keys/lib/index.js"],"names":["objectKeys","__var_0__","RE_INTEGER_INDEX","nonIndexKeys","obj","keys","len","N","i","j","length","test"],"mappings":"yBAsBA,IAAIA,EAAaC,EAKbC,EAAmB,WAyBvB,SAASC,EAAcC,GACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAQJ,IAJAF,EADAD,GADAD,EAAOL,EAAYI,IACRM,OAEXD,EAAI,EAGED,EAAI,EAAGA,EAAIF,EAAKE,IAChBN,EAAiBS,KAAMN,EAAMG,IACjCD,GAAK,GAELF,EAAMI,GAAMJ,EAAMG,GAClBC,GAAK,GAIP,OADAJ,EAAKK,OAASH,EACPF,EC9BL,IAACF,EAAeF","sourcesContent":["import __var_0__ from '@stdlib/utils/keys';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\n\n\n// VARIABLES //\n\nvar RE_INTEGER_INDEX = /^[0-9]+$/;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names which are not integer indices.\n*\n* @param {ObjectLike} obj - input object\n* @returns {Array} key array\n*\n* @example\n* function Foo() {\n*     this[ 0 ] = 3.14;\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var keys = nonIndexKeys( obj );\n* // e.g., returns [ 'beep' ]\n*/\nfunction nonIndexKeys( obj ) {\n\tvar keys;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tN = len;\n\tj = 0;\n\n\t// Compress the list of keys by using a lagging index and moving non-integer indices to earlier positions in the array...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( RE_INTEGER_INDEX.test( keys[ i ] ) ) {\n\t\t\tN -= 1;\n\t\t} else {\n\t\t\tkeys[ j ] = keys[ i ];\n\t\t\tj += 1;\n\t\t}\n\t}\n\tkeys.length = N;\n\treturn keys;\n}\n\n\n// EXPORTS //\nexport default nonIndexKeys;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable property names which are not integer indices.\n*\n* @module @stdlib/utils/nonindex-keys\n*\n* @example\n* var nonIndexKeys = require( '@stdlib/utils/nonindex-keys' );\n*\n* function Foo() {\n*     this[ 0 ] = 3.14;\n*     this.beep = 'boop';\n*     return this;\n* }\n*\n* Foo.prototype.foo = 'bar';\n*\n* var obj = new Foo();\n*\n* var keys = nonIndexKeys( obj );\n* // e.g., returns [ 'beep' ]\n*/\n\n// MODULES //\nvar nonIndexKeys = __var_0__;\n\n\n// EXPORTS //\nexport default nonIndexKeys;\n"]}