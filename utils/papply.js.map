{"version":3,"sources":["@stdlib/utils/papply/lib/papply.js","@stdlib/utils/papply/lib/index.js"],"names":["isFunction","__var_0__","papply","fcn","pargs","i","TypeError","Array","arguments","length","papplied","args","j","slice","push","apply"],"mappings":"0CAsBA,IAAIA,EAAaC,EAuBjB,SAASC,EAAQC,GAChB,IAAIC,EACAC,EACJ,IAAML,EAAYG,GACjB,MAAM,IAAIG,UAAW,gEAAkEH,EAAM,MAG9F,IADAC,EAAQ,IAAIG,MAAOC,UAAUC,OAAO,GAC9BJ,EAAI,EAAGA,EAAIG,UAAUC,OAAQJ,IAClCD,EAAOC,EAAE,GAAMG,UAAWH,GAE3B,OAAOK,EASP,SAASA,IACR,IAAIC,EACAC,EAEJ,IADAD,EAAOP,EAAMS,QACPD,EAAI,EAAGA,EAAIJ,UAAUC,OAAQG,IAClCD,EAAKG,KAAMN,UAAWI,IAEvB,OAAOT,EAAIY,MAAO,KAAMJ,IC/BvB,IAACT,EAASD","sourcesContent":["import __var_0__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns a function of smaller arity by partially applying arguments.\n*\n* @param {Function} fcn - function to partially apply\n* @param {...*} [args] - arguments to partially apply\n* @throws {TypeError} first argument must be a function\n* @returns {Function} partially applied function\n*\n* @example\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var add2 = papply( add, 2 );\n*\n* var sum = add2( 3 );\n* // returns 5\n*/\nfunction papply( fcn ) {\n\tvar pargs;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be a function. Value: `' + fcn + '`.' );\n\t}\n\tpargs = new Array( arguments.length-1 );\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\tpargs[ i-1 ] = arguments[ i ];\n\t}\n\treturn papplied;\n\n\t/**\n\t* Partially applied function.\n\t*\n\t* @private\n\t* @param {...*} [args] - function arguments\n\t* @returns {*} partially applied function result\n\t*/\n\tfunction papplied() {\n\t\tvar args;\n\t\tvar j;\n\t\targs = pargs.slice();\n\t\tfor ( j = 0; j < arguments.length; j++ ) {\n\t\t\targs.push( arguments[ j ] );\n\t\t}\n\t\treturn fcn.apply( null, args );\n\t}\n}\n\n\n// EXPORTS //\nexport default papply;\n","import __var_0__ from './papply.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Partially apply function arguments.\n*\n* @module @stdlib/utils/papply\n*\n* @example\n* var papply = require( '@stdlib/utils/papply' );\n*\n* function add( x, y ) {\n*     return x + y;\n* }\n*\n* var add2 = papply( add, 2 );\n*\n* var sum = add2( 3 );\n* // returns 5\n*/\n\n// MODULES //\nvar papply = __var_0__;\n\n\n// EXPORTS //\nexport default papply;\n"]}