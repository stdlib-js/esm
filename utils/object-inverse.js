// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./keys.js";import e from"./../assert/is-array.js";import t from"./../assert/is-plain-object.js";import i from"./../assert/is-object-like.js";import o from"./../assert/is-boolean.js";import s from"./../assert/has-own-property.js";var a=r,n=e,m=t,p=i,l=o.isPrimitive,u=s;function f(r,e){var t,i,o,s,f,j,b,c=!0;if(!p(r))throw new TypeError("invalid argument. First argument must be object-like. Value: `"+r+"`.");if(arguments.length>1){if(!m(e))throw new TypeError("invalid argument. Options arguments must be an object. Value: `"+e+"`.");if(u(e,"duplicates")&&(c=e.duplicates,!l(c)))throw new TypeError("invalid argument. `duplicates` option must be a boolean primitive. Option: `"+c+"`.")}if(i=(t=a(r)).length,f={},c)for(b=0;b<i;b++)s=r[o=t[b]],u(f,s)?(j=f[s],n(j)?f[s].push(o):f[s]=[j,o]):f[s]=o;else for(b=0;b<i;b++)f[r[o=t[b]]]=o;return f}var j=f;export default j;
//# sourceMappingURL=object-inverse.js.map