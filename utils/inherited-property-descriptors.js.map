{"version":3,"sources":["@stdlib/utils/inherited-property-descriptors/lib/main.js","@stdlib/utils/inherited-property-descriptors/lib/index.js"],"names":["MAX_SAFE_INTEGER","__var_0__","isPositiveInteger","__var_1__","isPrimitive","getOwnPropertyDescriptors","__var_2__","getOwnPropertySymbols","__var_3__","getPrototypeOf","__var_4__","objectKeys","__var_5__","defineProperty","__var_6__","hasOwnProp","__var_7__","inheritedPropertyDescriptors","value","level","desc","keys","obj","tmp","N","n","i","arguments","length","TypeError","configurable","enumerable","writable","main"],"mappings":"gVA6BA,IAAIA,EAAmBC,EACnBC,EAAoBC,EAAUC,YAC9BC,EAA4BC,EAC5BC,EAAwBC,EACxBC,EAAiBC,EACjBC,EAAaC,EACbC,EAAiBC,EACjBC,EAAaC,EAqBjB,SAASC,EAA8BC,EAAOC,GAC7C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKC,UAAUC,OAAS,EAAI,CAC3B,IAAM1B,EAAmBiB,GACxB,MAAM,IAAIU,UAAW,yEAA2EV,EAAQ,MAEzGK,EAAIL,OAEJK,EAAIxB,EAEL,GAAKkB,MAAAA,EACJ,MAAO,GAQR,IALAI,EAAMb,EAAgBS,GAGtBE,EAAO,GACPK,EAAI,EACIH,GAAOG,GAAKD,GAAI,CAGvB,IAFAD,EAAMlB,EAA2BiB,GACjCD,EAAOV,EAAYY,GACbG,EAAI,EAAGA,EAAIL,EAAKO,OAAQF,IAEvBX,EAAYK,EAAMC,EAAMK,KAE7Bb,EAAgBO,EAAMC,EAAMK,GAAK,CAChCI,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZd,MAASK,EAAKF,EAAMK,MAKvB,IADAL,EAAOd,EAAuBgB,GACxBG,EAAI,EAAGA,EAAIL,EAAKO,OAAQF,IAEvBX,EAAYK,EAAMC,EAAMK,KAE7Bb,EAAgBO,EAAMC,EAAMK,GAAK,CAChCI,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZd,MAASK,EAAKF,EAAMK,MAIvBJ,EAAMb,EAAgBa,GACtBG,GAAK,EAEN,OAAOL,EChFL,IAACa,EAAOhC","sourcesContent":["import __var_0__ from '@stdlib/constants/math/float64-max-safe-integer';\nimport __var_1__ from '@stdlib/assert/is-positive-integer';\nimport __var_2__ from '@stdlib/utils/property-descriptors';\nimport __var_3__ from '@stdlib/utils/property-symbols';\nimport __var_4__ from '@stdlib/utils/get-prototype-of';\nimport __var_5__ from '@stdlib/utils/keys';\nimport __var_6__ from '@stdlib/utils/define-property';\nimport __var_7__ from '@stdlib/assert/has-own-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar MAX_SAFE_INTEGER = __var_0__;\nvar isPositiveInteger = __var_1__.isPrimitive;\nvar getOwnPropertyDescriptors = __var_2__;\nvar getOwnPropertySymbols = __var_3__;\nvar getPrototypeOf = __var_4__;\nvar objectKeys = __var_5__;\nvar defineProperty = __var_6__;\nvar hasOwnProp = __var_7__;\n\n\n// MAIN //\n\n/**\n* Returns an object's inherited property descriptors.\n*\n* ## Notes\n*\n* -   In contrast to the built-in `Object.getOwnPropertyDescriptors()`, this function returns an empty object if provided `undefined` or `null`, rather than throwing an error.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Object} inherited property descriptors\n*\n* @example\n* var desc = inheritedPropertyDescriptors( [] );\n* // returns {...}\n*/\nfunction inheritedPropertyDescriptors( value, level ) { // eslint-disable-line id-length\n\tvar desc;\n\tvar keys;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a positive integer. Value: `' + level + '`.' );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn {};\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all property descriptors...\n\tdesc = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyDescriptors( obj );\n\t\tkeys = objectKeys( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a property name always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tkeys = getOwnPropertySymbols( tmp );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t// The first encountered property descriptor for a symbol property always takes precedence...\n\t\t\tif ( !hasOwnProp( desc, keys[ i ] ) ) {\n\t\t\t\t// The following is equivalent to `desc[ keys[i] ] = {...}`, but accounts for the possibility of a \"poisoned\" `Object` prototype (i.e., an `Object.prototype` having a property with a setter which throws).\n\t\t\t\tdefineProperty( desc, keys[ i ], {\n\t\t\t\t\t'configurable': true,\n\t\t\t\t\t'enumerable': true,\n\t\t\t\t\t'writable': true,\n\t\t\t\t\t'value': tmp[ keys[ i ] ]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\treturn desc;\n}\n\n\n// EXPORTS //\nexport default inheritedPropertyDescriptors;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an object's inherited property descriptors.\n*\n* @module @stdlib/utils/inherited-property-descriptors\n*\n* @example\n* var inheritedPropertyDescriptors = require( '@stdlib/utils/inherited-property-descriptors' );\n*\n* var desc = inheritedPropertyDescriptors( [] );\n* // returns {...}\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}