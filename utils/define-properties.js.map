{"version":3,"sources":["@stdlib/utils/define-properties/lib/builtin.js","@stdlib/utils/define-properties/lib/polyfill.js","@stdlib/utils/define-properties/lib/index.js"],"names":["defineProperties","Object","isObject","__var_0__","objectKeys","__var_1__","defineProperty","__var_2__","obj","props","keys","name","i","TypeError","length","hasDefinePropertiesSupport","builtin","polyfill","defineProperties$3"],"mappings":"iKAmDA,IAAIA,EAAmBC,OAAOD,iBC3B1BE,EAAWC,EACXC,EAAaC,EACbC,EAAiBC,EA+BrB,SAASP,EAAkBQ,EAAKC,GAC/B,IAAIC,EACAC,EACAC,EAEJ,IAAMV,EAAUM,GACf,MAAM,IAAIK,UAAW,+DAAiEL,EAAM,MAE7F,IAAMN,EAAUO,GACf,MAAM,IAAII,UAAW,wFAA0FJ,EAAQ,MAGxH,IADAC,EAAON,EAAYK,GACbG,EAAI,EAAGA,EAAIF,EAAKI,OAAQF,IAC7BD,EAAOD,EAAME,GACbN,EAAgBE,EAAKG,EAAMF,EAAOE,IAEnC,OAAOH,ECrBR,IAOIR,EAPAe,EAA6BZ,EAC7Ba,EAAUX,EACVY,EAAWV,EAcfW,EAPClB,EADIe,IACeC,EAEAC","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) object properties.\n*\n* @name defineProperties\n* @type {Function}\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nvar defineProperties = Object.defineProperties;\n\n\n// EXPORTS //\nexport default defineProperties;\n","import __var_0__ from '@stdlib/assert/is-object';\nimport __var_1__ from '@stdlib/utils/keys';\nimport __var_2__ from '@stdlib/utils/define-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isObject = __var_0__;\nvar objectKeys = __var_1__;\nvar defineProperty = __var_2__;\n\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) properties.\n*\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nfunction defineProperties( obj, props ) {\n\tvar keys;\n\tvar name;\n\tvar i;\n\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `' + obj + '`.' );\n\t}\n\tif ( !isObject( props ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be an object of property descriptors. Value: `' + props + '`.' );\n\t}\n\tkeys = objectKeys( props );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tname = keys[ i ];\n\t\tdefineProperty( obj, name, props[ name ] );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\nexport default defineProperties;\n","import __var_0__ from '@stdlib/assert/has-define-properties-support'; // eslint-disable-line id-length\nimport __var_1__ from './builtin.js';\nimport __var_2__ from './polyfill.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (and/or modify) properties.\n*\n* @module @stdlib/utils/define-properties\n*\n* @example\n* var defineProperties = require( '@stdlib/utils/define-properties' );\n*\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar',\n*         'writable': false,\n*         'configurable': false,\n*         'enumerable': true\n*     },\n*     'baz': {\n*         'value': 13\n*     }\n* });\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.log( err.message );\n* }\n*/\n\n// MODULES //\nvar hasDefinePropertiesSupport = __var_0__;\nvar builtin = __var_1__;\nvar polyfill = __var_2__;\n\n\n// MAIN //\n\nvar defineProperties;\nif ( hasDefinePropertiesSupport() ) {\n\tdefineProperties = builtin;\n} else {\n\tdefineProperties = polyfill;\n}\n\n\n// EXPORTS //\nexport default defineProperties;\n"]}