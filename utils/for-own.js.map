{"version":3,"sources":["@stdlib/utils/for-own/lib/for_own.js","@stdlib/utils/for-own/lib/index.js"],"names":["objectKeys","__var_0__","isFunction","__var_1__","forOwn","obj","fcn","thisArg","keys","len","k","i","TypeError","length","call"],"mappings":"mEAuBA,IAAIA,EAAaC,EACbC,EAAaC,EAkCjB,SAASC,EAAQC,EAAKC,EAAKC,GAC1B,IAAIC,EAEAC,EACAC,EACAC,EACJ,GAAoB,iBAARN,GAA4B,OAARA,EAC/B,MAAM,IAAIO,UAAW,+DAA+DP,EAAI,MAEzF,IAAMH,EAAYI,GACjB,MAAM,IAAIM,UAAW,iEAAiEN,EAAI,MAI3F,IADAG,GADAD,EAAOR,EAAYK,IACRQ,OACLF,EAAI,EAAGA,EAAIF,EAAKE,IAGrB,GAFAD,EAAIF,EAAMG,IAEI,IADPL,EAAIQ,KAAMP,EAASF,EAAKK,GAAKA,EAAGL,GAEtC,OAAOA,EAGT,OAAOA,ECnCL,IAACD,EAASH","sourcesContent":["import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar isFunction = __var_1__;\n\n\n// MAIN //\n\n/**\n* Invokes a function once for each own enumerable property of an object.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n*\n*\n* @param {Object} obj - input object\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} obj - input object\n*\n* @example\n* function log( v, key ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3,\n*     'd': 4\n* };\n*\n* forOwn( obj, log );\n*/\nfunction forOwn( obj, fcn, thisArg ) {\n\tvar keys;\n\tvar bool;\n\tvar len;\n\tvar k;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `'+obj+'`.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+fcn+'`.' );\n\t}\n\tkeys = objectKeys( obj );\n\tlen = keys.length;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tk = keys[ i ];\n\t\tbool = fcn.call( thisArg, obj[ k ], k, obj );\n\t\tif ( bool === false ) {\n\t\t\treturn obj;\n\t\t}\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\nexport default forOwn;\n","import __var_0__ from './for_own.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Invoke a function once for each own enumerable property of an object.\n*\n* @module @stdlib/utils/for-own\n*\n* @example\n* var forOwn = require( '@stdlib/utils/for-own' );\n*\n* function log( v, key ) {\n*     console.log( '%s: %d', key, v );\n* }\n*\n* var obj = {\n*     'a': 1,\n*     'b': 2,\n*     'c': 3,\n*     'd': 4\n* };\n*\n* forOwn( obj, log );\n*/\n\n// MODULES //\nvar forOwn = __var_0__;\n\n\n// EXPORTS //\nexport default forOwn;\n"]}