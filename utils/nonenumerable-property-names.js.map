{"version":3,"sources":["@stdlib/utils/nonenumerable-property-names/lib/main.js","@stdlib/utils/nonenumerable-property-names/lib/index.js"],"names":["getOwnPropertyNames","__var_0__","isNonEnumerableProperty","__var_1__","nonEnumerablePropertyNames","value","names","i","n","Object","length","main"],"mappings":"2FAuBA,IAAIA,EAAsBC,EACtBC,EAA0BC,EA0B9B,SAASC,EAA4BC,GACpC,IAAIC,EACAC,EACAC,EAEJ,GAAKH,MAAAA,EACJ,MAAO,GAIR,IAFAC,EAAQN,EAAqBS,OAAQJ,IACrCG,EAAI,EACED,EAAI,EAAGA,EAAID,EAAMI,OAAQH,IACzBL,EAAyBG,EAAOC,EAAOC,MAC3CD,EAAOE,GAAMF,EAAOC,GACpBC,GAAK,GAKP,OAFAF,EAAMI,OAASF,EAERF,ECxBL,IAACK,EAAOV","sourcesContent":["import __var_0__ from '@stdlib/utils/property-names';\nimport __var_1__ from '@stdlib/assert/is-nonenumerable-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar getOwnPropertyNames = __var_0__;\nvar isNonEnumerableProperty = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own non-enumerable property names.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own non-enumerable property names\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {};\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = nonEnumerablePropertyNames( obj );\n* // returns [ 'beep' ]\n*/\nfunction nonEnumerablePropertyNames( value ) { // eslint-disable-line id-length\n\tvar names;\n\tvar i;\n\tvar n;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\tnames = getOwnPropertyNames( Object( value ) );\n\tn = 0;\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tif ( isNonEnumerableProperty( value, names[ i ] ) ) {\n\t\t\tnames[ n ] = names[ i ];\n\t\t\tn += 1;\n\t\t}\n\t}\n\tnames.length = n;\n\n\treturn names;\n}\n\n\n// EXPORTS //\nexport default nonEnumerablePropertyNames;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own non-enumerable property names.\n*\n* @module @stdlib/utils/nonenumerable-property-names\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var nonEnumerablePropertyNames = require( '@stdlib/utils/nonenumerable-property-names' );\n*\n* var obj = {};\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'boop'\n* });\n*\n* var keys = nonEnumerablePropertyNames( obj );\n* // returns [ 'beep' ]\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}