{"version":3,"sources":["@stdlib/utils/map-keys/lib/map_keys.js","@stdlib/utils/map-keys/lib/index.js"],"names":["isFunction","__var_0__","hasOwnProp","__var_1__","mapKeys","obj","transform","out","key","v","TypeError"],"mappings":"yFAuBA,IAAIA,EAAaC,EACbC,EAAaC,EAiCjB,SAASC,EAASC,EAAKC,GACtB,IAAIC,EACAC,EACAC,EACJ,GAAoB,iBAARJ,GAA4B,OAARA,EAC/B,MAAM,IAAIK,UAAW,+DAA+DL,EAAI,MAEzF,IAAML,EAAYM,GACjB,MAAM,IAAII,UAAW,iEAAiEJ,EAAU,MAGjG,IAAME,KADND,EAAM,GACOF,EACPH,EAAYG,EAAKG,KAGrBD,EADAC,EAAMF,EAAWE,EADjBC,EAAIJ,EAAKG,GACgBH,IACZI,GAGf,OAAOF,EChCL,IAACH,EAAUH","sourcesContent":["import __var_0__ from '@stdlib/assert/is-function';\nimport __var_1__ from '@stdlib/assert/has-own-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\nvar hasOwnProp = __var_1__;\n\n\n// MAIN //\n\n/**\n* Maps keys from one object to a new object having the same values.\n*\n* ## Notes\n*\n* -   Iteration order is **not** guaranteed.\n* -   We need to cache an object value to prevent the edge case where, during the invocation of the transform function, the value corresponding to a particular key is swapped for some other value. For some, that might be a feature; here, we take the stance that one should be less clever.\n*\n*\n* @param {Object} obj - source object\n* @param {Function} transform - transform function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function transform( key, value ) {\n*     return key + value;\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = mapKeys( obj1, transform );\n* // returns { 'a1': 1, 'b2': 2 }\n*/\nfunction mapKeys( obj, transform ) {\n\tvar out;\n\tvar key;\n\tvar v;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `'+obj+'`.' );\n\t}\n\tif ( !isFunction( transform ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+transform+'`.' );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tv = obj[ key ];\n\t\t\tkey = transform( key, v, obj );\n\t\t\tout[ key ] = v;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default mapKeys;\n","import __var_0__ from './map_keys.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Map keys from one object to a new object having the same values.\n*\n* @module @stdlib/utils/map-keys\n*\n* @example\n* var mapKeys = require( '@stdlib/utils/map-keys' );\n*\n* function transform( key, value ) {\n*     return key + value;\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = mapKeys( obj1, transform );\n* // returns { 'a1': 1, 'b2': 2 }\n*/\n\n// MODULES //\nvar mapKeys = __var_0__;\n\n\n// EXPORTS //\nexport default mapKeys;\n"]}