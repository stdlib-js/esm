{"version":3,"sources":["@stdlib/utils/inherited-writable-property-names/lib/main.js","@stdlib/utils/inherited-writable-property-names/lib/index.js"],"names":["MAX_SAFE_INTEGER","__var_0__","isPositiveInteger","__var_1__","isPrimitive","isWritableProperty","__var_2__","getOwnPropertyNames","__var_3__","getPrototypeOf","__var_4__","hasOwnProp","__var_5__","inheritedWritablePropertyNames","value","level","names","cache","obj","tmp","N","n","k","i","arguments","length","TypeError","push","main"],"mappings":"2RA2BA,IAAIA,EAAmBC,EACnBC,EAAoBC,EAAUC,YAC9BC,EAAqBC,EACrBC,EAAsBC,EACtBC,EAAiBC,EACjBC,EAAaC,EAgBjB,SAASC,EAAgCC,EAAOC,GAC/C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKC,UAAUC,OAAS,EAAI,CAC3B,IAAMvB,EAAmBa,GACxB,MAAM,IAAIW,UAAW,yEAA2EX,EAAQ,MAEzGK,EAAIL,OAEJK,EAAIpB,EAEL,GAAKc,MAAAA,EACJ,MAAO,GASR,IANAI,EAAMT,EAAgBK,GAGtBE,EAAQ,GACRC,EAAQ,GACRI,EAAI,EACIH,GAAOG,GAAKD,GAAI,CAEvB,IADAD,EAAMZ,EAAqBW,GACrBK,EAAI,EAAGA,EAAIJ,EAAIM,OAAQF,IAC5BD,EAAIH,EAAKI,IAEmB,IAA3BZ,EAAYM,EAAOK,IACnBjB,EAAoBa,EAAKI,IAEzBN,EAAMW,KAAML,GAEbL,EAAOK,IAAM,EAEdJ,EAAMT,EAAgBS,GACtBG,GAAK,EAGN,OAAOL,EC3DL,IAACY,EAAO3B","sourcesContent":["import __var_0__ from '@stdlib/constants/math/float64-max-safe-integer';\nimport __var_1__ from '@stdlib/assert/is-positive-integer';\nimport __var_2__ from '@stdlib/assert/is-writable-property';\nimport __var_3__ from '@stdlib/utils/property-names';\nimport __var_4__ from '@stdlib/utils/get-prototype-of';\nimport __var_5__ from '@stdlib/assert/has-own-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar MAX_SAFE_INTEGER = __var_0__;\nvar isPositiveInteger = __var_1__.isPrimitive;\nvar isWritableProperty = __var_2__;\nvar getOwnPropertyNames = __var_3__;\nvar getPrototypeOf = __var_4__;\nvar hasOwnProp = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited writable property names.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited writable property names\n*\n* @example\n* var keys = inheritedWritablePropertyNames( {} );\n*/\nfunction inheritedWritablePropertyNames( value, level ) { // eslint-disable-line id-length\n\tvar names;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar k;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a positive integer. Value: `' + level + '`.' );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting writable property names...\n\tnames = [];\n\tcache = {};\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tnames.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn names;\n}\n\n\n// EXPORTS //\nexport default inheritedWritablePropertyNames;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's inherited writable property names.\n*\n* @module @stdlib/utils/inherited-writable-property-names\n*\n* @example\n* var inheritedWritablePropertyNames = require( '@stdlib/utils/inherited-writable-property-names' );\n*\n* var keys = inheritedWritablePropertyNames( [] );\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}