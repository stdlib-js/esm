{"version":3,"sources":["@stdlib/utils/enumerable-properties/lib/main.js","@stdlib/utils/enumerable-properties/lib/index.js"],"names":["keys","__var_0__","propertySymbols","__var_1__","isEnumerable","__var_2__","enumerableProperties","value","out","tmp","i","length","push","main"],"mappings":"mHAwBA,IAAIA,EAAOC,EACPC,EAAkBC,EAClBC,EAAeC,EAoBnB,SAASC,EAAsBC,GAC9B,IAAIC,EACAC,EACAC,EAIJ,IAFAF,EAAMR,EAAMO,GACZE,EAAMP,EAAiBK,GACjBG,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IACvBN,EAAcG,EAAOE,EAAKC,KAC9BF,EAAII,KAAMH,EAAKC,IAGjB,OAAOF,ECrBL,IAACK,EAAOZ","sourcesContent":["import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/utils/property-symbols';\nimport __var_2__ from '@stdlib/assert/is-enumerable-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar keys = __var_0__;\nvar propertySymbols = __var_1__;\nvar isEnumerable = __var_2__;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own property enumerable names and symbols\n*\n* @example\n* var obj = {\n*     'beep': 'boop',\n*     'foo': 3.14\n* };\n*\n* var props = enumerableProperties( obj );\n* // e.g., returns [ 'beep', 'foo' ]\n*/\nfunction enumerableProperties( value ) {\n\tvar out;\n\tvar tmp;\n\tvar i;\n\n\tout = keys( value );\n\ttmp = propertySymbols( value );\n\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\tif ( isEnumerable( value, tmp[ i ] ) ) {\n\t\t\tout.push( tmp[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default enumerableProperties;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own enumerable property names and symbols.\n*\n* @module @stdlib/utils/enumerable-properties\n*\n* @example\n* var enumerableProperties = require( '@stdlib/utils/enumerable-properties' );\n*\n* var props = enumerableProperties({\n*   'foo': 'bar',\n*   'beep': 'boop'\n* });\n* // e.g., returns [ 'foo', 'beep' ]\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}