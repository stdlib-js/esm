{"version":3,"sources":["@stdlib/utils/pop/lib/pop_object.js","@stdlib/utils/pop/lib/pop_typed_array.js","@stdlib/utils/pop/lib/pop.js","@stdlib/utils/pop/lib/index.js"],"names":["pop","obj","len","v","length","arr","constructor","buffer","byteOffset","isArray","__var_0__","isTypedArrayLike","__var_1__","isInteger","__var_2__","popObject","__var_3__","popTypedArray","__var_4__","collection","TypeError"],"mappings":"kIAwCA,SAASA,EAAKC,GACb,IAAIC,EACAC,EACJ,OAAoB,IAAfF,EAAIG,OACD,CAAEH,OAAK,IAGfE,EAAIF,EADJC,EAAMD,EAAIG,OAAS,UAEZH,EAAKC,GACZD,EAAIG,OAASF,EACN,CAAED,EAAKE,ICbf,SAASH,EAAKK,GACb,IACIH,EACAC,EACJ,OAAoB,IAAfE,EAAID,OACD,CAAEC,OAAK,IAGfF,EAAIE,EADJH,EAAMG,EAAID,OAAS,GAGZ,CADA,IAAIC,EAAIC,YAAaD,EAAIE,OAAQF,EAAIG,WAAYN,GACzCC,ICrBhB,IAAIM,EAAUC,EACVC,EAAmBC,EACnBC,EAAYC,EACZC,EAAYC,EACZC,EAAgBC,EAyBpB,SAASlB,EAAKmB,GACb,IAAIhB,EACJ,GAAKM,EAASU,GAEb,OADAhB,EAAIgB,EAAWnB,MACR,CAAEmB,EAAYhB,GAGtB,GAAKQ,EAAkBQ,GACtB,OAAOF,EAAeE,GAGvB,GACgB,OAAfA,GACsB,iBAAfA,GACsB,iBAAtBA,EAAWf,QAClBS,EAAWM,EAAWf,SACtBe,EAAWf,QAAU,EAErB,OAAOW,EAAWI,GAEnB,MAAM,IAAIC,UAAW,iGAAiGD,EAAW,MChC/H,IAACnB,EAAMU","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the last element of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @returns {Array} input object and the removed element\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* var out = pop( obj );\n* // returns [ { 'length': 1, '0': 1.0 }, 2.0 ]\n*/\nfunction pop( obj ) {\n\tvar len;\n\tvar v;\n\tif ( obj.length === 0 ) {\n\t\treturn [ obj, void 0 ];\n\t}\n\tlen = obj.length - 1;\n\tv = obj[ len ];\n\tdelete obj[ len ];\n\tobj.length = len;\n\treturn [ obj, v ];\n}\n\n\n// EXPORTS //\nexport default pop;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the last element of a typed array.\n*\n* @private\n* @param {TypedArray} arr - input array\n* @returns {Array} input array and the removed element\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = pop( arr );\n* // returns [ <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*/\nfunction pop( arr ) {\n\tvar view;\n\tvar len;\n\tvar v;\n\tif ( arr.length === 0 ) {\n\t\treturn [ arr, void 0 ];\n\t}\n\tlen = arr.length - 1;\n\tv = arr[ len ];\n\tview = new arr.constructor( arr.buffer, arr.byteOffset, len );\n\treturn [ view, v ];\n}\n\n\n// EXPORTS //\nexport default pop;\n","import __var_0__ from '@stdlib/assert/is-array';\nimport __var_1__ from '@stdlib/assert/is-typed-array-like';\nimport __var_2__ from '@stdlib/assert/is-integer';\nimport __var_3__ from './pop_object.js';\nimport __var_4__ from './pop_typed_array.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArray = __var_0__;\nvar isTypedArrayLike = __var_1__;\nvar isInteger = __var_2__;\nvar popObject = __var_3__;\nvar popTypedArray = __var_4__;\n\n\n// MAIN //\n\n/**\n* Removes and returns the last element of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {Array} updated collection and the removed element\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = pop( arr );\n* // returns [ [ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = pop( arr );\n* // returns [ <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*/\nfunction pop( collection ) {\n\tvar v;\n\tif ( isArray( collection ) ) {\n\t\tv = collection.pop();\n\t\treturn [ collection, v ];\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn popTypedArray( collection );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn popObject( collection );\n\t}\n\tthrow new TypeError( 'invalid argument. Must provide either an Array, Typed Array, or an array-like Object. Value: `'+collection+'`.' );\n}\n\n\n// EXPORTS //\nexport default pop;\n","import __var_0__ from './pop.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove and return the last element of a collection.\n*\n* @module @stdlib/utils/pop\n*\n* @example\n* var pop = require( '@stdlib/utils/pop' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = pop( arr );\n* // returns [ [ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*\n* arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* out = pop( arr )\n* // returns [ <Float64Array>[ 1.0, 2.0, 3.0, 4.0 ], 5.0 ]\n*/\n\n// MODULES //\nvar pop = __var_0__;\n\n\n// EXPORTS //\nexport default pop;\n"]}