{"version":3,"sources":["@stdlib/utils/copy/lib/typed_arrays.js","@stdlib/utils/copy/lib/deep_copy.js","@stdlib/utils/copy/lib/copy.js","@stdlib/utils/copy/lib/index.js"],"names":["hash","Int8Array","__var_0__","Uint8Array","__var_1__","Uint8ClampedArray","__var_2__","Int16Array","__var_3__","Uint16Array","__var_4__","Int32Array","__var_5__","Uint32Array","__var_6__","Float32Array","__var_7__","Float64Array","__var_8__","int8array","arr","uint8array","uint8clampedarray","int16array","uint16array","int32array","uint32array","float32array","float64array","typedarrays","__var_13__","hasOwnProp","isArray","isBuffer","isError","typeOf","regexp","indexOf","objectKeys","propertyNames","propertyDescriptor","__var_9__","getPrototypeOf","__var_10__","defineProperty","__var_11__","copyBuffer","__var_12__","typedArrays","cloneInstance","val","cache","names","name","refs","desc","tmp","ref","i","Object","create","push","length","value","deepCopy","isExtensible","preventExtensions","isSealed","seal","isFrozen","freeze","copyError","error","keys","key","err","constructor","message","stack","code","errno","syscall","copy","level","parent","ctor","x","j","Date","toString","Set","Map","valueOf","Array","isNonNegativeInteger","isPrimitive","PINF","out","arguments","TypeError"],"mappings":"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","sourcesContent":["import __var_0__ from '@stdlib/array/int8';\nimport __var_1__ from '@stdlib/array/uint8';\nimport __var_2__ from '@stdlib/array/uint8c';\nimport __var_3__ from '@stdlib/array/int16';\nimport __var_4__ from '@stdlib/array/uint16';\nimport __var_5__ from '@stdlib/array/int32';\nimport __var_6__ from '@stdlib/array/uint32';\nimport __var_7__ from '@stdlib/array/float32';\nimport __var_8__ from '@stdlib/array/float64';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar Int8Array = __var_0__;\nvar Uint8Array = __var_1__;\nvar Uint8ClampedArray = __var_2__;\nvar Int16Array = __var_3__;\nvar Uint16Array = __var_4__;\nvar Int32Array = __var_5__;\nvar Uint32Array = __var_6__;\nvar Float32Array = __var_7__;\nvar Float64Array = __var_8__;\n\n\n// VARIABLES //\n\nvar hash;\n\n\n// FUNCTIONS //\n\n/**\n* Copies an `Int8Array`.\n*\n* @private\n* @param {Int8Array} arr - array to copy\n* @returns {Int8Array} new array\n*/\nfunction int8array( arr ) {\n\treturn new Int8Array( arr );\n}\n\n/**\n* Copies a `Uint8Array`.\n*\n* @private\n* @param {Uint8Array} arr - array to copy\n* @returns {Uint8Array} new array\n*/\nfunction uint8array( arr ) {\n\treturn new Uint8Array( arr );\n}\n\n/**\n* Copies a `Uint8ClampedArray`.\n*\n* @private\n* @param {Uint8ClampedArray} arr - array to copy\n* @returns {Uint8ClampedArray} new array\n*/\nfunction uint8clampedarray( arr ) {\n\treturn new Uint8ClampedArray( arr );\n}\n\n/**\n* Copies an `Int16Array`.\n*\n* @private\n* @param {Int16Array} arr - array to copy\n* @returns {Int16Array} new array\n*/\nfunction int16array( arr ) {\n\treturn new Int16Array( arr );\n}\n\n/**\n* Copies a `Uint16Array`.\n*\n* @private\n* @param {Uint16Array} arr - array to copy\n* @returns {Uint16Array} new array\n*/\nfunction uint16array( arr ) {\n\treturn new Uint16Array( arr );\n}\n\n/**\n* Copies an `Int32Array`.\n*\n* @private\n* @param {Int32Array} arr - array to copy\n* @returns {Int32Array} new array\n*/\nfunction int32array( arr ) {\n\treturn new Int32Array( arr );\n}\n\n/**\n* Copies a `Uint32Array`.\n*\n* @private\n* @param {Uint32Array} arr - array to copy\n* @returns {Uint32Array} new array\n*/\nfunction uint32array( arr ) {\n\treturn new Uint32Array( arr );\n}\n\n/**\n* Copies a `Float32Array`.\n*\n* @private\n* @param {Float32Array} arr - array to copy\n* @returns {Float32Array} new array\n*/\nfunction float32array( arr ) {\n\treturn new Float32Array( arr );\n}\n\n/**\n* Copies a `Float64Array`.\n*\n* @private\n* @param {Float64Array} arr - array to copy\n* @returns {Float64Array} new array\n*/\nfunction float64array( arr ) {\n\treturn new Float64Array( arr );\n}\n\n/**\n* Returns a hash of functions for copying typed arrays.\n*\n* @private\n* @returns {Object} function hash\n*/\nfunction typedarrays() {\n\tvar out = {\n\t\t'int8array': int8array,\n\t\t'uint8array': uint8array,\n\t\t'uint8clampedarray': uint8clampedarray,\n\t\t'int16array': int16array,\n\t\t'uint16array': uint16array,\n\t\t'int32array': int32array,\n\t\t'uint32array': uint32array,\n\t\t'float32array': float32array,\n\t\t'float64array': float64array\n\t};\n\treturn out;\n}\n\n\n// MAIN //\n\nhash = typedarrays();\n\n\n// EXPORTS //\nexport default hash;\n","import __var_0__ from '@stdlib/assert/has-own-property';\nimport __var_1__ from '@stdlib/assert/is-array';\nimport __var_2__ from '@stdlib/assert/is-buffer';\nimport __var_3__ from '@stdlib/assert/is-error';\nimport __var_4__ from '@stdlib/utils/type-of';\nimport __var_5__ from '@stdlib/utils/regexp-from-string';\nimport __var_6__ from '@stdlib/utils/index-of';\nimport __var_7__ from '@stdlib/utils/keys';\nimport __var_8__ from '@stdlib/utils/property-names';\nimport __var_9__ from '@stdlib/utils/property-descriptor';\nimport __var_10__ from '@stdlib/utils/get-prototype-of';\nimport __var_11__ from '@stdlib/utils/define-property';\nimport __var_12__ from '@stdlib/buffer/from-buffer';\nimport __var_13__ from './typed_arrays.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar hasOwnProp = __var_0__;\nvar isArray = __var_1__;\nvar isBuffer = __var_2__;\nvar isError = __var_3__;\nvar typeOf = __var_4__;\nvar regexp = __var_5__;\nvar indexOf = __var_6__;\nvar objectKeys = __var_7__;\nvar propertyNames = __var_8__;\nvar propertyDescriptor = __var_9__;\nvar getPrototypeOf = __var_10__;\nvar defineProperty = __var_11__;\nvar copyBuffer = __var_12__;\nvar typedArrays = __var_13__;\n\n\n// FUNCTIONS //\n\n/**\n* Clones a class instance.\n*\n* ## Notes\n*\n* -   This should **only** be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered **fragile**.\n* -   The function is greedy, disregarding the notion of a `level`. Instead, the function deep copies all properties, as we assume the concept of `level` applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache;\n\tvar names;\n\tvar name;\n\tvar refs;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tcache = [];\n\trefs = [];\n\n\tref = Object.create( getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = propertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = propertyDescriptor( val, name );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n}\n\n/**\n* Copies an error object.\n*\n* @private\n* @param {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error - error to copy\n* @returns {(Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|EvalError)} error copy\n*\n* @example\n* var err1 = new TypeError( 'beep' );\n*\n* var err2 = copyError( err1 );\n* // returns <TypeError>\n*/\nfunction copyError( error ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar keys;\n\tvar desc;\n\tvar tmp;\n\tvar key;\n\tvar err;\n\tvar i;\n\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\tcache.push( error );\n\trefs.push( err );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = objectKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = propertyDescriptor( error, key );\n\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\ttmp = ( isArray( error[ key ] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( error[ key ], tmp, cache, refs, -1 );\n\t\t}\n\t\tdefineProperty( err, key, desc );\n\t}\n\treturn err;\n}\n\n\n// MAIN //\n\n/**\n* Recursively performs a deep copy of an input object.\n*\n* @private\n* @param {*} val - value to copy\n* @param {(Array|Object)} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {NonNegativeInteger} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel -= 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn copyBuffer( val );\n\t}\n\tif ( isError( val ) ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeOf( val );\n\n\tif ( name === 'date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'regexp' ) {\n\t\treturn regexp( val.toString() );\n\t}\n\tif ( name === 'set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'string' ||\n\t\tname === 'boolean' ||\n\t\tname === 'number'\n\t) {\n\t\t// If provided an `Object`, return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'array' &&\n\t\tname !== 'object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeOf( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'array' &&\n\t\t\t\t\tname !== 'object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'object' ) {\n\t\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray( x ) ) ? new Array( x.length ) : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\t\tif ( hasOwnProp( desc, 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tdefineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else if ( name === 'array' ) {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tcopy[ key ] = val[ key ];\n\t\t}\n\t} else {\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tdesc = propertyDescriptor( val, key );\n\t\t\tdefineProperty( copy, key, desc );\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n}\n\n\n// EXPORTS //\nexport default deepCopy;\n","import __var_0__ from '@stdlib/assert/is-array';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_2__ from '@stdlib/constants/math/float64-pinf';\nimport __var_3__ from './deep_copy.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArray = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\nvar PINF = __var_2__;\nvar deepCopy = __var_3__;\n\n\n// MAIN //\n\n/**\n* Copies or deep clones a value to an arbitrary depth.\n*\n* @param {*} value - value to copy\n* @param {NonNegativeInteger} [level=+infinity] - copy depth\n* @throws {TypeError} `level` must be a nonnegative integer\n* @returns {*} value copy\n*\n* @example\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ { 'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\nfunction copy( value, level ) {\n\tvar out;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. `level` must be a nonnegative integer. Value: `' + level + '`.' );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tout = ( isArray( value ) ) ? new Array( value.length ) : {};\n\treturn deepCopy( value, out, [value], [out], level );\n}\n\n\n// EXPORTS //\nexport default copy;\n","import __var_0__ from './copy.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy or deep clone a value to an arbitrary depth.\n*\n* @module @stdlib/utils/copy\n*\n* @example\n* var copy = require( '@stdlib/utils/copy' );\n*\n* var out = copy( 'beep' );\n* // returns 'beep'\n*\n* @example\n* var copy = require( '@stdlib/utils/copy' );\n*\n* var value = [\n*     {\n*         'a': 1,\n*         'b': true,\n*         'c': [ 1, 2, 3 ]\n*     }\n* ];\n* var out = copy( value );\n* // returns [ {'a': 1, 'b': true, 'c': [ 1, 2, 3 ] } ]\n*\n* var bool = ( value[0].c === out[0].c );\n* // returns false\n*/\n\n// MODULES //\nvar copy = __var_0__;\n\n\n// EXPORTS //\nexport default copy;\n"]}