{"version":3,"sources":["@stdlib/utils/uncapitalize-keys/lib/uncapitalize_keys.js","@stdlib/utils/uncapitalize-keys/lib/index.js"],"names":["hasOwnProp","__var_0__","uncapitalizeKeys","obj","out","key","TypeError","charAt","toLowerCase","slice"],"mappings":"+CAsBA,IAAIA,EAAaC,EAqBjB,SAASC,EAAkBC,GAC1B,IAAIC,EACAC,EAEJ,GAAoB,iBAARF,GAA4B,OAARA,EAC/B,MAAM,IAAIG,UAAW,qDAAqDH,EAAI,MAG/E,IAAME,KADND,EAAM,GACOD,EACPH,EAAYG,EAAKE,KACR,KAARA,EACJD,EAAKC,GAAQF,EAAKE,GAGlBD,EADIC,EAAIE,OAAQ,GAAIC,cAAgBH,EAAII,MAAO,IACpCN,EAAKE,IAInB,OAAOD,ECtBL,IAACF,EAAmBD","sourcesContent":["import __var_0__ from '@stdlib/assert/has-own-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar hasOwnProp = __var_0__;\n\n\n// MAIN //\n\n/**\n* Converts the first letter of each object key to lowercase.\n*\n* @param {Object} obj - source object\n* @throws {TypeError} must provide an object\n* @returns {Object} new object\n*\n* @example\n* var obj1 = {\n*     'AA': 1,\n*     'BB': 2\n* };\n*\n* var obj2 = uncapitalizeKeys( obj1 );\n* // returns { 'aA': 1, 'bB': 2 }\n*/\nfunction uncapitalizeKeys( obj ) {\n\tvar out;\n\tvar key;\n\tvar k;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide an object. Value: `'+obj+'`.' );\n\t}\n\tout = {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwnProp( obj, key ) ) {\n\t\t\tif ( key === '' ) {\n\t\t\t\tout[ key ] = obj[ key ];\n\t\t\t} else {\n\t\t\t\tk = key.charAt( 0 ).toLowerCase() + key.slice( 1 );\n\t\t\t\tout[ k ] = obj[ key ];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default uncapitalizeKeys;\n","import __var_0__ from './uncapitalize_keys.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert the first letter of each object key to lowercase.\n*\n* @module @stdlib/utils/uncapitalize-keys\n*\n* @example\n* var uncapitalizeKeys = require( '@stdlib/utils/uncapitalize-keys' );\n*\n* var obj1 = {\n*     'AA': 1,\n*     'BB': 2\n* };\n*\n* var obj2 = uncapitalizeKeys( obj1 );\n* // returns { 'aA': 1, 'bB': 2 }\n*/\n\n// MODULES //\nvar uncapitalizeKeys = __var_0__;\n\n\n// EXPORTS //\nexport default uncapitalizeKeys;\n"]}