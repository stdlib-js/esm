{"version":3,"sources":["@stdlib/utils/constructor-name/lib/main.js","@stdlib/utils/constructor-name/lib/index.js"],"names":["nativeClass","__var_0__","RE","__var_1__","isBuffer","__var_2__","constructorName","v","match","name","ctor","slice","constructor","exec","toString"],"mappings":"qHAwBA,IAAIA,EAAcC,EACdC,EAAKC,EACLC,EAAWC,EA+Bf,SAASC,EAAiBC,GACzB,IAAIC,EACAC,EACAC,EAEJ,IAAe,YADfD,EAAOT,EAAaO,GAAII,MAAO,GAAI,KACC,UAATF,IAAqBF,EAAEK,YAAc,CAE/D,GAA0B,iBAD1BF,EAAOH,EAAEK,aACQH,KAChB,OAAOC,EAAKD,KAGb,GADAD,EAAQN,EAAGW,KAAMH,EAAKI,YAErB,OAAON,EAAO,GAGhB,OAAKJ,EAAUG,GACP,SAEDE,ECnCL,IAACH,EAAkBL","sourcesContent":["import __var_0__ from '@stdlib/utils/native-class';\nimport __var_1__ from '@stdlib/regexp/function-name';\nimport __var_2__ from '@stdlib/assert/is-buffer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar nativeClass = __var_0__;\nvar RE = __var_1__;\nvar isBuffer = __var_2__;\n\n\n// MAIN //\n\n/**\n* Determines the name of a value's constructor.\n*\n* @param {*} v - input value\n* @returns {string} name of a value's constructor\n*\n* @example\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* @example\n* var v = constructorName( 5 );\n* // returns 'Number'\n*\n* @example\n* var v = constructorName( null );\n* // returns 'Null'\n*\n* @example\n* var v = constructorName( undefined );\n* // returns 'Undefined'\n*\n* @example\n* var v = constructorName( function noop() {} );\n* // returns 'Function'\n*/\nfunction constructorName( v ) {\n\tvar match;\n\tvar name;\n\tvar ctor;\n\tname = nativeClass( v ).slice( 8, -1 );\n\tif ( (name === 'Object' || name === 'Error') && v.constructor ) {\n\t\tctor = v.constructor;\n\t\tif ( typeof ctor.name === 'string' ) {\n\t\t\treturn ctor.name;\n\t\t}\n\t\tmatch = RE.exec( ctor.toString() );\n\t\tif ( match ) {\n\t\t\treturn match[ 1 ];\n\t\t}\n\t}\n\tif ( isBuffer( v ) ) {\n\t\treturn 'Buffer';\n\t}\n\treturn name;\n}\n\n\n// EXPORTS //\nexport default constructorName;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the name of a value's constructor.\n*\n* @module @stdlib/utils/constructor-name\n*\n* @example\n* var constructorName = require( '@stdlib/utils/constructor-name' );\n*\n* var v = constructorName( 'a' );\n* // returns 'String'\n*\n* v = constructorName( {} );\n* // returns 'Object'\n*\n* v = constructorName( true );\n* // returns 'Boolean'\n*/\n\n// MODULES //\nvar constructorName = __var_0__;\n\n\n// EXPORTS //\nexport default constructorName;\n"]}