{"version":3,"sources":["@stdlib/utils/size-of/lib/main.js","@stdlib/utils/size-of/lib/index.js"],"names":["INT8","__var_0__","UINT8","__var_1__","INT16","__var_2__","UINT16","__var_3__","INT32","__var_4__","UINT32","__var_5__","FLOAT16","__var_6__","FLOAT32","__var_7__","FLOAT64","__var_8__","COMPLEX64","__var_9__","COMPLEX128","__var_10__","sizeOf","dtype","TypeError"],"mappings":"kmBAgCA,IAAIA,EAAOC,EACPC,EAAQC,EACRC,EAAQC,EACRC,EAASC,EACTC,EAAQC,EACRC,EAASC,EACTC,EAAUC,EACVC,EAAUC,EACVC,EAAUC,EACVC,EAAYC,EACZC,EAAaC,EAwBjB,SAASC,EAAQC,GAChB,OAASA,GACT,IAAK,UACJ,OAAOP,EACR,IAAK,QACJ,OAAOR,EACR,IAAK,SACJ,OAAOE,EACR,IAAK,UACJ,OAAOI,EACR,IAAK,OACJ,OAAOd,EACR,IAAK,QAEL,IAAK,SACJ,OAAOE,EACR,IAAK,QACJ,OAAOE,EACR,IAAK,SACJ,OAAOE,EACR,IAAK,UACJ,OAAOM,EACR,IAAK,aACJ,OAAOQ,EACR,IAAK,YACJ,OAAOF,EACR,QACC,MAAM,IAAIM,UAAW,6DAA6DD,EAAM,OCrDvF,IAACD,EAASrB","sourcesContent":["import __var_0__ from '@stdlib/constants/math/int8-num-bytes';\nimport __var_1__ from '@stdlib/constants/math/uint8-num-bytes';\nimport __var_2__ from '@stdlib/constants/math/int16-num-bytes';\nimport __var_3__ from '@stdlib/constants/math/uint16-num-bytes';\nimport __var_4__ from '@stdlib/constants/math/int32-num-bytes';\nimport __var_5__ from '@stdlib/constants/math/uint32-num-bytes';\nimport __var_6__ from '@stdlib/constants/math/float16-num-bytes';\nimport __var_7__ from '@stdlib/constants/math/float32-num-bytes';\nimport __var_8__ from '@stdlib/constants/math/float64-num-bytes';\nimport __var_9__ from '@stdlib/constants/math/complex64-num-bytes';\nimport __var_10__ from '@stdlib/constants/math/complex128-num-bytes';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar INT8 = __var_0__;\nvar UINT8 = __var_1__;\nvar INT16 = __var_2__;\nvar UINT16 = __var_3__;\nvar INT32 = __var_4__;\nvar UINT32 = __var_5__;\nvar FLOAT16 = __var_6__;\nvar FLOAT32 = __var_7__;\nvar FLOAT64 = __var_8__;\nvar COMPLEX64 = __var_9__;\nvar COMPLEX128 = __var_10__;\n\n\n// MAIN //\n\n/**\n* Returns the size (in bytes) of the canonical binary representation of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} size in bytes\n*\n* @example\n* var s = sizeOf( 'int8' );\n* // returns 1\n*\n* @example\n* var s = sizeOf( 'uint8' );\n* // returns 1\n*\n* @example\n* var s = sizeOf( 'int16' );\n* // returns 2\n*/\nfunction sizeOf( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'uint32':\n\t\treturn UINT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'uint8':\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn UINT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'uint16':\n\t\treturn UINT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tcase 'complex128':\n\t\treturn COMPLEX128;\n\tcase 'complex64':\n\t\treturn COMPLEX64;\n\tdefault:\n\t\tthrow new TypeError( 'invalid argument. Must provide a recognized type. Value: `'+dtype+'`.' );\n\t}\n}\n\n\n// EXPORTS //\nexport default sizeOf;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the size (in bytes) of the canonical binary representation of a specified numeric type.\n*\n* @module @stdlib/utils/size-of\n*\n* @example\n* var sizeOf = require( '@stdlib/utils/size-of' );\n*\n* var s = sizeOf( 'int8' );\n* // returns 1\n*\n* s = sizeOf( 'uint8' );\n* // returns 1\n*\n* s = sizeOf( 'int16' );\n* // returns 2\n*/\n\n// MODULES //\nvar sizeOf = __var_0__;\n\n\n// EXPORTS //\nexport default sizeOf;\n"]}