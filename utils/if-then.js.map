{"version":3,"sources":["@stdlib/utils/if-then/lib/if_then.js","@stdlib/utils/if-then/lib/index.js"],"names":["isFunction","__var_0__","ifthen","bool","x","y","TypeError"],"mappings":"0CAsBA,IAAIA,EAAaC,EA6BjB,SAASC,EAAQC,EAAMC,EAAGC,GACzB,IAAML,EAAYI,GACjB,MAAM,IAAIE,UAAW,iEAAiEF,EAAE,MAEzF,IAAMJ,EAAYK,GACjB,MAAM,IAAIC,UAAW,gEAAgED,EAAE,MAExF,OAAKF,EACGC,IAEDC,IClBL,IAACH,EAASD","sourcesContent":["import __var_0__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\n\n\n// MAIN //\n\n/**\n* If a condition is truthy, invokes `x`; otherwise, invokes `y`.\n*\n* @param {boolean} bool - condition\n* @param {Function} x - function to invoke if a condition is truthy\n* @param {Function} y - function to invoke if a condition is falsy\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {*} return value of either `x` or `y`\n*\n* @example\n* var randu = require( '@stdlib/random/base/randu' );\n*\n* function x() {\n*     return randu() * 100.0;\n* }\n*\n* function y() {\n*     return -1.0 * randu() * 100.0;\n* }\n*\n* var z = ifthen( randu() > 0.5, x, y );\n* // returns <number>\n*/\nfunction ifthen( bool, x, y ) {\n\tif ( !isFunction( x ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+x+'`.' );\n\t}\n\tif ( !isFunction( y ) ) {\n\t\tthrow new TypeError( 'invalid argument. Third argument must be a function. Value: `'+y+'`.' );\n\t}\n\tif ( bool ) {\n\t\treturn x();\n\t}\n\treturn y();\n}\n\n\n// EXPORTS //\nexport default ifthen;\n","import __var_0__ from './if_then.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* If a condition is truthy, invoke `x`; otherwise, invoke `y`.\n*\n* @module @stdlib/utils/if-then\n*\n* @example\n* var randu = require( '@stdlib/random/base/randu' );\n* var ifthen = require( '@stdlib/utils/if-then' );\n*\n* function x() {\n*     return randu() * 100.0;\n* }\n*\n* function y() {\n*     return -1.0 * randu() * 100.0;\n* }\n*\n* var z = ifthen( randu() > 0.5, x, y );\n* // returns <number>\n*/\n\n// MODULES //\nvar ifthen = __var_0__;\n\n\n// EXPORTS //\nexport default ifthen;\n"]}