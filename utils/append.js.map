{"version":3,"sources":["@stdlib/utils/append/lib/append_array.js","@stdlib/utils/append/lib/append_object.js","@stdlib/utils/append/lib/append_typed_array.js","@stdlib/utils/append/lib/append.js","@stdlib/utils/append/lib/index.js"],"names":["append","arr","items","i","length","push","obj","len","ArrayBuffer","__var_0__","ceil2","__var_1__","total","buf","n","v","BYTES_PER_ELEMENT","byteOffset","buffer","byteLength","constructor","isArray","isCollection","isTypedArrayLike","__var_2__","isInteger","__var_3__","appendArray","__var_4__","appendObject","__var_5__","appendTypedArray","__var_6__","collection1","collection2","TypeError"],"mappings":"iQAqCA,SAASA,EAAQC,EAAKC,GACrB,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC9BF,EAAII,KAAMH,EAAOC,IAElB,OAAOF,ECDR,SAASD,EAAQM,EAAKJ,GACrB,IAAIK,EACAJ,EAEJ,IADAI,EAAMD,EAAIF,OACJD,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC9BG,EAAKC,EAAIJ,GAAMD,EAAOC,GAGvB,OADAG,EAAIF,OAASG,EAAML,EAAME,OAClBE,EC1BR,IAAIE,EAAcC,EACdC,EAAQC,EA2BZ,SAASX,EAAQC,EAAKC,GACrB,IAEIU,EACAL,EACAM,EACAC,EACAC,EACAZ,EASJ,GAPAI,EAAMN,EAAIG,OACVU,EAAIZ,EAAME,OAIVQ,EAFSL,EAAMN,EAAIe,kBACVF,EAAIb,EAAIe,kBACSf,EAAIgB,WAEzBhB,EAAIiB,OAAOC,WAAaP,EAG5B,IAFAC,EAAM,IAAIL,EAAaE,EAAOE,EAAM,IACpCG,EAAI,IAAId,EAAImB,YAAaP,EAAK,EAAGN,EAAIO,GAC/BX,EAAI,EAAGA,EAAII,EAAKJ,IACrBY,EAAGZ,GAAMF,EAAKE,QAGfY,EAAI,IAAId,EAAImB,YAAanB,EAAIiB,OAAQjB,EAAIgB,WAAYV,EAAIO,GAE1D,IAAMX,EAAI,EAAGA,EAAIW,EAAGX,IACnBY,EAAGR,EAAIJ,GAAMD,EAAOC,GAErB,OAAOY,ECpDR,IAAIM,EAAUZ,EACVa,EAAeX,EACfY,EAAmBC,EACnBC,EAAYC,EACZC,EAAcC,EACdC,EAAeC,EACfC,EAAmBC,EA2BvB,SAAShC,EAAQiC,EAAaC,GAC7B,IAAMZ,EAAcY,GACnB,MAAM,IAAIC,UAAW,2EAA2ED,EAAY,MAE7G,GAAKb,EAASY,GACb,OAAON,EAAaM,EAAaC,GAGlC,GAAKX,EAAkBU,GACtB,OAAOF,EAAkBE,EAAaC,GAGvC,GACiB,OAAhBD,GACuB,iBAAhBA,GACuB,iBAAvBA,EAAY7B,QACnBqB,EAAWQ,EAAY7B,SACvB6B,EAAY7B,QAAU,EAEtB,OAAOyB,EAAcI,EAAaC,GAEnC,MAAM,IAAIC,UAAW,2GAA2GF,EAAY,MCvC1I,IAACjC,EAASS","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar i;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tarr.push( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\nexport default append;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {ArrayLike} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = append( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 1.0, '1': 2.0, '2': 3.0, '3': 4.0 }\n*/\nfunction append( obj, items ) {\n\tvar len;\n\tvar i;\n\tlen = obj.length;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tobj[ len+i ] = items[ i ];\n\t}\n\tobj.length = len + items.length;\n\treturn obj;\n}\n\n\n// EXPORTS //\nexport default append;\n","import __var_0__ from '@stdlib/array/buffer';\nimport __var_1__ from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar ArrayBuffer = __var_0__;\nvar ceil2 = __var_1__;\n\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the end of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is followed by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\ttotal = nbytes + ibytes + arr.byteOffset;\n\n\tif ( arr.buffer.byteLength < total ) {\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\tv = new arr.constructor( buf, 0, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i ] = arr[ i ];\n\t\t}\n\t} else {\n\t\tv = new arr.constructor( arr.buffer, arr.byteOffset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ len+i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\nexport default append;\n","import __var_0__ from '@stdlib/assert/is-array';\nimport __var_1__ from '@stdlib/assert/is-collection';\nimport __var_2__ from '@stdlib/assert/is-typed-array-like';\nimport __var_3__ from '@stdlib/assert/is-integer';\nimport __var_4__ from './append_array.js';\nimport __var_5__ from './append_object.js';\nimport __var_6__ from './append_typed_array.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArray = __var_0__;\nvar isCollection = __var_1__;\nvar isTypedArrayLike = __var_2__;\nvar isInteger = __var_3__;\nvar appendArray = __var_4__;\nvar appendObject = __var_5__;\nvar appendTypedArray = __var_6__;\n\n\n// MAIN //\n\n/**\n* Adds elements from one collection to the end of another collection.\n*\n* @param {Collection} collection1 - collection\n* @param {Collection} collection2 - collection containing elements to add\n* @throws {TypeError} first argument must be either an array, typed array, or an array-like object\n* @throws {TypeError} second argument must be an array-like object\n* @returns {Collection} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* @example\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction append( collection1, collection2 ) {\n\tif ( !isCollection( collection2 ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be an array-like object. Value: `'+collection2+'`.' );\n\t}\n\tif ( isArray( collection1 ) ) {\n\t\treturn appendArray( collection1, collection2 );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection1 ) ) {\n\t\treturn appendTypedArray( collection1, collection2 );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection1 !== null &&\n\t\ttypeof collection1 === 'object' &&\n\t\ttypeof collection1.length === 'number' &&\n\t\tisInteger( collection1.length ) &&\n\t\tcollection1.length >= 0\n\t) {\n\t\treturn appendObject( collection1, collection2 );\n\t}\n\tthrow new TypeError( 'invalid argument. First argument must be either an Array, Typed Array, or an array-like Object. Value: `'+collection1+'`.' );\n}\n\n\n// EXPORTS //\nexport default append;\n","import __var_0__ from './append.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Add the elements of one collection to the end of another collection.\n*\n* @module @stdlib/utils/append\n*\n* @example\n* var append = require( '@stdlib/utils/append' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = append( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\n\n// MODULES //\nvar append = __var_0__;\n\n\n// EXPORTS //\nexport default append;\n"]}