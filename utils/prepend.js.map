{"version":3,"sources":["@stdlib/utils/prepend/lib/prepend_array.js","@stdlib/utils/prepend/lib/prepend_object.js","@stdlib/utils/prepend/lib/prepend_typed_array.js","@stdlib/utils/prepend/lib/prepend.js","@stdlib/utils/prepend/lib/index.js"],"names":["prepend","arr","items","i","length","unshift","obj","len","n","ArrayBuffer","__var_0__","ceil2","__var_1__","nbytes","ibytes","offset","buf","v","BYTES_PER_ELEMENT","byteOffset","byteLength","constructor","buffer","isArray","isCollection","isTypedArrayLike","__var_2__","isInteger","__var_3__","prependArray","__var_4__","prependObject","__var_5__","prependTypedArray","__var_6__","collection1","collection2","TypeError"],"mappings":"iQAqCA,SAASA,EAASC,EAAKC,GACtB,IAAIC,EACJ,IAAMA,EAAID,EAAME,OAAO,EAAGD,GAAK,EAAGA,IACjCF,EAAII,QAASH,EAAOC,IAErB,OAAOF,ECDR,SAASD,EAASM,EAAKJ,GACtB,IAAIK,EACAC,EACAL,EAMJ,IAJAI,EAAMD,EAAIF,OACVI,EAAIN,EAAME,OAGJD,EAAII,EAAI,EAAGJ,GAAK,EAAGA,IACxBG,EAAKH,EAAEK,GAAMF,EAAKH,GAGnB,IAAMA,EAAI,EAAGA,EAAIK,EAAGL,IACnBG,EAAKH,GAAMD,EAAOC,GAGnB,OADAG,EAAIF,OAASG,EAAMC,EACZF,ECnCR,IAAIG,EAAcC,EACdC,EAAQC,EA2BZ,SAASZ,EAASC,EAAKC,GACtB,IAAIW,EACAC,EACAC,EAEAR,EACAS,EACAR,EACAS,EACAd,EAQJ,GANAI,EAAMN,EAAIG,OAGVU,GAFAN,EAAIN,EAAME,QAEGH,EAAIiB,mBACjBH,EAASd,EAAIkB,YAECL,EAMb,IALAD,EAASN,EAAMN,EAAIiB,kBAGnBH,GADAC,EAAM,IAAIP,EAAaE,EADfE,EAASC,EAASC,EACU,KACvBK,WAAaP,EAASC,EACnCG,EAAI,IAAIhB,EAAIoB,YAAaL,EAAKD,EAAQR,EAAIC,GACpCL,EAAI,EAAGA,EAAII,EAAKJ,IACrBc,EAAGd,EAAEK,GAAMP,EAAKE,QAGjBY,GAAUD,EACVG,EAAI,IAAIhB,EAAIoB,YAAapB,EAAIqB,OAAQP,EAAQR,EAAIC,GAElD,IAAML,EAAI,EAAGA,EAAIK,EAAGL,IACnBc,EAAGd,GAAMD,EAAOC,GAEjB,OAAOc,ECxDR,IAAIM,EAAUb,EACVc,EAAeZ,EACfa,EAAmBC,EACnBC,EAAYC,EACZC,EAAeC,EACfC,EAAgBC,EAChBC,EAAoBC,EA6BxB,SAASlC,EAASmC,EAAaC,GAC9B,IAAMZ,EAAcY,GACnB,MAAM,IAAIC,UAAW,2EAA2ED,EAAY,MAE7G,GAAKb,EAASY,GACb,OAAON,EAAcM,EAAaC,GAGnC,GAAKX,EAAkBU,GACtB,OAAOF,EAAmBE,EAAaC,GAGxC,GACiB,OAAhBD,GACuB,iBAAhBA,GACuB,iBAAvBA,EAAY/B,QACnBuB,EAAWQ,EAAY/B,SACvB+B,EAAY/B,QAAU,EAEtB,OAAO2B,EAAeI,EAAaC,GAEpC,MAAM,IAAIC,UAAW,2GAA2GF,EAAY,MCzC1I,IAACnC,EAAUU","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( arr, items ) {\n\tvar i;\n\tfor ( i = items.length-1; i >= 0; i-- ) {\n\t\tarr.unshift( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\nexport default prepend;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {ArrayLike} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = prepend( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 3.0, '1': 4.0, '2': 1.0, '3': 2.0 }\n*/\nfunction prepend( obj, items ) {\n\tvar len;\n\tvar n;\n\tvar i;\n\n\tlen = obj.length;\n\tn = items.length;\n\n\t// Shift all existing elements to the right...\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tobj[ i+n ] = obj[ i ];\n\t}\n\t// Add new elements...\n\tfor ( i = 0; i < n; i++ ) {\n\t\tobj[ i ] = items[ i ];\n\t}\n\tobj.length = len + n;\n\treturn obj;\n}\n\n\n// EXPORTS //\nexport default prepend;\n","import __var_0__ from '@stdlib/array/buffer';\nimport __var_1__ from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar ArrayBuffer = __var_0__;\nvar ceil2 = __var_1__;\n\n\n// MAIN //\n\n/**\n* Adds elements from a collection to the beginning of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is preceded by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {ArrayLike} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar offset;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\toffset = arr.byteOffset;\n\n\tif ( offset < ibytes ) {\n\t\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\t\ttotal = nbytes + ibytes + offset;\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\toffset = buf.byteLength - nbytes - ibytes;\n\t\tv = new arr.constructor( buf, offset, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i+n ] = arr[ i ];\n\t\t}\n\t} else {\n\t\toffset -= ibytes;\n\t\tv = new arr.constructor( arr.buffer, offset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\nexport default prepend;\n","import __var_0__ from '@stdlib/assert/is-array';\nimport __var_1__ from '@stdlib/assert/is-collection';\nimport __var_2__ from '@stdlib/assert/is-typed-array-like';\nimport __var_3__ from '@stdlib/assert/is-integer';\nimport __var_4__ from './prepend_array.js';\nimport __var_5__ from './prepend_object.js';\nimport __var_6__ from './prepend_typed_array.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArray = __var_0__;\nvar isCollection = __var_1__;\nvar isTypedArrayLike = __var_2__;\nvar isInteger = __var_3__;\nvar prependArray = __var_4__;\nvar prependObject = __var_5__;\nvar prependTypedArray = __var_6__;\n\n\n// MAIN //\n\n/**\n* Adds elements from one collection to the beginning of another collection.\n*\n* @param {Collection} collection1 - collection\n* @param {Collection} collection2 - collection containing elements to add\n* @throws {TypeError} first argument must be either an array, typed array, or an array-like object\n* @throws {TypeError} second argument must be an array-like object\n* @returns {Collection} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction prepend( collection1, collection2 ) {\n\tif ( !isCollection( collection2 ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be an array-like object. Value: `'+collection2+'`.' );\n\t}\n\tif ( isArray( collection1 ) ) {\n\t\treturn prependArray( collection1, collection2 );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection1 ) ) {\n\t\treturn prependTypedArray( collection1, collection2 );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection1 !== null &&\n\t\ttypeof collection1 === 'object' &&\n\t\ttypeof collection1.length === 'number' &&\n\t\tisInteger( collection1.length ) &&\n\t\tcollection1.length >= 0\n\t) {\n\t\treturn prependObject( collection1, collection2 );\n\t}\n\tthrow new TypeError( 'invalid argument. First argument must be either an Array, Typed Array, or an array-like Object. Value: `'+collection1+'`.' );\n}\n\n\n// EXPORTS //\nexport default prepend;\n","import __var_0__ from './prepend.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Add the elements of one collection to the beginning of another collection.\n*\n* @module @stdlib/utils/prepend\n*\n* @example\n* var prepend = require( '@stdlib/utils/prepend' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns [ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = prepend( arr, [ 6.0, 7.0 ] );\n* // returns <Float64Array>[ 6.0, 7.0, 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\n\n// MODULES //\nvar prepend = __var_0__;\n\n\n// EXPORTS //\nexport default prepend;\n"]}