{"version":3,"sources":["@stdlib/utils/type-max/lib/main.js","@stdlib/utils/type-max/lib/index.js"],"names":["INT8","__var_0__","UINT8","__var_1__","INT16","__var_2__","UINT16","__var_3__","INT32","__var_4__","UINT32","__var_5__","FLOAT16","__var_6__","FLOAT32","__var_7__","FLOAT64","__var_8__","typemax","dtype","TypeError"],"mappings":"0bAgCA,IAAIA,EAAOC,EACPC,EAAQC,EACRC,EAAQC,EACRC,EAASC,EACTC,EAAQC,EACRC,EAASC,EACTC,EAAUC,EACVC,EAAUC,EACVC,EAAUC,EAwBd,SAASC,EAASC,GACjB,OAASA,GACT,IAAK,UACJ,OAAOH,EACR,IAAK,QACJ,OAAOR,EACR,IAAK,SACJ,OAAOE,EACR,IAAK,UACJ,OAAOI,EACR,IAAK,OACJ,OAAOd,EACR,IAAK,QAEL,IAAK,SACJ,OAAOE,EACR,IAAK,QACJ,OAAOE,EACR,IAAK,SACJ,OAAOE,EACR,IAAK,UACJ,OAAOM,EACR,QACC,MAAM,IAAIQ,UAAW,6DAA6DD,EAAM,OC/CvF,IAACD,EAAUjB","sourcesContent":["import __var_0__ from '@stdlib/constants/math/int8-max';\nimport __var_1__ from '@stdlib/constants/math/uint8-max';\nimport __var_2__ from '@stdlib/constants/math/int16-max';\nimport __var_3__ from '@stdlib/constants/math/uint16-max';\nimport __var_4__ from '@stdlib/constants/math/int32-max';\nimport __var_5__ from '@stdlib/constants/math/uint32-max';\nimport __var_6__ from '@stdlib/constants/math/float16-pinf';\nimport __var_7__ from '@stdlib/constants/math/float32-pinf';\nimport __var_8__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/jsdoc-doctest-decimal-point */\n\n'use strict';\n\n// MODULES //\nvar INT8 = __var_0__;\nvar UINT8 = __var_1__;\nvar INT16 = __var_2__;\nvar UINT16 = __var_3__;\nvar INT32 = __var_4__;\nvar UINT32 = __var_5__;\nvar FLOAT16 = __var_6__;\nvar FLOAT32 = __var_7__;\nvar FLOAT64 = __var_8__;\n\n\n// MAIN //\n\n/**\n* Returns the maximum value of a specified numeric type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {number} maximum value\n*\n* @example\n* var m = typemax( 'int8' );\n* // returns 127\n*\n* @example\n* var m = typemax( 'uint8' );\n* // returns 255\n*\n* @example\n* var m = typemax( 'int16' );\n* // returns 32767\n*/\nfunction typemax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'int32':\n\t\treturn INT32;\n\tcase 'uint32':\n\t\treturn UINT32;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'int8':\n\t\treturn INT8;\n\tcase 'uint8':\n\t\t// Fall-through...\n\tcase 'uint8c': // eslint-disable-line no-fallthrough\n\t\treturn UINT8;\n\tcase 'int16':\n\t\treturn INT16;\n\tcase 'uint16':\n\t\treturn UINT16;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( 'invalid argument. Must provide a recognized type. Value: `'+dtype+'`.' );\n\t}\n}\n\n\n// EXPORTS //\nexport default typemax;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum value of a specified numeric type.\n*\n* @module @stdlib/utils/type-max\n*\n* @example\n* var typemax = require( '@stdlib/utils/type-max' );\n*\n* var m = typemax( 'int8' );\n* // returns 127\n*\n* m = typemax( 'uint8' );\n* // returns 255\n*\n* m = typemax( 'int16' );\n* // returns 32767\n*/\n\n// MODULES //\nvar typemax = __var_0__;\n\n\n// EXPORTS //\nexport default typemax;\n"]}