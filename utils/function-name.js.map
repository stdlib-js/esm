{"version":3,"sources":["@stdlib/utils/function-name/lib/function_name.js","@stdlib/utils/function-name/lib/index.js"],"names":["isFunction","__var_0__","hasFunctionNameSupport","__var_1__","RE","__var_2__","isFunctionNameSupported","functionName","fcn","TypeError","name","exec","toString"],"mappings":"8IAwBA,IAAIA,EAAaC,EACbC,EAAyBC,EACzBC,EAAKC,EAKLC,EAA0BJ,IA4B9B,SAASK,EAAcC,GAEtB,IAA2B,IAAtBR,EAAYQ,GAChB,MAAM,IAAIC,UAAW,sDAAwDD,EAAM,MAEpF,OAAKF,EACGE,EAAIE,KAELN,EAAGO,KAAMH,EAAII,YAAc,GC3BhC,IAACL,EAAeN","sourcesContent":["import __var_0__ from '@stdlib/assert/is-function';\nimport __var_1__ from '@stdlib/assert/has-function-name-support';\nimport __var_2__ from '@stdlib/regexp/function-name';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\nvar hasFunctionNameSupport = __var_1__;\nvar RE = __var_2__;\n\n\n// VARIABLES //\n\nvar isFunctionNameSupported = hasFunctionNameSupport();\n\n\n// MAIN //\n\n/**\n* Returns the name of a function.\n*\n* @param {Function} fcn - input function\n* @throws {TypeError} must provide a function\n* @returns {string} function name\n*\n* @example\n* var v = functionName( Math.sqrt );\n* // returns 'sqrt'\n*\n* @example\n* var v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* @example\n* var v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*\n* @example\n* var v = functionName( String );\n* // returns 'String'\n*/\nfunction functionName( fcn ) {\n\t// TODO: add support for generator functions?\n\tif ( isFunction( fcn ) === false ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a function. Value: `' + fcn + '`.' );\n\t}\n\tif ( isFunctionNameSupported ) {\n\t\treturn fcn.name;\n\t}\n\treturn RE.exec( fcn.toString() )[ 1 ];\n}\n\n\n// EXPORTS //\nexport default functionName;\n","import __var_0__ from './function_name.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the name of a function.\n*\n* @module @stdlib/utils/function-name\n*\n* @example\n* var functionName = require( '@stdlib/utils/function-name' );\n*\n* var v = functionName( String );\n* // returns 'String'\n*\n* v = functionName( function foo(){} );\n* // returns 'foo'\n*\n* v = functionName( function(){} );\n* // returns '' || 'anonymous'\n*/\n\n// MODULES //\nvar functionName = __var_0__;\n\n\n// EXPORTS //\nexport default functionName;\n"]}