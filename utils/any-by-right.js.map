{"version":3,"sources":["@stdlib/utils/any-by-right/lib/any_by_right.js","@stdlib/utils/any-by-right/lib/index.js"],"names":["isCollection","__var_0__","isFunction","__var_1__","anyByRight","collection","predicate","thisArg","len","i","TypeError","length","call"],"mappings":"sFAuBA,IAAIA,EAAeC,EACfC,EAAaC,EAyBjB,SAASC,EAAYC,EAAYC,EAAWC,GAC3C,IACIC,EACAC,EACJ,IAAMT,EAAcK,GACnB,MAAM,IAAIK,UAAW,kEAAkEL,EAAW,MAEnG,IAAMH,EAAYI,GACjB,MAAM,IAAII,UAAW,iEAAiEJ,EAAU,MAGjG,IAAMG,GADND,EAAMH,EAAWM,QACH,EAAGF,GAAK,EAAGA,IAAM,CAE9B,GADMH,EAAUM,KAAML,EAASF,EAAYI,GAAKA,EAAGJ,GAElD,OAAO,EAGHG,IAAQH,EAAWM,SACvBF,GAAOJ,EAAWM,OAASH,EAC3BA,EAAMH,EAAWM,QAGnB,OAAO,EC/BL,IAACP,EAAaH","sourcesContent":["import __var_0__ from '@stdlib/assert/is-collection';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isCollection = __var_0__;\nvar isFunction = __var_1__;\n\n\n// MAIN //\n\n/**\n* Tests whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* @param {Collection} collection - input collection\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a function\n* @returns {boolean} boolean indicating whether at least one element passes a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ -1, 1, 2, 3, 4 ];\n*\n* var bool = anyByRight( arr, isNegative );\n* // returns true\n*/\nfunction anyByRight( collection, predicate, thisArg ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be a collection. Value: `'+collection+'`.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+predicate+'`.' );\n\t}\n\tlen = collection.length;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\treturn true;\n\t\t}\n\t\t// Account for dynamically resizing a collection...\n\t\tif ( len !== collection.length ) {\n\t\t\ti += ( collection.length - len );\n\t\t\tlen = collection.length;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\nexport default anyByRight;\n","import __var_0__ from './any_by_right.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left.\n*\n* @module @stdlib/utils/any-by-right\n*\n* @example\n* var anyByRight = require( '@stdlib/utils/any-by-right' );\n*\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ -1, 1, 2, 3, 4 ];\n*\n* var bool = anyByRight( arr, isNegative );\n* // returns true\n*/\n\n// MODULES //\nvar anyByRight = __var_0__;\n\n\n// EXPORTS //\nexport default anyByRight;\n"]}