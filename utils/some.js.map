{"version":3,"sources":["@stdlib/utils/some/lib/main.js","@stdlib/utils/some/lib/index.js"],"names":["isCollection","__var_0__","isPositiveInteger","__var_1__","isPrimitive","some","collection","n","count","len","i","TypeError","length"],"mappings":"8FAuBA,IAAIA,EAAeC,EACfC,EAAoBC,EAAUC,YAoBlC,SAASC,EAAMC,EAAYC,GAC1B,IAAIC,EACAC,EACAC,EACJ,IAAMV,EAAcM,GACnB,MAAM,IAAIK,UAAW,kEAAkEL,EAAW,MAEnG,IAAMJ,EAAmBK,GACxB,MAAM,IAAII,UAAW,yEAAyEJ,EAAE,MAIjG,IAFAE,EAAMH,EAAWM,OACjBJ,EAAQ,EACFE,EAAI,EAAGA,EAAID,EAAKC,IACrB,GAAKJ,EAAYI,KAChBF,GAAS,KACMD,EACd,OAAO,EAIV,OAAO,EC5BL,IAACF,EAAOJ","sourcesContent":["import __var_0__ from '@stdlib/assert/is-collection';\nimport __var_1__ from '@stdlib/assert/is-positive-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isCollection = __var_0__;\nvar isPositiveInteger = __var_1__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which are truthy.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which are truthy\n*\n* @example\n* var arr = [ 0, 0, 1, 2, 3 ];\n*\n* var bool = some( arr, 3 );\n* // returns true\n*/\nfunction some( collection, n ) {\n\tvar count;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be a collection. Value: `'+collection+'`.' );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a positive integer. Value: `'+n+'`.' );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( collection[ i ] ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\nexport default some;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which are truthy.\n*\n* @module @stdlib/utils/some\n*\n* @example\n* var some = require( '@stdlib/utils/some' );\n*\n* var arr = [ 0, 0, 1, 2, 3 ];\n*\n* var bool = some( arr, 3 );\n* // returns true\n*/\n\n// MODULES //\nvar some = __var_0__;\n\n\n// EXPORTS //\nexport default some;\n"]}