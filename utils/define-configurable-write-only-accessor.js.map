{"version":3,"sources":["@stdlib/utils/define-configurable-write-only-accessor/lib/main.js","@stdlib/utils/define-configurable-write-only-accessor/lib/index.js"],"names":["defineProperty","__var_0__","setConfigurableWriteOnlyAccessor","obj","prop","setter","configurable","enumerable","set"],"mappings":"oCAsBA,IAAIA,EAAiBC,EAwBrB,SAASC,EAAkCC,EAAKC,EAAMC,GACrDL,EAAgBG,EAAKC,EAAM,CAC1BE,cAAgB,EAChBC,YAAc,EACdC,IAAOH,ICRN,IAACH,EAAmCD","sourcesContent":["import __var_0__ from '@stdlib/utils/define-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar defineProperty = __var_0__;\n\n\n// MAIN //\n\n/**\n* Defines a configurable write-only accessor.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} setter - accessor\n*\n* @example\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setConfigurableWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\nfunction setConfigurableWriteOnlyAccessor( obj, prop, setter ) { // eslint-disable-line id-length\n\tdefineProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'set': setter\n\t});\n}\n\n\n// EXPORTS //\nexport default setConfigurableWriteOnlyAccessor;\n","import __var_0__ from './main.js'; // eslint-disable-line id-length\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define a configurable write-only accessor.\n*\n* @module @stdlib/utils/define-configurable-write-only-accessor\n*\n* @example\n* var setConfigurableWriteOnlyAccessor = require( '@stdlib/utils/define-configurable-write-only-accessor' );\n*\n* var obj = {};\n* var val = '';\n*\n* function setter( v ) {\n*     val = v;\n* }\n*\n* setConfigurableWriteOnlyAccessor( obj, 'foo', setter );\n*\n* obj.foo = 'beep';\n*/\n\n// MODULES //\nvar setConfigurableWriteOnlyAccessor = __var_0__;\n\n\n// EXPORTS //\nexport default setConfigurableWriteOnlyAccessor;\n"]}