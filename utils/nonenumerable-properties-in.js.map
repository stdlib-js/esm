{"version":3,"sources":["@stdlib/utils/nonenumerable-properties-in/lib/main.js","@stdlib/utils/nonenumerable-properties-in/lib/index.js"],"names":["getOwnPropertySymbols","__var_0__","getOwnPropertyNames","__var_1__","getPrototypeOf","__var_2__","hasOwnProp","__var_3__","isNonEnumerable","__var_4__","nonEnumerablePropertiesIn","value","cache","out","obj","tmp","k","i","Object","length","push","main"],"mappings":"oNA0BA,IAAIA,EAAwBC,EACxBC,EAAsBC,EACtBC,EAAiBC,EACjBC,EAAaC,EACbC,EAAkBC,EAetB,SAASC,EAA2BC,GACnC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKN,MAAAA,EACJ,MAAO,GAGRG,EAAMI,OAAQP,GAGdC,EAAQ,GACRC,EAAM,GACN,EAAG,CAEF,IADAE,EAAMb,EAAqBY,GACrBG,EAAI,EAAGA,EAAIF,EAAII,OAAQF,IAC5BD,EAAID,EAAKE,IAEmB,IAA3BX,EAAYM,EAAOI,IACnBR,EAAiBM,EAAKE,IAEtBH,EAAIO,KAAMJ,GAEXJ,EAAOI,IAAM,EAGd,IADAD,EAAMf,EAAuBc,GACvBG,EAAI,EAAGA,EAAIF,EAAII,OAAQF,IAC5BD,EAAID,EAAKE,IAEmB,IAA3BX,EAAYM,EAAOI,IACnBR,EAAiBM,EAAKE,IAEtBH,EAAIO,KAAMJ,GAEXJ,EAAOI,IAAM,EAEdF,EAAMV,EAAgBU,SACbA,GAEV,OAAOD,ECtDL,IAACQ,EAAOpB","sourcesContent":["import __var_0__ from '@stdlib/utils/property-symbols';\nimport __var_1__ from '@stdlib/utils/property-names';\nimport __var_2__ from '@stdlib/utils/get-prototype-of';\nimport __var_3__ from '@stdlib/assert/has-own-property';\nimport __var_4__ from '@stdlib/assert/is-nonenumerable-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar getOwnPropertySymbols = __var_0__;\nvar getOwnPropertyNames = __var_1__;\nvar getPrototypeOf = __var_2__;\nvar hasOwnProp = __var_3__;\nvar isNonEnumerable = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable property names and symbols.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable property names and symbols\n*\n* @example\n* var props = nonEnumerablePropertiesIn( [] );\n* // returns [...]\n*/\nfunction nonEnumerablePropertiesIn( value ) {\n\tvar cache;\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting non-enumerable properties...\n\tcache = {};\n\tout = [];\n\tdo {\n\t\ttmp = getOwnPropertyNames( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a name more than once\n\t\t\t\tisNonEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisNonEnumerable( obj, k )\n\t\t\t) {\n\t\t\t\tout.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default nonEnumerablePropertiesIn;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own and inherited non-enumerable property names and symbols.\n*\n* @module @stdlib/utils/nonenumerable-properties-in\n*\n* @example\n* var nonEnumerablePropertiesIn = require( '@stdlib/utils/nonenumerable-properties-in' );\n*\n* var props = nonEnumerablePropertiesIn( [] );\n* // returns [...]\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}