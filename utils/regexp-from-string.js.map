{"version":3,"sources":["@stdlib/utils/regexp-from-string/lib/from_string.js","@stdlib/utils/regexp-from-string/lib/index.js"],"names":["isString","__var_0__","isPrimitive","RE","__var_1__","reFromString","str","TypeError","exec","RegExp"],"mappings":"6EAuBA,IAAIA,EAAWC,EAAUC,YACrBC,EAAKC,EAgBT,SAASC,EAAcC,GACtB,IAAMN,EAAUM,GACf,MAAM,IAAIC,UAAW,uEAAyED,EAAM,MAMrG,OAHAA,EAAMH,EAAGK,KAAMF,IAGE,IAAIG,OAAQH,EAAI,GAAIA,EAAI,IAAO,KCd9C,IAACD,EAAeJ","sourcesContent":["import __var_0__ from '@stdlib/assert/is-string';\nimport __var_1__ from '@stdlib/regexp/regexp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\nvar RE = __var_1__;\n\n\n// MAIN //\n\n/**\n* Parses a regular expression string and returns a new regular expression.\n*\n* @param {string} str - regular expression string\n* @throws {TypeError} must provide a regular expression string\n* @returns {(RegExp|null)} regular expression or null\n*\n* @example\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\nfunction reFromString( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a regular expression string. Value: `' + str + '`.' );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = RE.exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n}\n\n\n// EXPORTS //\nexport default reFromString;\n","import __var_0__ from './from_string.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a regular expression from a regular expression string.\n*\n* @module @stdlib/utils/regexp-from-string\n*\n* @example\n* var reFromString = require( '@stdlib/utils/regexp-from-string' );\n*\n* var re = reFromString( '/beep/' );\n* // returns /beep/\n*/\n\n// MODULES //\nvar reFromString = __var_0__;\n\n\n// EXPORTS //\nexport default reFromString;\n"]}