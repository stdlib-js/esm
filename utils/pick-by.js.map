{"version":3,"sources":["@stdlib/utils/pick-by/lib/pick_by.js","@stdlib/utils/pick-by/lib/index.js"],"names":["objectKeys","__var_0__","isFunction","__var_1__","pickBy","obj","predicate","keys","out","key","i","TypeError","length"],"mappings":"mEAuBA,IAAIA,EAAaC,EACbC,EAAaC,EA2BjB,SAASC,EAAQC,EAAKC,GACrB,IAAIC,EACAC,EACAC,EACAC,EACJ,GAAoB,iBAARL,GAA4B,OAARA,EAC/B,MAAM,IAAIM,UAAW,+DAA+DN,EAAI,MAEzF,IAAMH,EAAYI,GACjB,MAAM,IAAIK,UAAW,iEAAiEL,EAAU,MAIjG,IAFAE,EAAM,GACND,EAAOP,EAAYK,GACbK,EAAI,EAAGA,EAAIH,EAAKK,OAAQF,IAExBJ,EADLG,EAAMF,EAAMG,GACSL,EAAKI,MACzBD,EAAKC,GAAQJ,EAAKI,IAGpB,OAAOD,EC3BL,IAACJ,EAASH","sourcesContent":["import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar isFunction = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns a partial object copy containing properties for which a predicate returns a truthy value.\n*\n* @param {Object} obj - source object\n* @param {Function} predicate - predicate function\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be a function\n* @returns {Object} new object\n*\n* @example\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pickBy( obj1, predicate );\n* // returns { 'b': 2 }\n*/\nfunction pickBy( obj, predicate ) {\n\tvar keys;\n\tvar out;\n\tvar key;\n\tvar i;\n\tif ( typeof obj !== 'object' || obj === null ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `'+obj+'`.' );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `'+predicate+'`.' );\n\t}\n\tout = {};\n\tkeys = objectKeys( obj );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tif ( predicate( key, obj[ key ] ) ) {\n\t\t\tout[ key ] = obj[ key ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default pickBy;\n","import __var_0__ from './pick_by.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a partial object copy containing properties for which a predicate (function) returns a truthy value.\n*\n* @module @stdlib/utils/pick-by\n*\n* @example\n* var pickBy = require( '@stdlib/utils/pick-by' );\n*\n* function predicate( key, value ) {\n*     return ( value > 1 );\n* }\n*\n* var obj1 = {\n*     'a': 1,\n*     'b': 2\n* };\n*\n* var obj2 = pickBy( obj1, predicate );\n* // returns { 'b': 2 }\n*/\n\n// MODULES //\nvar pickBy = __var_0__;\n\n\n// EXPORTS //\nexport default pickBy;\n"]}