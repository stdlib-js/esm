{"version":3,"sources":["@stdlib/utils/safe-int-max/lib/main.js","@stdlib/utils/safe-int-max/lib/index.js"],"names":["FLOAT16","__var_0__","FLOAT32","__var_1__","FLOAT64","__var_2__","safeintmax","dtype","TypeError"],"mappings":"6LAwBA,IAAIA,EAAUC,EACVC,EAAUC,EACVC,EAAUC,EAwBd,SAASC,EAAYC,GACpB,OAASA,GACT,IAAK,UACJ,OAAOH,EACR,IAAK,UACJ,OAAOF,EACR,IAAK,UACJ,OAAOF,EACR,QACC,MAAM,IAAIQ,UAAW,6DAA6DD,EAAM,OCnBvF,IAACD,EAAaL","sourcesContent":["import __var_0__ from '@stdlib/constants/math/float16-max-safe-integer';\nimport __var_1__ from '@stdlib/constants/math/float32-max-safe-integer';\nimport __var_2__ from '@stdlib/constants/math/float64-max-safe-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar FLOAT16 = __var_0__;\nvar FLOAT32 = __var_1__;\nvar FLOAT64 = __var_2__;\n\n\n// MAIN //\n\n/**\n* Returns the maximum safe integer capable of being represented by a numeric real type.\n*\n* @param {string} dtype - numeric type\n* @throws {TypeError} must provide a recognized numeric type\n* @returns {integer} maximum safe integer\n*\n* @example\n* var m = safeintmax( 'float64' );\n* // returns 9007199254740991\n*\n* @example\n* var m = safeintmax( 'float16' );\n* // returns 2047\n*\n* @example\n* var m = safeintmax( 'float32' );\n* // returns 16777215\n*/\nfunction safeintmax( dtype ) {\n\tswitch ( dtype ) {\n\tcase 'float64':\n\t\treturn FLOAT64;\n\tcase 'float32':\n\t\treturn FLOAT32;\n\tcase 'float16':\n\t\treturn FLOAT16;\n\tdefault:\n\t\tthrow new TypeError( 'invalid argument. Must provide a recognized type. Value: `'+dtype+'`.' );\n\t}\n}\n\n\n// EXPORTS //\nexport default safeintmax;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the maximum safe integer capable of being represented by a numeric real type.\n*\n* @module @stdlib/utils/safe-int-max\n*\n* @example\n* var safeintmax = require( '@stdlib/utils/safe-int-max' );\n*\n* var m = safeintmax( 'float64' );\n* // returns 9007199254740991\n*\n* m = safeintmax( 'float16' );\n* // returns 2047\n*\n* m = safeintmax( 'float32' );\n* // returns 16777215\n*/\n\n// MODULES //\nvar safeintmax = __var_0__;\n\n\n// EXPORTS //\nexport default safeintmax;\n"]}