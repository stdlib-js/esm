{"version":3,"sources":["@stdlib/utils/inherited-property-symbols/lib/main.js","@stdlib/utils/inherited-property-symbols/lib/index.js"],"names":["MAX_SAFE_INTEGER","__var_0__","isPositiveInteger","__var_1__","isPrimitive","propertySymbols","__var_2__","getPrototypeOf","__var_3__","contains","arr","v","i","length","inheritedPropertySymbols","value","level","out","obj","tmp","N","n","arguments","TypeError","push","main"],"mappings":"2LAyBA,IAAIA,EAAmBC,EACnBC,EAAoBC,EAAUC,YAC9BC,EAAkBC,EAClBC,EAAiBC,EAarB,SAASC,EAAUC,EAAKC,GACvB,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC5B,GAAKF,EAAKE,KAAQD,EACjB,OAAO,EAGT,OAAO,EAiBR,SAASG,EAA0BC,EAAOC,GACzC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAT,EAEJ,GAAKU,UAAUT,OAAS,EAAI,CAC3B,IAAMX,EAAmBc,GACxB,MAAM,IAAIO,UAAW,yEAA2EP,EAAQ,MAEzGI,EAAIJ,OAEJI,EAAIpB,EAEL,GAAKe,MAAAA,EACJ,MAAO,GAQR,IALAG,EAAMX,EAAgBQ,GAGtBE,EAAM,GACNI,EAAI,EACIH,GAAOG,GAAKD,GAAI,CAEvB,IADAD,EAAMd,EAAiBa,GACjBN,EAAI,EAAGA,EAAIO,EAAIN,OAAQD,KACO,IAA9BH,EAAUQ,EAAKE,EAAKP,KACxBK,EAAIO,KAAML,EAAKP,IAGjBM,EAAMX,EAAgBW,GACtBG,GAAK,EAGN,OAAOJ,ECpEL,IAACQ,EAAOxB","sourcesContent":["import __var_0__ from '@stdlib/constants/math/float64-max-safe-integer';\nimport __var_1__ from '@stdlib/assert/is-positive-integer';\nimport __var_2__ from '@stdlib/utils/property-symbols';\nimport __var_3__ from '@stdlib/utils/get-prototype-of';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar MAX_SAFE_INTEGER = __var_0__;\nvar isPositiveInteger = __var_1__.isPrimitive;\nvar propertySymbols = __var_2__;\nvar getPrototypeOf = __var_3__;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's inherited symbol properties.\n*\n* @param {*} value - input object\n* @param {PositiveInteger} [level] - inheritance level\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Array} a list of inherited symbol properties\n*\n* @example\n* var symbols = inheritedPropertySymbols( [] );\n*/\nfunction inheritedPropertySymbols( value, level ) {\n\tvar out;\n\tvar obj;\n\tvar tmp;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( level ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a positive integer. Value: `' + level + '`.' );\n\t\t}\n\t\tN = level;\n\t} else {\n\t\tN = MAX_SAFE_INTEGER;\n\t}\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Get the value's prototype:\n\tobj = getPrototypeOf( value );\n\n\t// Walk the prototype chain collecting all symbol properties...\n\tout = [];\n\tn = 1;\n\twhile ( obj && n <= N ) {\n\t\ttmp = propertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tif ( contains( out, tmp[ i ] ) === false ) {\n\t\t\t\tout.push( tmp[ i ] );\n\t\t\t}\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t\tn += 1;\n\t}\n\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default inheritedPropertySymbols;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's inherited symbol properties.\n*\n* @module @stdlib/utils/inherited-property-symbols\n*\n* @example\n* var inheritedPropertySymbols = require( '@stdlib/utils/inherited-property-symbols' );\n*\n* var symbols = inheritedPropertySymbols( [] );\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}