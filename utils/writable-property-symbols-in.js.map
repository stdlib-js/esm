{"version":3,"sources":["@stdlib/utils/writable-property-symbols-in/lib/main.js","@stdlib/utils/writable-property-symbols-in/lib/index.js"],"names":["getOwnPropertySymbols","__var_0__","getPrototypeOf","__var_1__","isWritableProperty","__var_2__","hasOwnProp","__var_3__","writablePropertySymbolsIn","value","symbols","cache","obj","tmp","k","i","Object","length","push","main"],"mappings":"4KAyBA,IAAIA,EAAwBC,EACxBC,EAAiBC,EACjBC,EAAqBC,EACrBC,EAAaC,EAcjB,SAASC,EAA2BC,GACnC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKN,MAAAA,EACJ,MAAO,GAGRG,EAAMI,OAAQP,GAGdC,EAAU,GACVC,EAAQ,GACR,EAAG,CAEF,IADAE,EAAMb,EAAuBY,GACvBG,EAAI,EAAGA,EAAIF,EAAII,OAAQF,IAC5BD,EAAID,EAAKE,IAEmB,IAA3BT,EAAYK,EAAOG,IACnBV,EAAoBQ,EAAKE,IAEzBJ,EAAQQ,KAAMJ,GAEfH,EAAOG,IAAM,EAEdF,EAAMV,EAAgBU,SACbA,GAEV,OAAOF,ECzCL,IAACS,EAAOlB","sourcesContent":["import __var_0__ from '@stdlib/utils/property-symbols';\nimport __var_1__ from '@stdlib/utils/get-prototype-of';\nimport __var_2__ from '@stdlib/assert/is-writable-property';\nimport __var_3__ from '@stdlib/assert/has-own-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar getOwnPropertySymbols = __var_0__;\nvar getPrototypeOf = __var_1__;\nvar isWritableProperty = __var_2__;\nvar hasOwnProp = __var_3__;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited writable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited writable symbol properties\n*\n* @example\n* var symbols = writablePropertySymbolsIn( {} );\n*/\nfunction writablePropertySymbolsIn( value ) {\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all writable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisWritableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\nexport default writablePropertySymbolsIn;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own and inherited writable symbol properties.\n*\n* @module @stdlib/utils/writable-property-symbols-in\n*\n* @example\n* var writablePropertySymbolsIn = require( '@stdlib/utils/writable-property-symbols-in' );\n*\n* var symbols = writablePropertySymbolsIn( {} );\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}