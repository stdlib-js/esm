{"version":3,"sources":["@stdlib/utils/push/lib/push_array.js","@stdlib/utils/push/lib/push_object.js","@stdlib/utils/push/lib/push_typed_array.js","@stdlib/utils/push/lib/push.js","@stdlib/utils/push/lib/index.js"],"names":["push","arr","items","i","length","obj","len","ArrayBuffer","__var_0__","ceil2","__var_1__","total","buf","n","v","BYTES_PER_ELEMENT","byteOffset","buffer","byteLength","constructor","isArray","isTypedArrayLike","isInteger","__var_2__","pushArray","__var_3__","pushObject","__var_4__","pushTypedArray","__var_5__","collection","Array","arguments","TypeError"],"mappings":"qNAqCA,SAASA,EAAMC,EAAKC,GACnB,IAAIC,EACJ,IAAMA,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC9BF,EAAID,KAAME,EAAOC,IAElB,OAAOF,ECDR,SAASD,EAAMK,EAAKH,GACnB,IAAII,EACAH,EAEJ,IADAG,EAAMD,EAAID,OACJD,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC9BE,EAAKC,EAAIH,GAAMD,EAAOC,GAGvB,OADAE,EAAID,OAASE,EAAMJ,EAAME,OAClBC,EC1BR,IAAIE,EAAcC,EACdC,EAAQC,EA2BZ,SAASV,EAAMC,EAAKC,GACnB,IAEIS,EACAL,EACAM,EACAC,EACAC,EACAX,EASJ,GAPAG,EAAML,EAAIG,OACVS,EAAIX,EAAME,OAIVO,EAFSL,EAAML,EAAIc,kBACVF,EAAIZ,EAAIc,kBACSd,EAAIe,WAEzBf,EAAIgB,OAAOC,WAAaP,EAG5B,IAFAC,EAAM,IAAIL,EAAaE,EAAOE,EAAM,IACpCG,EAAI,IAAIb,EAAIkB,YAAaP,EAAK,EAAGN,EAAIO,GAC/BV,EAAI,EAAGA,EAAIG,EAAKH,IACrBW,EAAGX,GAAMF,EAAKE,QAGfW,EAAI,IAAIb,EAAIkB,YAAalB,EAAIgB,OAAQhB,EAAIe,WAAYV,EAAIO,GAE1D,IAAMV,EAAI,EAAGA,EAAIU,EAAGV,IACnBW,EAAGR,EAAIH,GAAMD,EAAOC,GAErB,OAAOW,ECrDR,IAAIM,EAAUZ,EACVa,EAAmBX,EACnBY,EAAYC,EACZC,EAAYC,EACZC,EAAaC,EACbC,EAAiBC,EA4BrB,SAAS7B,EAAM8B,GACd,IAAI5B,EACAC,EAEJ,IADAD,EAAQ,IAAI6B,MAAOC,UAAU5B,OAAO,GAC9BD,EAAI,EAAGA,EAAI6B,UAAU5B,OAAO,EAAGD,IACpCD,EAAOC,GAAM6B,UAAW7B,EAAE,GAE3B,GAAKiB,EAASU,GACb,OAAON,EAAWM,EAAY5B,GAG/B,GAAKmB,EAAkBS,GACtB,OAAOF,EAAgBE,EAAY5B,GAGpC,GACgB,OAAf4B,GACsB,iBAAfA,GACsB,iBAAtBA,EAAW1B,QAClBkB,EAAWQ,EAAW1B,SACtB0B,EAAW1B,QAAU,EAErB,OAAOsB,EAAYI,EAAY5B,GAEhC,MAAM,IAAI+B,UAAW,2GAA2GH,EAAW,MCzCzI,IAAC9B,EAAOQ","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of an array.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} items - items to add\n* @returns {Array} input array\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = push( arr, [ 6.0, 7.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( arr, items ) {\n\tvar i;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tarr.push( items[ i ] );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\nexport default push;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @param {Array} items - items to add\n* @returns {Object} input object\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* obj = push( obj, [ 3.0, 4.0 ] );\n* // returns { 'length': 4, '0': 1.0, '1': 2.0, '2': 3.0, '3': 4.0 }\n*/\nfunction push( obj, items ) {\n\tvar len;\n\tvar i;\n\tlen = obj.length;\n\tfor ( i = 0; i < items.length; i++ ) {\n\t\tobj[ len+i ] = items[ i ];\n\t}\n\tobj.length = len + items.length;\n\treturn obj;\n}\n\n\n// EXPORTS //\nexport default push;\n","import __var_0__ from '@stdlib/array/buffer';\nimport __var_1__ from '@stdlib/math/base/special/ceil2'; // TODO: nextpow2\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar ArrayBuffer = __var_0__;\nvar ceil2 = __var_1__;\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of a typed array.\n*\n* ## Notes\n*\n* -   If the underlying `ArrayBuffer` is too short, we need to copy the data to a new `ArrayBuffer`. To do so, we allocate a new `ArrayBuffer` in a manner similar to how `Arrays` are resized (i.e., allocate enough memory to hold `nextpow2(n)` elements).\n* -   Beware that, if an ArrayBuffer view is followed by one or more other views, the created view may contain elements from those views, thus resulting in possible mutation. Accordingly, providing a typed array view having a shared underlying `ArrayBuffer` may have unintended consequences (including security vulnerabilities).\n*\n* @private\n* @param {TypedArray} arr - input array\n* @param {Array} items - items to add\n* @returns {TypedArray} input array\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( arr, items ) {\n\tvar nbytes;\n\tvar ibytes;\n\tvar total;\n\tvar len;\n\tvar buf;\n\tvar n;\n\tvar v;\n\tvar i;\n\n\tlen = arr.length;\n\tn = items.length;\n\n\tnbytes = len * arr.BYTES_PER_ELEMENT;\n\tibytes = n * arr.BYTES_PER_ELEMENT;\n\ttotal = nbytes + ibytes + arr.byteOffset;\n\n\tif ( arr.buffer.byteLength < total ) {\n\t\tbuf = new ArrayBuffer( ceil2( total+1 ) );\n\t\tv = new arr.constructor( buf, 0, len+n );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv[ i ] = arr[ i ];\n\t\t}\n\t} else {\n\t\tv = new arr.constructor( arr.buffer, arr.byteOffset, len+n );\n\t}\n\tfor ( i = 0; i < n; i++ ) {\n\t\tv[ len+i ] = items[ i ];\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\nexport default push;\n","import __var_0__ from '@stdlib/assert/is-array';\nimport __var_1__ from '@stdlib/assert/is-typed-array-like';\nimport __var_2__ from '@stdlib/assert/is-integer';\nimport __var_3__ from './push_array.js';\nimport __var_4__ from './push_object.js';\nimport __var_5__ from './push_typed_array.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArray = __var_0__;\nvar isTypedArrayLike = __var_1__;\nvar isInteger = __var_2__;\nvar pushArray = __var_3__;\nvar pushObject = __var_4__;\nvar pushTypedArray = __var_5__;\n\n\n// MAIN //\n\n/**\n* Adds one or more elements to the end of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @param {...*} items - items to add\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {(Array|TypedArray|Object)} updated collection\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\nfunction push( collection ) {\n\tvar items;\n\tvar i;\n\titems = new Array( arguments.length-1 );\n\tfor ( i = 0; i < arguments.length-1; i++ ) {\n\t\titems[ i ] = arguments[ i+1 ];\n\t}\n\tif ( isArray( collection ) ) {\n\t\treturn pushArray( collection, items );\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn pushTypedArray( collection, items );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn pushObject( collection, items );\n\t}\n\tthrow new TypeError( 'invalid argument. First argument must be either an Array, Typed Array, or an array-like Object. Value: `'+collection+'`.' );\n}\n\n\n// EXPORTS //\nexport default push;\n","import __var_0__ from './push.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Add one or more elements to the end of a collection.\n*\n* @module @stdlib/utils/push\n*\n* @example\n* var push = require( '@stdlib/utils/push' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* arr = push( arr, 6.0, 7.0 );\n* // returns [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*\n* arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* arr = push( arr, 6.0, 7.0 )\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 ]\n*/\n\n// MODULES //\nvar push = __var_0__;\n\n\n// EXPORTS //\nexport default push;\n"]}