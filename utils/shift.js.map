{"version":3,"sources":["@stdlib/utils/shift/lib/shift_object.js","@stdlib/utils/shift/lib/shift_typed_array.js","@stdlib/utils/shift/lib/shift.js","@stdlib/utils/shift/lib/index.js"],"names":["shift","obj","len","v","i","length","arr","offset","byteOffset","BYTES_PER_ELEMENT","constructor","buffer","isArray","__var_0__","isTypedArrayLike","__var_1__","isInteger","__var_2__","shiftObject","__var_3__","shiftTypedArray","__var_4__","collection","TypeError"],"mappings":"kIAwCA,SAASA,EAAOC,GACf,IAAIC,EACAC,EACAC,EACJ,GAAoB,IAAfH,EAAII,OACR,MAAO,CAAEJ,OAAK,GAMf,IAJAC,EAAMD,EAAII,OAAS,EACnBF,EAAIF,EAAK,GAGHG,EAAI,EAAGA,EAAIF,EAAKE,IACrBH,EAAKG,GAAMH,EAAKG,EAAE,GAInB,cAFOH,EAAKC,GACZD,EAAII,OAASH,EACN,CAAED,EAAKE,GCjBf,SAASH,EAAOM,GACf,IAAIC,EAEAJ,EACJ,OAAoB,IAAfG,EAAID,OACD,CAAEC,OAAK,IAEfH,EAAIG,EAAK,GACTC,EAASD,EAAIE,WAAaF,EAAIG,kBAEvB,CADA,IAAIH,EAAII,YAAaJ,EAAIK,OAAQJ,EAAQD,EAAID,OAAO,GAC5CF,ICvBhB,IAAIS,EAAUC,EACVC,EAAmBC,EACnBC,EAAYC,EACZC,EAAcC,EACdC,EAAkBC,EA2BtB,SAASrB,EAAOsB,GACf,IAAInB,EACJ,GAAKS,EAASU,GAEb,OADAnB,EAAImB,EAAWtB,QACR,CAAEsB,EAAYnB,GAGtB,GAAKW,EAAkBQ,GACtB,OAAOF,EAAiBE,GAGzB,GACgB,OAAfA,GACsB,iBAAfA,GACsB,iBAAtBA,EAAWjB,QAClBW,EAAWM,EAAWjB,SACtBiB,EAAWjB,QAAU,EAErB,OAAOa,EAAaI,GAErB,MAAM,IAAIC,UAAW,iGAAiGD,EAAW,MClC/H,IAACtB,EAAQa","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the first element of an array-like object.\n*\n* @private\n* @param {Object} obj - input array-like object\n* @returns {Array} input object and the removed element\n*\n* @example\n* var obj = {\n*     'length': 2,\n*     '0': 1.0,\n*     '1': 2.0\n* };\n*\n* var out = shift( obj );\n* // returns [ { 'length': 1, '0': 2.0 }, 1.0 ]\n*/\nfunction shift( obj ) {\n\tvar len;\n\tvar v;\n\tvar i;\n\tif ( obj.length === 0 ) {\n\t\treturn [ obj, void 0 ];\n\t}\n\tlen = obj.length - 1;\n\tv = obj[ 0 ];\n\n\t// Shift all elements down...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tobj[ i ] = obj[ i+1 ];\n\t}\n\tdelete obj[ len ];\n\tobj.length = len;\n\treturn [ obj, v ];\n}\n\n\n// EXPORTS //\nexport default shift;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes and returns the first element of a typed array.\n*\n* @private\n* @param {TypedArray} arr - input array\n* @returns {Array} input array and the removed element\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = shift( arr );\n* // returns [ <Float64Array>[ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*/\nfunction shift( arr ) {\n\tvar offset;\n\tvar view;\n\tvar v;\n\tif ( arr.length === 0 ) {\n\t\treturn [ arr, void 0 ];\n\t}\n\tv = arr[ 0 ];\n\toffset = arr.byteOffset + arr.BYTES_PER_ELEMENT;\n\tview = new arr.constructor( arr.buffer, offset, arr.length-1 );\n\treturn [ view, v ];\n}\n\n\n// EXPORTS //\nexport default shift;\n","import __var_0__ from '@stdlib/assert/is-array';\nimport __var_1__ from '@stdlib/assert/is-typed-array-like';\nimport __var_2__ from '@stdlib/assert/is-integer';\nimport __var_3__ from './shift_object.js';\nimport __var_4__ from './shift_typed_array.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArray = __var_0__;\nvar isTypedArrayLike = __var_1__;\nvar isInteger = __var_2__;\nvar shiftObject = __var_3__;\nvar shiftTypedArray = __var_4__;\n\n\n// MAIN //\n\n/**\n* Removes and returns the first element of a collection.\n*\n* @param {(Array|TypedArray|Object)} collection - collection\n* @throws {TypeError} must provide either an array, typed array, or an array-like object\n* @returns {Array} updated collection and the removed element\n*\n* @example\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = shift( arr );\n* // returns [ [ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* var out = shift( arr );\n* // returns [ <Float64Array>[ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*/\nfunction shift( collection ) {\n\tvar v;\n\tif ( isArray( collection ) ) {\n\t\tv = collection.shift();\n\t\treturn [ collection, v ];\n\t}\n\t// Check for a typed-array-like object, as verifying actual typed arrays is expensive...\n\tif ( isTypedArrayLike( collection ) ) {\n\t\treturn shiftTypedArray( collection );\n\t}\n\t// Check for an array-like object...\n\tif (\n\t\tcollection !== null &&\n\t\ttypeof collection === 'object' &&\n\t\ttypeof collection.length === 'number' &&\n\t\tisInteger( collection.length ) &&\n\t\tcollection.length >= 0\n\t) {\n\t\treturn shiftObject( collection );\n\t}\n\tthrow new TypeError( 'invalid argument. Must provide either an Array, Typed Array, or an array-like Object. Value: `'+collection+'`.' );\n}\n\n\n// EXPORTS //\nexport default shift;\n","import __var_0__ from './shift.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove and return the first element of a collection.\n*\n* @module @stdlib/utils/shift\n*\n* @example\n* var shift = require( '@stdlib/utils/shift' );\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var arr = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var out = shift( arr );\n* // returns [ [ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*\n* arr = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* // returns <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*\n* out = shift( arr );\n* // returns [ <Float64Array>[ 2.0, 3.0, 4.0, 5.0 ], 1.0 ]\n*/\n\n// MODULES //\nvar shift = __var_0__;\n\n\n// EXPORTS //\nexport default shift;\n"]}