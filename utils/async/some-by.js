// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import i from"./../define-nonenumerable-read-only-property.js";import e from"./../../assert/is-function.js";import t from"./../../assert/is-collection.js";import r from"./../../assert/is-positive-integer.js";import n from"./../../constants/math/float64-pinf.js";import o from"./../../assert/is-plain-object.js";import s from"./../../assert/has-own-property.js";import l from"./../../assert/is-boolean.js";import a from"./../../vendor/debug.js";var m=o,u=s,c=l.isPrimitive,f=r.isPrimitive;function p(i,e){return m(e)?(u(e,"thisArg")&&(i.thisArg=e.thisArg),u(e,"series")&&(i.series=e.series,!c(i.series))?new TypeError("invalid option. `series` option must be a boolean primitive. Option: `"+i.series+"`."):u(e,"limit")&&(i.limit=e.limit,!f(i.limit))?new TypeError("invalid option. `limit` option must be a positive integer. Option: `"+i.limit+"`."):null):new TypeError("invalid argument. Options must be an object. Value: `"+e+"`.")}var g=a,d=g("some-by-async:limit");function h(i,e,t,r,n){var o,s,l,a,m,u,c,f;if(m=i.length,d("Collection length: %d",m),0===m)return d("Finished processing a collection."),n(null,!1);for(a=m<t.limit?m:t.limit,d("Concurrency limit: %d",a),d("Number of arguments: %d",r.length),o=m-1,s=0,u=-1,c=0,f=0;f<a;f++)u<o&&p();function p(){d("Collection element %d: %s.",u+=1,JSON.stringify(i[u])),2===r.length?r.call(t.thisArg,i[u],g):3===r.length?r.call(t.thisArg,i[u],u,g):r.call(t.thisArg,i[u],u,i,g)}function g(i,t){if(!l)return i?(l=!0,d("Encountered an error: %s",i.message),n(i)):(d("Processed %d of %d collection elements.",s+=1,m),d("Test result: %s",!!t),t&&!l&&(c+=1)===e?(l=!0,d("Finished processing a collection."),n(null,!0)):u<o?p():s===m?(d("Finished processing a collection."),n(null,!1)):void 0)}}var v=e,b=t,y=r.isPrimitive,w=n,j=p,E=h;function T(i,e){var t,r,n;if(t={},arguments.length>1){if(r=j(t,i))throw r;n=e}else n=i;if(!v(n))throw new TypeError("invalid argument. Last argument must be a function. Value: `"+n+"`.");return t.series?t.limit=1:t.limit||(t.limit=w),o;function o(i,e,r){if(!b(i))throw new TypeError("invalid argument. First argument must be a collection. Value: `"+i+".`");if(!y(e))throw new TypeError("invalid argument. Second argument must be a positive integer. Value: `"+e+"`.");if(!v(r))throw new TypeError("invalid argument. Last argument must be a function. Value: `"+r+"`.");return E(i,e,t,n,(function(i,e){if(i)return r(i,!1);r(null,e)}))}}var A=T;function V(i,e,t,r,n){if(arguments.length<5)return A(t)(i,e,r);A(t,r)(i,e,n)}var F=i,O=V,P=T;F(O,"factory",P);export default O;
//# sourceMappingURL=some-by.js.map