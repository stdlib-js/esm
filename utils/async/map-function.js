// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import i from"./../define-nonenumerable-read-only-property.js";import n from"./../../assert/is-function.js";import r from"./../../assert/is-nonnegative-integer.js";import t from"./../../constants/math/float64-pinf.js";import e from"./../../assert/is-plain-object.js";import o from"./../../assert/has-own-property.js";import s from"./../../assert/is-boolean.js";import a from"./../../assert/is-positive-integer.js";import m from"./../../vendor/debug.js";var u=e,f=o,l=s.isPrimitive,p=a.isPrimitive;function v(i,n){return u(n)?(f(n,"thisArg")&&(i.thisArg=n.thisArg),f(n,"series")&&(i.series=n.series,!l(i.series))?new TypeError("invalid option. `series` option must be a boolean primitive. Option: `"+i.series+"`."):f(n,"limit")&&(i.limit=n.limit,!p(i.limit))?new TypeError("invalid option. `limit` option must be a positive integer. Option: `"+i.limit+"`."):null):new TypeError("invalid argument. Options must be an object. Value: `"+n+"`.")}var c=m,g=c("map-function-async:limit");function d(i,n,r,t){var e,o,s,a,m,u,f;if(g("Number of invocations: %d",i),s=new Array(i),0===i)return g("Finished invoking a function."),t(null,s);for(a=i<n.limit?i:n.limit,g("Concurrency limit: %d",a),e=0,m=-1,u=i-1,f=0;f<a;f++)m<u&&l();function l(){var i;g("Invocation number: %d",i=m+=1),r.call(n.thisArg,i,(function(n,r){if(o)return;if(n)return o=!0,p(n);s[i]=r,p()}))}function p(n){return n?(g("Encountered an error: %s",n.message),t(n)):(g("Completed invocation %d of %d.",e+=1,i),m<u?l():e===i?(g("Finished invoking a function."),t(null,s)):void 0)}}var b=n,h=r.isPrimitive,y=t,w=v,j=d;function E(i,n){var r,t,e;if(r={},arguments.length>1){if(t=w(r,i))throw t;e=n}else e=i;if(!b(e))throw new TypeError("invalid argument. Last argument must be a function. Value: `"+e+"`.");return r.series?r.limit=1:r.limit||(r.limit=y),o;function o(i,n){if(!h(i))throw new TypeError("invalid argument. Number of function invocations must be a nonnegative integer. Value: `"+i+"`.");if(!b(n))throw new TypeError("invalid argument. Last argument must be a function. Value: `"+n+"`.");return j(i,r,e,(function(i,r){if(i)return n(i);n(null,r)}))}}var T=E;function A(i,n,r,t){if(arguments.length<4)return T(i)(n,r);T(r,i)(n,t)}var V=i,O=A,P=E;V(O,"factory",P);export default O;
//# sourceMappingURL=map-function.js.map