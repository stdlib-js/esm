// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import i from"./../define-nonenumerable-read-only-property.js";import e from"./../../assert/is-function.js";import r from"./../../assert/is-collection.js";import t from"./../../constants/math/float64-pinf.js";import n from"./../../assert/is-plain-object.js";import o from"./../../assert/has-own-property.js";import s from"./../../assert/is-boolean.js";import l from"./../../assert/is-positive-integer.js";import a from"./../../vendor/debug.js";var m=n,u=o,f=s.isPrimitive,c=l.isPrimitive;function p(i,e){return m(e)?(u(e,"thisArg")&&(i.thisArg=e.thisArg),u(e,"series")&&(i.series=e.series,!f(i.series))?new TypeError("invalid option. `series` option must be a boolean primitive. Option: `"+i.series+"`."):u(e,"limit")&&(i.limit=e.limit,!c(i.limit))?new TypeError("invalid option. `limit` option must be a positive integer. Option: `"+i.limit+"`."):null):new TypeError("invalid argument. Options must be an object. Value: `"+e+"`.")}var g=a,d=g("inmap-async:limit");function h(i,e,r,t){var n,o,s,l,a,m,u;if(a=i.length,d("Collection length: %d",a),0===a)return d("Finished processing a collection."),t();for(l=a<e.limit?a:e.limit,d("Concurrency limit: %d",l),d("Number of arguments: %d",r.length),n=a-1,o=0,m=-1,u=0;u<l;u++)m<n&&f();function f(){var t;function n(e,r){if(!s){if(e)return s=!0,c(e);i[t]=r,c()}}d("Collection element %d: %s.",t=m+=1,JSON.stringify(i[t])),2===r.length?r.call(e.thisArg,i[t],n):3===r.length?r.call(e.thisArg,i[t],t,n):r.call(e.thisArg,i[t],t,i,n)}function c(i){return i?(d("Encountered an error: %s",i.message),t(i)):(d("Processed %d of %d collection elements.",o+=1,a),m<n?f():o===a?(d("Finished processing a collection."),t()):void 0)}}var v=e,b=r,y=t,j=p,w=h;function E(i,e){var r,t,n;if(r={},arguments.length>1){if(t=j(r,i))throw t;n=e}else n=i;if(!v(n))throw new TypeError("invalid argument. Last argument must be a function. Value: `"+n+"`.");return r.series?r.limit=1:r.limit||(r.limit=y),o;function o(i,e){if(!b(i))throw new TypeError("invalid argument. First argument must be a collection. Value: `"+i+".`");if(!v(e))throw new TypeError("invalid argument. Last argument must be a function. Value: `"+e+"`.");return w(i,r,n,(function(r){if(r)return e(r,i);e(null,i)}))}}var A=E;function T(i,e,r,t){if(arguments.length<4)return A(e)(i,r);A(e,r)(i,t)}var O=i,V=T,C=E;O(V,"factory",C);export default V;
//# sourceMappingURL=inmap.js.map