{"version":3,"sources":["@stdlib/stats/iter/cumeanabs2/lib/main.js","@stdlib/stats/iter/cumeanabs2/lib/index.js"],"names":["setReadOnly","__var_0__","isIteratorLike","__var_1__","isFunction","__var_2__","hasOwnProp","__var_3__","iteratorSymbol","__var_4__","incrmeanabs2","__var_5__","itercumeanabs2","iterator","iter","FLG","acc","TypeError","out","v","done","next","value","NaN","arguments","length"],"mappings":"wSA2BA,IAAIA,EAAcC,EACdC,EAAiBC,EACjBC,EAAaC,EACbC,EAAaC,EACbC,EAAiBC,EACjBC,EAAeC,EAgCnB,SAASC,EAAgBC,GACxB,IAAIC,EACAC,EACAC,EACJ,IAAMd,EAAgBW,GACrB,MAAM,IAAII,UAAW,uDAAyDJ,EAAW,MAa1F,OAXAG,EAAMN,IAINV,EADAc,EAAO,GACY,QAenB,WACC,IAAII,EACAC,EACJ,GAAKJ,EACJ,MAAO,CACNK,MAAQ,GAGVF,EAAM,GAEkB,iBADxBC,EAAIN,EAASQ,QACCC,MACbJ,EAAII,MAAQN,EAAKG,EAAEG,OACRhB,EAAYa,EAAG,WAC1BD,EAAII,MAAQN,EAAKO,MAEbJ,EAAEC,MACNL,GAAM,EACNG,EAAIE,MAAO,GAEXF,EAAIE,MAAO,EAEZ,OAAOF,KAnCRlB,EAAac,EAAM,UA6CnB,SAAcQ,GAEb,GADAP,GAAM,EACDS,UAAUC,OACd,MAAO,CACNH,MAASA,EACTF,MAAQ,GAGV,MAAO,CACNA,MAAQ,MAnDLZ,GAAkBJ,EAAYS,EAAUL,KAC5CR,EAAac,EAAMN,GA4DpB,WACC,OAAOI,EAAgBC,EAAUL,SA3D3BM,ECjCL,IAACD,EAAWZ","sourcesContent":["import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/assert/is-iterator-like';\nimport __var_2__ from '@stdlib/assert/is-function';\nimport __var_3__ from '@stdlib/assert/has-own-property';\nimport __var_4__ from '@stdlib/symbol/iterator';\nimport __var_5__ from '@stdlib/stats/incr/meanabs2';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar isIteratorLike = __var_1__;\nvar isFunction = __var_2__;\nvar hasOwnProp = __var_3__;\nvar iteratorSymbol = __var_4__;\nvar incrmeanabs2 = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iteratively computes a cumulative arithmetic mean of squared absolute values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {Iterator} iterator\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumeanabs2( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction itercumeanabs2( iterator ) {\n\tvar iter;\n\tvar FLG;\n\tvar acc;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide an iterator. Value: `' + iterator + '`.' );\n\t}\n\tacc = incrmeanabs2();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tout = {};\n\t\tv = iterator.next();\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tout.value = acc( v.value );\n\t\t} else if ( hasOwnProp( v, 'value' ) ) {\n\t\t\tout.value = acc( NaN );\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\tout.done = true;\n\t\t} else {\n\t\t\tout.done = false;\n\t\t}\n\t\treturn out;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn itercumeanabs2( iterator[ iteratorSymbol ]() );\n\t}\n}\n\n\n// EXPORTS //\nexport default itercumeanabs2;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which iteratively computes a cumulative arithmetic mean of squared absolute values.\n*\n* @module @stdlib/stats/iter/cumeanabs2\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itercumeanabs2 = require( '@stdlib/stats/iter/cumeanabs2' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var it = itercumeanabs2( rand );\n*\n* var v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* v = it.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\nvar iterator = __var_0__;\n\n\n// EXPORTS //\nexport default iterator;\n"]}