{"version":3,"sources":["@stdlib/stats/iter/min/lib/main.js","@stdlib/stats/iter/min/lib/index.js"],"names":["isIteratorLike","__var_0__","hasOwnProp","__var_1__","incrmin","__var_2__","itermin","iterator","acc","v","TypeError","next","value","NaN","done","main"],"mappings":"oIAwBA,IAAIA,EAAiBC,EACjBC,EAAaC,EACbC,EAAUC,EAsBd,SAASC,EAASC,GACjB,IAAIC,EACAC,EACJ,IAAMT,EAAgBO,GACrB,MAAM,IAAIG,UAAW,uDAAuDH,EAAS,MAGtF,IADAC,EAAMJ,IAGmB,iBADxBK,EAAIF,EAASI,QACCC,MACbJ,EAAKC,EAAEG,OACIV,EAAYO,EAAG,UAC1BD,EAAKK,MAEDJ,EAAEK,OAIR,OAAON,IC3BL,IAACO,EAAOd","sourcesContent":["import __var_0__ from '@stdlib/assert/is-iterator-like';\nimport __var_1__ from '@stdlib/assert/has-own-property';\nimport __var_2__ from '@stdlib/stats/incr/min';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isIteratorLike = __var_0__;\nvar hasOwnProp = __var_1__;\nvar incrmin = __var_2__;\n\n\n// MAIN //\n\n/**\n* Computes the minimum value of all iterated values.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {(number|null)} minimum value\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermin( rand );\n* // returns <number>\n*/\nfunction itermin( iterator ) {\n\tvar acc;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide an iterator. Value: `'+iterator+'`.' );\n\t}\n\tacc = incrmin();\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( typeof v.value === 'number' ) {\n\t\t\tacc( v.value );\n\t\t} else if ( hasOwnProp( v, 'value' ) ) {\n\t\t\tacc( NaN );\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn acc();\n}\n\n\n// EXPORTS //\nexport default itermin;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the minimum value of all iterated values.\n*\n* @module @stdlib/stats/iter/min\n*\n* @example\n* var runif = require( '@stdlib/random/iter/uniform' );\n* var itermin = require( '@stdlib/stats/iter/min' );\n*\n* var rand = runif( -10.0, 10.0, {\n*     'iter': 100\n* });\n*\n* var m = itermin( rand );\n* // returns <number>\n*/\n\n// MODULES //\nvar main = __var_0__;\n\n\n// EXPORTS //\nexport default main;\n"]}