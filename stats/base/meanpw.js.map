{"version":3,"sources":["@stdlib/stats/base/meanpw/lib/meanpw.js","@stdlib/stats/base/meanpw/lib/ndarray.js","@stdlib/stats/base/meanpw/lib/main.js","@stdlib/stats/base/meanpw/lib/index.js"],"names":["gsumpw","__var_0__","meanpw","N","x","stride","NaN","ndarray","offset","setReadOnly","__var_1__","__var_2__"],"mappings":"uHAsBA,IAAIA,EAASC,EAoBb,SAASC,EAAQC,EAAGC,EAAGC,GACtB,OAAKF,GAAK,EACFG,IAEG,IAANH,GAAsB,IAAXE,EACRD,EAAG,GAEJJ,EAAQG,EAAGC,EAAGC,GAAWF,EC3BjC,IAAIH,EAASC,EAAUM,QAuBvB,SAASL,EAAQC,EAAGC,EAAGC,EAAQG,GAC9B,OAAKL,GAAK,EACFG,IAEG,IAANH,GAAsB,IAAXE,EACRD,EAAGI,GAEJR,EAAQG,EAAGC,EAAGC,EAAQG,GAAWL,EC5BzC,IAAIM,EAAcR,EACdC,EAASQ,EACTH,EAAUI,EAKdF,EAAaP,EAAQ,UAAWK,GCgB7B,IAACL,EAASD","sourcesContent":["import __var_0__ from '@stdlib/blas/ext/base/gsumpw';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar gsumpw = __var_0__;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using pairwise summation.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} arithmetic mean\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = meanpw( N, x, 1 );\n* // returns ~0.3333\n*/\nfunction meanpw( N, x, stride ) {\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\treturn gsumpw( N, x, stride ) / N;\n}\n\n\n// EXPORTS //\nexport default meanpw;\n","import __var_0__ from '@stdlib/blas/ext/base/gsumpw';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar gsumpw = __var_0__.ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the arithmetic mean of a strided array using pairwise summation.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} arithmetic mean\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = meanpw( N, x, 2, 1 );\n* // returns 1.25\n*/\nfunction meanpw( N, x, stride, offset ) {\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\treturn gsumpw( N, x, stride, offset ) / N;\n}\n\n\n// EXPORTS //\nexport default meanpw;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './meanpw.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar meanpw = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( meanpw, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default meanpw;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the arithmetic mean of a strided array using pairwise summation.\n*\n* @module @stdlib/stats/base/meanpw\n*\n* @example\n* var meanpw = require( '@stdlib/stats/base/meanpw' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = meanpw( N, x, 1 );\n* // returns ~0.3333\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var meanpw = require( '@stdlib/stats/base/meanpw' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = meanpw.ndarray( N, x, 2, 1 );\n* // returns 1.25\n*/\n\n// MODULES //\nvar meanpw = __var_0__;\n\n\n// EXPORTS //\nexport default meanpw;\n"]}