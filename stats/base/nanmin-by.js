// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./../../utils/define-nonenumerable-read-only-property.js";import a from"./../../math/base/assert/is-nan.js";import e from"./../../math/base/assert/is-negative-zero.js";var o=a,i=e;function t(r,a,e,t,n){var f,l,u,v;if(r<=0)return NaN;if(1===r||0===e)return void 0===(u=t.call(n,a[0],0,0,a))?NaN:u;for(l=e<0?(1-r)*e:0,v=0;v<r&&((f=t.call(n,a[l],v,l,a))!=f||void 0===f);v++)l+=e;if(v===r)return NaN;for(v+=1;v<r;v++)l+=e,void 0===(u=t.call(n,a[l],v,l,a))||o(u)||(u<f||u===f&&i(u))&&(f=u);return f}var n=a,f=e;function l(r,a,e,o,i,t){var l,u,v,s;if(r<=0)return NaN;if(1===r||0===e)return void 0===(v=i.call(t,a[0],0,0,a))?NaN:v;for(u=o,s=0;s<r&&((l=i.call(t,a[u],s,u,a))!=l||void 0===l);s++)u+=e;if(s===r)return NaN;for(s+=1;s<r;s++)u+=e,void 0===(v=i.call(t,a[u],s,u,a))||n(v)||(v<l||v===l&&f(v))&&(l=v);return l}var u=r,v=t,s=l;u(v,"ndarray",s);var N=v;export default N;
//# sourceMappingURL=nanmin-by.js.map