{"version":3,"sources":["@stdlib/stats/base/max/lib/max.js","@stdlib/stats/base/max/lib/ndarray.js","@stdlib/stats/base/max/lib/main.js","@stdlib/stats/base/max/lib/index.js"],"names":["isnan","__var_0__","isPositiveZero","__var_1__","max","N","x","stride","ix","v","i","NaN","offset","setReadOnly","ndarray","__var_2__"],"mappings":"sLAuBA,IAAIA,EAAQC,EACRC,EAAiBC,EAoBrB,SAASC,EAAKC,EAAGC,EAAGC,GACnB,IAAIH,EACAI,EACAC,EACAC,EAEJ,GAAKL,GAAK,EACT,OAAOM,IAER,GAAW,IAANN,GAAsB,IAAXE,EACf,OAAOD,EAAG,GAQX,IADAF,EAAME,EAJLE,EADID,EAAS,GACP,EAAEF,GAAKE,EAER,GAGAG,EAAI,EAAGA,EAAIL,EAAGK,IAAM,CAGzB,GADAD,EAAIH,EADJE,GAAMD,GAEDP,EAAOS,GACX,OAAOA,GAEHA,EAAIL,GAASK,IAAML,GAAOF,EAAgBO,MAC9CL,EAAMK,GAGR,OAAOL,ECjDR,IAAIJ,EAAQC,EACRC,EAAiBC,EAuBrB,SAASC,EAAKC,EAAGC,EAAGC,EAAQK,GAC3B,IAAIR,EACAI,EACAC,EACAC,EAEJ,GAAKL,GAAK,EACT,OAAOM,IAER,GAAW,IAANN,GAAsB,IAAXE,EACf,OAAOD,EAAGM,GAIX,IADAR,EAAME,EADNE,EAAKI,GAECF,EAAI,EAAGA,EAAIL,EAAGK,IAAM,CAGzB,GADAD,EAAIH,EADJE,GAAMD,GAEDP,EAAOS,GACX,OAAOA,GAEHA,EAAIL,GAASK,IAAML,GAAOF,EAAgBO,MAC9CL,EAAMK,GAGR,OAAOL,EC/CR,IAAIS,EAAcZ,EACdG,EAAMD,EACNW,EAAUC,EAKdF,EAAaT,EAAK,UAAWU,GCgB1B,IAACV,EAAMH","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/assert/is-positive-zero';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar isPositiveZero = __var_1__;\n\n\n// MAIN //\n\n/**\n* Computes the maximum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} maximum value\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = max( N, x, 1 );\n* // returns 2.0\n*/\nfunction max( N, x, stride ) {\n\tvar max;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ 0 ];\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tmax = x[ ix ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max;\n}\n\n\n// EXPORTS //\nexport default max;\n","import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/assert/is-positive-zero';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar isPositiveZero = __var_1__;\n\n\n// MAIN //\n\n/**\n* Computes the maximum value of a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} maximum value\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = max( N, x, 2, 1 );\n* // returns 4.0\n*/\nfunction max( N, x, stride, offset ) {\n\tvar max;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\treturn x[ offset ];\n\t}\n\tix = offset;\n\tmax = x[ ix ];\n\tfor ( i = 1; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = x[ ix ];\n\t\tif ( isnan( v ) ) {\n\t\t\treturn v;\n\t\t}\n\t\tif ( v > max || ( v === max && isPositiveZero( v ) ) ) {\n\t\t\tmax = v;\n\t\t}\n\t}\n\treturn max;\n}\n\n\n// EXPORTS //\nexport default max;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './max.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar max = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( max, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default max;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the maximum value of a strided array.\n*\n* @module @stdlib/stats/base/max\n*\n* @example\n* var max = require( '@stdlib/stats/base/max' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n* var N = x.length;\n*\n* var v = max( N, x, 1 );\n* // returns 2.0\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n* var max = require( '@stdlib/stats/base/max' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n* var N = floor( x.length / 2 );\n*\n* var v = max.ndarray( N, x, 2, 1 );\n* // returns 4.0\n*/\n\n// MODULES //\nvar max = __var_0__;\n\n\n// EXPORTS //\nexport default max;\n"]}