{"version":3,"sources":["@stdlib/stats/base/sstdevwd/lib/sstdevwd.js","@stdlib/stats/base/sstdevwd/lib/ndarray.js","@stdlib/stats/base/sstdevwd/lib/index.js"],"names":["float64ToFloat32","__var_0__","svariancewd","__var_1__","sqrt","__var_2__","sstdevwd","N","correction","x","stride","ndarray","offset","setReadOnly"],"mappings":"kNAwBA,IAAIA,EAAmBC,EACnBC,EAAcC,EACdC,EAAOC,EA4BX,SAASC,EAAUC,EAAGC,EAAYC,EAAGC,GACpC,OAAOV,EAAkBI,EAAMF,EAAaK,EAAGC,EAAYC,EAAGC,KC/B/D,IAAIV,EAAmBC,EACnBC,EAAcC,EAAUQ,QACxBP,EAAOC,EA8BX,SAASC,EAAUC,EAAGC,EAAYC,EAAGC,EAAQE,GAC5C,OAAOZ,EAAkBI,EAAMF,EAAaK,EAAGC,EAAYC,EAAGC,EAAQE,KCjCvE,IAAIC,EAAcZ,EACdK,EAAWH,EACXQ,EAAUN,EAKdQ,EAAaP,EAAU,UAAWK","sourcesContent":["import __var_0__ from '@stdlib/number/float64/base/to-float32';\nimport __var_1__ from '@stdlib/stats/base/svariancewd';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar float64ToFloat32 = __var_0__;\nvar svariancewd = __var_1__;\nvar sqrt = __var_2__;\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a single-precision floating-point strided array using Welford's algorithm.\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float32Array} x - input array\n* @param {integer} stride - stride length\n* @returns {number} standard deviation\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var x = new Float32Array( [ 1.0, -2.0, 2.0 ] );\n* var N = x.length;\n*\n* var v = sstdevwd( N, 1, x, 1 );\n* // returns ~2.0817\n*/\nfunction sstdevwd( N, correction, x, stride ) {\n\treturn float64ToFloat32( sqrt( svariancewd( N, correction, x, stride ) ) );\n}\n\n\n// EXPORTS //\nexport default sstdevwd;\n","import __var_0__ from '@stdlib/number/float64/base/to-float32';\nimport __var_1__ from '@stdlib/stats/base/svariancewd';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar float64ToFloat32 = __var_0__;\nvar svariancewd = __var_1__.ndarray;\nvar sqrt = __var_2__;\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a single-precision floating-point strided array using Welford's algorithm.\n*\n* ## References\n*\n* -   Welford, B. P. 1962. \"Note on a Method for Calculating Corrected Sums of Squares and Products.\" _Technometrics_ 4 (3). Taylor & Francis: 419–20. doi:[10.1080/00401706.1962.10490022](https://doi.org/10.1080/00401706.1962.10490022).\n* -   van Reeken, A. J. 1968. \"Letters to the Editor: Dealing with Neely's Algorithms.\" _Communications of the ACM_ 11 (3): 149–50. doi:[10.1145/362929.362961](https://doi.org/10.1145/362929.362961).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float32Array} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} standard deviation\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = new Float32Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n* var N = floor( x.length / 2 );\n*\n* var v = sstdevwd( N, 1, x, 2, 1 );\n* // returns 2.5\n*/\nfunction sstdevwd( N, correction, x, stride, offset ) {\n\treturn float64ToFloat32( sqrt( svariancewd( N, correction, x, stride, offset ) ) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\nexport default sstdevwd;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './sstdevwd.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar sstdevwd = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( sstdevwd, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default sstdevwd;\n"]}