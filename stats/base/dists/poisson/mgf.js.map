{"version":3,"sources":["@stdlib/stats/base/dists/poisson/mgf/lib/mgf.js","@stdlib/stats/base/dists/poisson/mgf/lib/factory.js","@stdlib/stats/base/dists/poisson/mgf/lib/index.js"],"names":["isnan","__var_0__","exp","__var_1__","mgf","t","lambda","NaN","constantFunction","__var_2__","factory","setReadOnly"],"mappings":"oPAuBA,IAAIA,EAAQC,EACRC,EAAMC,EAgCV,SAASC,EAAKC,EAAGC,GAChB,OAAKN,EAAOK,IAAOL,EAAOM,IAAYA,GAAU,EACxCC,IAEDL,EAAKI,GAAWJ,EAAIG,GAAK,ICpCjC,IAAIG,EAAmBP,EACnBD,EAAQG,EACRD,EAAMO,EAgBV,SAASC,EAASJ,GACjB,OAAKN,EAAOM,IAAYA,GAAU,EAC1BE,EAAkBD,KAe1B,SAAcF,GACb,OAAOH,EAAKI,GAAWJ,EAAIG,GAAK,KCpBlC,IAAIM,EAAcV,EACdG,EAAMD,EACNO,EAAUD,EAKdE,EAAaP,EAAK,UAAWM","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/exp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar exp = __var_1__;\n\n\n// MAIN //\n\n/**\n* Evaluates the moment-generating function (MGF) for a Poisson distribution with mean parameter `lambda` at a value `t`.\n*\n* @param {number} t - input value\n* @param {PositiveNumber} lambda - mean parameter\n* @returns {number} evaluated MGF\n*\n* @example\n* var y = mgf( 1.0, 1.5 );\n* // returns ~13.163\n*\n* @example\n* var y = mgf( 0.5, 0.5 );\n* // returns ~1.383\n*\n* @example\n* var y = mgf( NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = mgf( -2.0, -1.0 );\n* // returns NaN\n*/\nfunction mgf( t, lambda ) {\n\tif ( isnan( t ) || isnan( lambda ) || lambda <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\treturn exp( lambda * ( exp(t) - 1.0 ) );\n}\n\n\n// EXPORTS //\nexport default mgf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/exp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar exp = __var_2__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the moment-generating function (MGF) of a Poisson distribution with mean parameter `lambda`.\n*\n* @param {PositiveNumber} lambda - mean parameter\n* @returns {Function} MGF\n*\n* @example\n* var mgf = factory( 2.0 );\n* var y = mgf( 0.1 );\n* // returns ~1.234\n*/\nfunction factory( lambda ) {\n\tif ( isnan( lambda ) || lambda <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn mgf;\n\n\t/**\n\t* Evaluates the moment-generating function (MGF) for a Poisson distribution.\n\t*\n\t* @private\n\t* @param {number} t - input value\n\t* @returns {number} evaluated MGF\n\t*\n\t* @example\n\t* var y = mgf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction mgf( t ) {\n\t\treturn exp( lambda * ( exp(t) - 1.0 ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './mgf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the moment-generating function (MGF) for a Poisson distribution.\n*\n* @module @stdlib/stats/base/dists/poisson/mgf\n*\n* @example\n* var mgf = require( '@stdlib/stats/base/dists/poisson/mgf' );\n*\n* var v = mgf( 0.5, 0.5 );\n* // returns ~1.383\n*\n* var mymgf = mgf.factory( 2.0 );\n* y = mymgf( 0.1 );\n* // returns ~1.234\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar mgf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( mgf, 'factory', factory );\n\n\n// EXPORTS //\nexport default mgf;\n"]}