// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import t from"./../../../../utils/define-property.js";import r from"./../../../../utils/define-nonenumerable-read-only-property.js";import o from"./../../../../utils/define-nonenumerable-read-only-accessor.js";import e from"./../../../../assert/is-positive-number.js";import n from"./entropy.js";import i from"./kurtosis.js";import m from"./mean.js";import a from"./median.js";import s from"./mode.js";import p from"./skewness.js";import u from"./stdev.js";import f from"./variance.js";import l from"./cdf.js";import d from"./logpmf.js";import b from"./mgf.js";import c from"./pmf.js";import y from"./quantile.js";var h=t,j=r,v=o,g=e.isPrimitive,w=n,k=i,q=m,E=a,M=s,T=p,V=u,x=f,P=l,z=d,A=b,B=c,C=y;function D(t){return P(t,this.lambda)}function F(t){return z(t,this.lambda)}function G(t){return A(t,this.lambda)}function H(t){return B(t,this.lambda)}function I(t){return C(t,this.lambda)}function J(){var t;if(!(this instanceof J))return 0===arguments.length?new J:new J(arguments[0]);if(arguments.length){if(!g(t=arguments[0]))throw new TypeError("invalid argument. Mean parameter `lambda` must be a positive number. Value: `"+t+"`")}else t=1;return h(this,"lambda",{configurable:!1,enumerable:!0,get:function(){return t},set:function(r){if(!g(r))throw new TypeError("invalid value. Must be a positive number. Value: `"+r+"`");t=r}}),this}v(J.prototype,"entropy",(function(){return w(this.lambda)})),v(J.prototype,"kurtosis",(function(){return k(this.lambda)})),v(J.prototype,"mean",(function(){return q(this.lambda)})),v(J.prototype,"median",(function(){return E(this.lambda)})),v(J.prototype,"mode",(function(){return M(this.lambda)})),v(J.prototype,"skewness",(function(){return T(this.lambda)})),v(J.prototype,"stdev",(function(){return V(this.lambda)})),v(J.prototype,"variance",(function(){return x(this.lambda)})),j(J.prototype,"cdf",D),j(J.prototype,"logpmf",F),j(J.prototype,"mgf",G),j(J.prototype,"pmf",H),j(J.prototype,"quantile",I);var K=J;export default K;
//# sourceMappingURL=ctor.js.map