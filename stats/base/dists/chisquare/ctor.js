// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import t from"./../../../../utils/define-property.js";import r from"./../../../../utils/define-nonenumerable-read-only-property.js";import e from"./../../../../utils/define-nonenumerable-read-only-accessor.js";import o from"./../../../../assert/is-positive-number.js";import n from"./entropy.js";import i from"./kurtosis.js";import s from"./mean.js";import p from"./median.js";import u from"./mode.js";import m from"./skewness.js";import f from"./stdev.js";import a from"./variance.js";import c from"./cdf.js";import l from"./mgf.js";import y from"./pdf.js";import h from"./quantile.js";var d=t,k=r,j=e,v=o.isPrimitive,b=n,w=i,g=s,q=p,E=u,T=m,V=f,x=a,M=c,P=l,R=y,z=h;function A(t){return M(t,this.k)}function B(t){return P(t,this.k)}function C(t){return R(t,this.k)}function D(t){return z(t,this.k)}function F(){var t;if(!(this instanceof F))return 0===arguments.length?new F:new F(arguments[0]);if(arguments.length){if(!v(t=arguments[0]))throw new TypeError("invalid argument. Rate parameter `k` must be a positive number. Value: `"+t+"`")}else t=1;return d(this,"k",{configurable:!1,enumerable:!0,get:function(){return t},set:function(r){if(!v(r))throw new TypeError("invalid value. Must be a positive number. Value: `"+r+"`");t=r}}),this}j(F.prototype,"entropy",(function(){return b(this.k)})),j(F.prototype,"kurtosis",(function(){return w(this.k)})),j(F.prototype,"mean",(function(){return g(this.k)})),j(F.prototype,"median",(function(){return q(this.k)})),j(F.prototype,"mode",(function(){return E(this.k)})),j(F.prototype,"skewness",(function(){return T(this.k)})),j(F.prototype,"stdev",(function(){return V(this.k)})),j(F.prototype,"variance",(function(){return x(this.k)})),k(F.prototype,"cdf",A),k(F.prototype,"mgf",B),k(F.prototype,"pdf",C),k(F.prototype,"quantile",D);var G=F;export default G;
//# sourceMappingURL=ctor.js.map