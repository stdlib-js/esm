{"version":3,"sources":["@stdlib/stats/base/dists/cosine/logcdf/lib/logcdf.js","@stdlib/stats/base/dists/cosine/logcdf/lib/factory.js","@stdlib/stats/base/dists/cosine/logcdf/lib/index.js"],"names":["isnan","__var_0__","sinpi","__var_1__","ln","__var_2__","NINF","__var_3__","PI","__var_4__","logcdf","x","mu","s","z","NaN","constantFunction","degenerate","factory","__var_5__","__var_6__","setReadOnly"],"mappings":"0cA0BA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAKC,EACLC,EAAOC,EACPC,EAAKC,EAqCT,SAASC,EAAQC,EAAGC,EAAIC,GACvB,IAAIC,EACJ,OACCd,EAAOW,IACPX,EAAOY,IACPZ,EAAOa,IACPA,EAAI,EAEGE,IAEG,IAANF,EACKF,EAAIC,EAAON,EAAO,EAEvBK,EAAIC,EAAKC,EACNP,EAEHK,EAAIC,EAAKC,EACN,EAGDT,GAAM,GADbU,GAAMH,EAAIC,GAAOC,GACQX,EAAOY,GAAMN,GAAS,GC3DhD,IAAIQ,EAAmBf,EACnBgB,EAAad,EAAUe,QACvBlB,EAAQK,EACRH,EAAQK,EACRH,EAAKK,EACLH,EAAOa,EACPX,EAAKY,EAqBT,SAASF,EAASN,EAAIC,GACrB,OAAKb,EAAOY,IAAQZ,EAAOa,IAAOA,EAAI,EAC9BG,EAAkBD,KAEf,IAANF,EACGI,EAAYL,GAepB,SAAiBD,GAChB,IAAIG,EACJ,GAAKd,EAAOW,GACX,OAAOI,IAER,GAAKJ,EAAIC,EAAKC,EACb,OAAOP,EAER,GAAKK,EAAIC,EAAKC,EACb,OAAO,EAGR,OAAOT,GAAM,GADbU,GAAMH,EAAIC,GAAOC,GACQX,EAAOY,GAAMN,GAAS,IC9CjD,IAAIa,EAAcpB,EACdS,EAASP,EACTe,EAAUb,EAKdgB,EAAaX,EAAQ,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/sinpi';\nimport __var_2__ from '@stdlib/math/base/special/ln';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\nimport __var_4__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar sinpi = __var_1__;\nvar ln = __var_2__;\nvar NINF = __var_3__;\nvar PI = __var_4__;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (CDF) for a raised cosine distribution with location parameter `mu` and scale parameter `s` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 0.5, 0.0, 1.0 );\n* // returns ~-0.095\n*\n* @example\n* var y = logcdf( 1.2, 0.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var y = logcdf( -0.9, 0.0, 1.0 );\n* // returns ~-7.108\n*\n* @example\n* var y = logcdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*/\nfunction logcdf( x, mu, s ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( s ) ||\n\t\ts < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn ( x < mu ) ? NINF : 0.0;\n\t}\n\tif ( x < mu - s ) {\n\t\treturn NINF;\n\t}\n\tif ( x > mu + s ) {\n\t\treturn 0.0;\n\t}\n\tz = ( x - mu ) / s;\n\treturn ln( ( 1.0 + z + ( sinpi( z ) / PI ) ) / 2.0 );\n}\n\n\n// EXPORTS //\nexport default logcdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/stats/base/dists/degenerate/logcdf';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\nimport __var_3__ from '@stdlib/math/base/special/sinpi';\nimport __var_4__ from '@stdlib/math/base/special/ln';\nimport __var_5__ from '@stdlib/constants/math/float64-ninf';\nimport __var_6__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar degenerate = __var_1__.factory;\nvar isnan = __var_2__;\nvar sinpi = __var_3__;\nvar ln = __var_4__;\nvar NINF = __var_5__;\nvar PI = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the cumulative distribution function (CDF) for a raised cosine distribution with location parameter `mu` and scale parameter `s`.\n*\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 3.0, 1.5 );\n*\n* var y = logcdf( 1.9 );\n* // returns ~-4.2\n*\n* y = logcdf( 4.0 );\n* // returns ~-0.029\n*/\nfunction factory( mu, s ) {\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the cumulative distribution function (CDF) for a raised cosine distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < mu - s ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tif ( x > mu + s ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tz = ( x - mu ) / s;\n\t\treturn ln( ( 1.0 + z + ( sinpi( z ) / PI ) ) / 2.0 );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logcdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of cumulative distribution function (CDF) for a raised cosine distribution.\n*\n* @module @stdlib/stats/base/dists/cosine/logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats/base/dists/cosine/logcdf' );\n*\n* var y = logcdf( 0.5, 0.0, 1.0 );\n* // returns ~-0.095\n*\n* var mylogcdf = logcdf.factory( 3.0, 1.5 );\n*\n* y = mylogcdf( 4.0 );\n* // returns ~--0.029\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logcdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logcdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logcdf;\n"]}