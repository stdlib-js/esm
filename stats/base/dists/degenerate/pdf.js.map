{"version":3,"sources":["@stdlib/stats/base/dists/degenerate/pdf/lib/pdf.js","@stdlib/stats/base/dists/degenerate/pdf/lib/factory.js","@stdlib/stats/base/dists/degenerate/pdf/lib/index.js"],"names":["PINF","__var_0__","isnan","__var_1__","pdf","x","mu","NaN","constantFunction","__var_2__","factory","setReadOnly"],"mappings":"0PAuBA,IAAIA,EAAOC,EACPC,EAAQC,EA4BZ,SAASC,EAAKC,EAAGC,GAChB,OAAKJ,EAAOG,IAAOH,EAAOI,GAClBC,IAECF,IAAMC,EAAON,EAAO,EChC9B,IAAIQ,EAAmBP,EACnBD,EAAOG,EACPD,EAAQO,EAoBZ,SAASC,EAASJ,GACjB,OAAKJ,EAAOI,GACJE,EAAkBD,KAe1B,SAAcF,GACb,GAAKH,EAAOG,GACX,OAAOE,IAER,OAASF,IAAMC,EAAON,EAAO,GCvB/B,IAAIW,EAAcV,EACdG,EAAMD,EACNO,EAAUD,EAKdE,EAAaP,EAAK,UAAWM","sourcesContent":["import __var_0__ from '@stdlib/constants/math/float64-pinf';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar PINF = __var_0__;\nvar isnan = __var_1__;\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a degenerate distribution centered at `mu`.\n*\n* @param {number} x - input value\n* @param {number} mu - constant value of the distribution\n* @returns {number} evaluated probability density function\n*\n* @example\n* var y = pdf( 2.0, 3.0 );\n* // returns 0.0\n*\n* @example\n* var y = pdf( 3.0, 3.0 );\n* // returns Infinity\n*\n* @example\n* var y = pdf( NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, NaN );\n* // returns NaN\n*/\nfunction pdf( x, mu ) {\n\tif ( isnan( x ) || isnan( mu ) ) {\n\t\treturn NaN;\n\t}\n\treturn ( x === mu ) ? PINF : 0.0;\n}\n\n\n// EXPORTS //\nexport default pdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/constants/math/float64-pinf';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar PINF = __var_1__;\nvar isnan = __var_2__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) of a degenerate distribution centered at a provided mean value.\n*\n* @param {number} mu - value at which to center the distribution\n* @returns {Function} function to evaluate the probability density function\n*\n* @example\n* var pdf = factory( 5.0 );\n*\n* var y = pdf( 0.0 );\n* // returns 0.0\n*\n* y = pdf( 5.0 );\n* // returns Infinity\n*/\nfunction factory( mu ) {\n\tif ( isnan( mu ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) of a degenerate distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated probability density function\n\t*\n\t* @example\n\t* var y = pdf( 10.0 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn ( x === mu ) ? PINF : 0.0;\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './pdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Degenerate distribution probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/degenerate/pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats/base/dists/degenerate/pdf' );\n*\n* var y = pdf( 2.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/degenerate/pdf' ).factory;\n*\n* var pdf = factory( 10.0 );\n*\n* var y = pdf( 10.0 );\n* // returns Infinity\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar pdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default pdf;\n"]}