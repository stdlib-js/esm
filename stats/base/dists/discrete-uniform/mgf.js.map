{"version":3,"sources":["@stdlib/stats/base/dists/discrete-uniform/mgf/lib/mgf.js","@stdlib/stats/base/dists/discrete-uniform/mgf/lib/factory.js","@stdlib/stats/base/dists/discrete-uniform/mgf/lib/index.js"],"names":["isInteger","__var_0__","isnan","__var_1__","expm1","__var_2__","exp","__var_3__","mgf","t","a","b","ret","n","NaN","constantFunction","__var_4__","factory","setReadOnly"],"mappings":"wWAyBA,IAAIA,EAAYC,EACZC,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EA6CV,SAASC,EAAKC,EAAGC,EAAGC,GACnB,IAAIC,EACAC,EACJ,OACCX,EAAOO,IACPP,EAAOQ,IACPR,EAAOS,KACNX,EAAWU,KACXV,EAAWW,IACZD,EAAIC,EAEGG,IAEG,IAANL,EACG,GAGRI,EAAIF,EAAID,EAAI,EACZE,EAAMN,EAAKG,EAAEC,GAAMN,EAAOK,EAAEI,GAC5BD,GAAOC,EAAIT,EAAOK,IClEnB,IAAIM,EAAmBd,EACnBD,EAAYG,EACZD,EAAQG,EACRD,EAAQG,EACRD,EAAMU,EAoBV,SAASC,EAASP,EAAGC,GACpB,IAAIE,EACJ,OACCX,EAAOQ,IACPR,EAAOS,KACNX,EAAWU,KACXV,EAAWW,IACZD,EAAIC,EAEGI,EAAkBD,MAE1BD,EAAIF,EAAID,EAAI,EAcZ,SAAcD,GACb,IAAIG,EACJ,GAAKV,EAAOO,GACX,OAAOK,IAER,GAAW,IAANL,EACJ,OAAO,EAKR,OAFAG,EAAMN,EAAKG,EAAEC,GAAMN,EAAOK,EAAEI,GAC5BD,GAAOC,EAAIT,EAAOK,KCpCpB,IAAIS,EAAcjB,EACdO,EAAML,EACNc,EAAUZ,EAKda,EAAaV,EAAK,UAAWS","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-integer';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/expm1';\nimport __var_3__ from '@stdlib/math/base/special/exp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isInteger = __var_0__;\nvar isnan = __var_1__;\nvar expm1 = __var_2__;\nvar exp = __var_3__;\n\n\n// MAIN //\n\n/**\n* Evaluates the moment-generating function (MGF) of a discrete uniform distribution with minimum support `a` and maximum support `b` at a value `t`.\n*\n* @param {number} t - input value\n* @param {integer} a - minimum support\n* @param {integer} b - maximum support\n* @returns {number} evaluated MGF\n*\n* @example\n* var y = mgf( 2.0, 0, 4 );\n* // returns ~689.475\n*\n* @example\n* var y = mgf( -0.2, 0, 4 );\n* // returns ~0.697\n*\n* @example\n* var y = mgf( 2.0, 0, 1 );\n* // returns ~4.195\n*\n* @example\n* var y = mgf( 0.5, 3, 3 );\n* // returns ~4.482\n*\n* @example\n* var y = mgf( 0.5, 3, 2 );\n* // returns NaN\n*\n* @example\n* var y = mgf( NaN, 0, 1 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, NaN, 1 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, 0, NaN );\n* // returns NaN\n*/\nfunction mgf( t, a, b ) {\n\tvar ret;\n\tvar n;\n\tif (\n\t\tisnan( t ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\t!isInteger( a ) ||\n\t\t!isInteger( b ) ||\n\t\ta > b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( t === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\t// Case: t not equal to zero\n\tn = b - a + 1;\n\tret = exp( t*a ) * expm1( t*n );\n\tret /= n * expm1( t );\n\treturn ret;\n}\n\n\n// EXPORTS //\nexport default mgf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-integer';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\nimport __var_3__ from '@stdlib/math/base/special/expm1';\nimport __var_4__ from '@stdlib/math/base/special/exp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isInteger = __var_1__;\nvar isnan = __var_2__;\nvar expm1 = __var_3__;\nvar exp = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the moment-generating function (MGF) of a discrete uniform distribution with minimum support `a` and maximum support `b`.\n*\n* @param {integer} a - minimum support\n* @param {integer} b - maximum support\n* @returns {Function} MGF\n*\n* @example\n* var mgf = factory( 6, 7 );\n* var y = mgf( 0.1 );\n* // returns ~1.918\n*\n* y = mgf( 1.1 );\n* // returns ~1471.722\n*/\nfunction factory( a, b ) {\n\tvar n;\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\t!isInteger( a ) ||\n\t\t!isInteger( b ) ||\n\t\ta > b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tn = b - a + 1;\n\treturn mgf;\n\n\t/**\n\t* Evaluates the moment-generating function (MGF) of a discrete uniform distribution.\n\t*\n\t* @private\n\t* @param {number} t - input value\n\t* @returns {number} evaluated MGF\n\t*\n\t* @example\n\t* var y = mgf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction mgf( t ) {\n\t\tvar ret;\n\t\tif ( isnan( t ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( t === 0.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\t// Case: t not equal to zero\n\t\tret = exp( t*a ) * expm1( t*n );\n\t\tret /= n * expm1( t );\n\t\treturn ret;\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './mgf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the moment-generating function (MGF) of a discrete uniform distribution.\n*\n* @module @stdlib/stats/base/dists/discrete-uniform/mgf\n*\n* @example\n* var mgf = require( '@stdlib/stats/base/dists/discrete-uniform/mgf' );\n*\n* var y = mgf( 2.0, 0, 4 );\n* // returns ~689.475\n*\n* y = mgf( -0.2, 0, 4 );\n* // returns ~0.697\n*\n* y = mgf( 2.0, 0, 1 );\n* // returns ~4.195\n*\n* var mymgf = mgf.factory( 6, 7 );\n* y = mymgf( 0.1 );\n* // returns ~1.918\n*\n* y = mymgf( 1.1 );\n* // returns ~1471.722\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar mgf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( mgf, 'factory', factory );\n\n\n// EXPORTS //\nexport default mgf;\n"]}