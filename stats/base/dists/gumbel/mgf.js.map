{"version":3,"sources":["@stdlib/stats/base/dists/gumbel/mgf/lib/mgf.js","@stdlib/stats/base/dists/gumbel/mgf/lib/factory.js","@stdlib/stats/base/dists/gumbel/mgf/lib/index.js"],"names":["isnan","__var_0__","gamma","__var_1__","exp","__var_2__","mgf","t","mu","beta","NaN","constantFunction","__var_3__","factory","setReadOnly"],"mappings":"4SAwBA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EA0CV,SAASC,EAAKC,EAAGC,EAAIC,GACpB,OACCT,EAAOO,IACPP,EAAOQ,IACPR,EAAOS,IACPA,GAAQ,GACRF,GAAK,EAAIE,EAEFC,IAEDR,EAAO,EAAOO,EAAOF,GAAOH,EAAKI,EAAKD,GCrD9C,IAAII,EAAmBV,EACnBD,EAAQG,EACRD,EAAQG,EACRD,EAAMQ,EAqBV,SAASC,EAASL,EAAIC,GACrB,OACCT,EAAOQ,IACPR,EAAOS,IACPA,GAAQ,EAEDE,EAAkBD,KAe1B,SAAcH,GACb,GAAKA,GAAK,EAAIE,EACb,OAAOC,IAER,OAAOR,EAAO,EAAOO,EAAOF,GAAOH,EAAKI,EAAKD,ICxB/C,IAAIO,EAAcb,EACdK,EAAMH,EACNU,EAAUR,EAKdS,EAAaR,EAAK,UAAWO","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/gamma';\nimport __var_2__ from '@stdlib/math/base/special/exp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar gamma = __var_1__;\nvar exp = __var_2__;\n\n\n// MAIN //\n\n/**\n* Evaluates the moment-generating function (MGF) for a Gumbel distribution with location parameter `mu` and scale parameter `b` at a value `t`.\n*\n* @param {number} t - input value\n* @param {number} mu - mean\n* @param {PositiveNumber} beta - scale parameter\n* @returns {number} evaluated MGF\n*\n* @example\n* var y = mgf( -1.0, 0.0, 3.0 );\n* // returns 6.0\n*\n* @example\n* var y = mgf( 0.1, 0.0, 3.0 );\n* // returns ~1.298\n*\n* @example\n* var y = mgf( 0.0, 0.0, 1.0 );\n* // returns 1.0\n*\n* @example\n* var y = mgf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Non-positive scale parameter:\n* var y = mgf( 0.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction mgf( t, mu, beta ) {\n\tif (\n\t\tisnan( t ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( beta ) ||\n\t\tbeta <= 0.0 ||\n\t\tt >= 1.0/beta\n\t) {\n\t\treturn NaN;\n\t}\n\treturn gamma( 1.0 - (beta * t) ) * exp( mu * t );\n}\n\n\n// EXPORTS //\nexport default mgf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/gamma';\nimport __var_3__ from '@stdlib/math/base/special/exp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar gamma = __var_2__;\nvar exp = __var_3__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the moment-generating function (MGF) of a Gumbel distribution with location parameter `mu` and scale parameter `b`.\n*\n* @param {number} mu - mean\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} MGF\n*\n* @example\n* var mgf = factory( 0.0, 3.0 );\n*\n* var y = mgf( 0.2 );\n* // returns ~2.218\n*\n* y = mgf( -1.0 );\n* // returns 6.0\n*/\nfunction factory( mu, beta ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( beta ) ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn mgf;\n\n\t/**\n\t* Evaluates the moment-generating function (MGF) for a Gumbel distribution.\n\t*\n\t* @private\n\t* @param {number} t - input value\n\t* @returns {number} evaluated MGF\n\t*\n\t* @example\n\t* var y = mgf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction mgf( t ) {\n\t\tif ( t >= 1.0/beta ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn gamma( 1.0 - (beta * t) ) * exp( mu * t );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './mgf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the moment-generating function (MGF) for a Gumbel distribution.\n*\n* @module @stdlib/stats/base/dists/gumbel/mgf\n*\n* @example\n* var mgf = require( '@stdlib/stats/base/dists/gumbel/mgf' );\n*\n* var y = mgf( -1.0, 0.0, 3.0 );\n* // returns 6.0\n*\n* y = mgf( 0.1, 0.0, 3.0 );\n* // returns ~1.298\n*\n* y = mgf( 0.0, 0.0, 1.0 );\n* // returns 1.0\n*\n* var myMGF = mgf.factory( 0.0, 3.0 );\n*\n* y = myMGF( -1.5 );\n* // returns ~52.343\n*\n* y = myMGF( -1.0 );\n* // returns 6.0\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar mgf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( mgf, 'factory', factory );\n\n\n// EXPORTS //\nexport default mgf;\n"]}