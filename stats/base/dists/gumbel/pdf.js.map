{"version":3,"sources":["@stdlib/stats/base/dists/gumbel/pdf/lib/pdf.js","@stdlib/stats/base/dists/gumbel/pdf/lib/factory.js","@stdlib/stats/base/dists/gumbel/pdf/lib/index.js"],"names":["isnan","__var_0__","exp","__var_1__","NINF","__var_2__","pdf","x","mu","beta","z","NaN","constantFunction","__var_3__","factory","setReadOnly"],"mappings":"gTAwBA,IAAIA,EAAQC,EACRC,EAAMC,EACNC,EAAOC,EA0CX,SAASC,EAAKC,EAAGC,EAAIC,GACpB,IAAIC,EACJ,OACCV,EAAOO,IACPP,EAAOQ,IACPR,EAAOS,IACPA,GAAQ,EAEDE,IAEHJ,IAAMH,EACH,EAGC,EAAMK,EAASP,IADxBQ,GAAMH,EAAIC,GAAOC,GACiBP,GAAMQ,ICzDzC,IAAIE,EAAmBX,EACnBD,EAAQG,EACRD,EAAMG,EACND,EAAOS,EAqBX,SAASC,EAASN,EAAIC,GACrB,OAAKT,EAAOQ,IAAQR,EAAOS,IAAUA,GAAQ,EACrCG,EAAkBD,KAe1B,SAAcJ,GACb,IAAIG,EACJ,GAAKV,EAAOO,GACX,OAAOI,IAER,GAAKJ,IAAMH,EACV,OAAO,EAGR,OAAS,EAAMK,EAASP,IADxBQ,GAAMH,EAAIC,GAAOC,GACiBP,GAAMQ,KChC1C,IAAIK,EAAcd,EACdK,EAAMH,EACNW,EAAUT,EAKdU,EAAaT,EAAK,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/exp';\nimport __var_2__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar exp = __var_1__;\nvar NINF = __var_2__;\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a Gumbel distribution with location parameter `mu` and scale parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {number} evaluated PDF\n*\n* @example\n* var y = pdf( 0.0, 0.0, 2.0 );\n* // returns ~0.184\n*\n* @example\n* var y = pdf( 0.0, 0.0, 1.0 );\n* // returns ~0.368\n*\n* @example\n* var y = pdf( 1.0, 3.0, 2.0 );\n* // returns ~0.09\n*\n* @example\n* var y = pdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = pdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction pdf( x, mu, beta ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( beta ) ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === NINF ) {\n\t\treturn 0.0;\n\t}\n\tz = ( x - mu ) / beta;\n\treturn ( 1.0 / beta ) * exp( -z - exp( -z ) );\n}\n\n\n// EXPORTS //\nexport default pdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/exp';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar exp = __var_2__;\nvar NINF = __var_3__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a Gumbel distribution with location parameter `mu` and scale parameter `beta`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 4.0, 2.0 );\n*\n* var y = pdf( 10.0 );\n* // returns ~0.0237\n*\n* y = pdf( 3.0 );\n* // returns ~0.159\n*/\nfunction factory( mu, beta ) {\n\tif ( isnan( mu ) || isnan( beta ) || beta <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a Gumbel distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( 2.3 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === NINF ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tz = ( x - mu ) / beta;\n\t\treturn ( 1.0 / beta ) * exp( -z - exp( -z ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './pdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Gumbel distribution probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/gumbel/pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats/base/dists/gumbel/pdf' );\n*\n* var y = pdf( 2.0, 0.0, 1.0 );\n* // returns ~0.118\n*\n* var myPDF = pdf.factory( 10.0, 2.0 );\n* y = myPDF( 10.0 );\n* // returns ~0.184\n*\n* y = myPDF( 12.0 );\n* // returns ~0.127\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar pdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default pdf;\n"]}