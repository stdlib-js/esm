{"version":3,"sources":["@stdlib/stats/base/dists/invgamma/logpdf/lib/logpdf.js","@stdlib/stats/base/dists/invgamma/logpdf/lib/factory.js","@stdlib/stats/base/dists/invgamma/logpdf/lib/index.js"],"names":["gammaln","__var_0__","isnan","__var_1__","ln","__var_2__","NINF","__var_3__","logpdf","x","alpha","beta","out","NaN","constantFunction","__var_4__","factory","firstTerm","setReadOnly"],"mappings":"yWAyBA,IAAIA,EAAUC,EACVC,EAAQC,EACRC,EAAKC,EACLC,EAAOC,EA+CX,SAASC,EAAQC,EAAGC,EAAOC,GAC1B,IAAIC,EACJ,OACCV,EAAOO,IACPP,EAAOQ,IACPR,EAAOS,IACPD,GAAS,GACTC,GAAQ,EAEDE,IAEHJ,GAAK,EACFH,GAERM,EAAOF,EAAQN,EAAIO,GAAUX,EAASU,GACtCE,IAAQF,EAAQ,GAAON,EAAIK,GAC3BG,GAAOD,EAAOF,GCjEf,IAAIK,EAAmBb,EACnBD,EAAUG,EACVD,EAAQG,EACRD,EAAKG,EACLD,EAAOS,EAqBX,SAASC,EAASN,EAAOC,GACxB,IAAIM,EACJ,OACCf,EAAOQ,IACPR,EAAOS,IACPD,GAAS,GACTC,GAAQ,EAEDG,EAAkBD,MAE1BI,EAAcP,EAAQN,EAAIO,GAAWX,EAASU,GAc9C,SAAiBD,GAEhB,GAAKP,EAAOO,GACX,OAAOI,IAER,GAAKJ,GAAK,EACT,OAAOH,EAGR,OADMW,GAAgBP,EAAQ,GAAQN,EAAIK,GAAUE,EAAOF,IC3C7D,IAAIS,EAAcjB,EACdO,EAASL,EACTa,EAAUX,EAKda,EAAaV,EAAQ,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/gammaln';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/ln';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar gammaln = __var_0__;\nvar isnan = __var_1__;\nvar ln = __var_2__;\nvar NINF = __var_3__;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF) for an inverse gamma distribution with shape parameter `alpha` and scale parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {number} evaluated logPDF\n*\n* @example\n* var y = logpdf( 2.0, 0.5, 1.0 );\n* // returns ~-2.112\n*\n* @example\n* var y = logpdf( 0.2, 1.0, 1.0 );\n* // returns ~-1.781\n*\n* @example\n* var y = logpdf( -1.0, 4.0, 2.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logpdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, 1.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative shape parameter:\n* var y = logpdf( 2.0, -1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = logpdf( 2.0, 1.0, -1.0 );\n* // returns NaN\n*/\nfunction logpdf( x, alpha, beta ) {\n\tvar out;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn NINF;\n\t}\n\tout = (alpha * ln( beta )) - gammaln( alpha );\n\tout -= (alpha + 1.0) * ln( x );\n\tout -= beta / x;\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default logpdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/special/gammaln';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\nimport __var_3__ from '@stdlib/math/base/special/ln';\nimport __var_4__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar gammaln = __var_1__;\nvar isnan = __var_2__;\nvar ln = __var_3__;\nvar NINF = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the probability density function (PDF) for an inverse gamma distribution with shape parameter `alpha` and scale parameter `beta`.\n*\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} logPDF\n*\n* @example\n* var logpdf = factory( 3.0, 1.5 );\n*\n* var y = logpdf( 1.0 );\n* // returns ~-0.977\n*\n* y = logpdf( 2.0 );\n* // returns ~-3.0\n*/\nfunction factory( alpha, beta ) {\n\tvar firstTerm;\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tfirstTerm = ( alpha * ln( beta ) ) - gammaln( alpha );\n\treturn logpdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the probability density function (PDF) for an inverse gamma distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logPDF\n\t*\n\t* @example\n\t* var y = logpdf( -1.2 );\n\t* // returns <number>\n\t*/\n\tfunction logpdf( x ) {\n\t\tvar out;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tout = firstTerm - ( ( alpha + 1.0 ) * ln( x ) ) - ( beta / x );\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logpdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the probability density function (PDF) for an inverse gamma distribution.\n*\n* @module @stdlib/stats/base/dists/invgamma/logpdf\n*\n* @example\n* var logpdf = require( '@stdlib/stats/base/dists/invgamma/logpdf' );\n*\n* var y = logpdf( 2.0, 0.5, 1.0 );\n* // returns ~-2.112\n*\n* var mylogPDF = logpdf.factory( 6.0, 7.0 );\n* y = mylogPDF( 2.0 );\n* // returns ~-1.464\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logpdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logpdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logpdf;\n"]}