// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import t from"./../../../../utils/define-property.js";import e from"./../../../../utils/define-nonenumerable-read-only-property.js";import r from"./../../../../utils/define-nonenumerable-read-only-accessor.js";import i from"./../../../../assert/is-positive-number.js";import o from"./entropy.js";import n from"./kurtosis.js";import a from"./mean.js";import s from"./mode.js";import p from"./quantile.js";import u from"./logpdf.js";import f from"./skewness.js";import m from"./stdev.js";import h from"./variance.js";import l from"./cdf.js";import b from"./pdf.js";var c=t,d=e,y=r,v=i.isPrimitive,j=o,w=n,g=a,k=s,E=p,T=u,V=f,q=m,M=h,x=l,F=b;function P(t){return x(t,this.alpha,this.beta)}function S(t){return T(t,this.alpha,this.beta)}function z(t){return F(t,this.alpha,this.beta)}function A(t){return E(t,this.alpha,this.beta)}function B(){var t,e;if(!(this instanceof B))return 0===arguments.length?new B:new B(arguments[0],arguments[1]);if(arguments.length){if(e=arguments[1],!v(t=arguments[0]))throw new TypeError("invalid argument. First shape parameter `alpha` must be a positive number. Value: `"+t+"`");if(!v(e))throw new TypeError("invalid argument. Second shape parameter `beta` must be a positive number. Value: `"+e+"`")}else t=1,e=1;return c(this,"alpha",{configurable:!1,enumerable:!0,get:function(){return t},set:function(e){if(!v(e))throw new TypeError("invalid value. Must be a positive number. Value: `"+e+"`");t=e}}),c(this,"beta",{configurable:!1,enumerable:!0,get:function(){return e},set:function(t){if(!v(t))throw new TypeError("invalid value. Must be a positive number. Value: `"+t+"`");e=t}}),this}y(B.prototype,"entropy",(function(){return j(this.alpha,this.beta)})),y(B.prototype,"kurtosis",(function(){return w(this.alpha,this.beta)})),y(B.prototype,"mean",(function(){return g(this.alpha,this.beta)})),y(B.prototype,"mode",(function(){return k(this.alpha,this.beta)})),y(B.prototype,"skewness",(function(){return V(this.alpha,this.beta)})),y(B.prototype,"stdev",(function(){return q(this.alpha,this.beta)})),y(B.prototype,"variance",(function(){return M(this.alpha,this.beta)})),d(B.prototype,"cdf",P),d(B.prototype,"logpdf",S),d(B.prototype,"pdf",z),d(B.prototype,"quantile",A);var C=B;export default C;
//# sourceMappingURL=ctor.js.map