// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import t from"./../../../../utils/define-property.js";import r from"./../../../../utils/define-nonenumerable-read-only-property.js";import e from"./../../../../utils/define-nonenumerable-read-only-accessor.js";import o from"./../../../../assert/is-positive-number.js";import n from"./entropy.js";import i from"./kurtosis.js";import s from"./mean.js";import p from"./mode.js";import u from"./skewness.js";import f from"./stdev.js";import m from"./variance.js";import a from"./cdf.js";import c from"./logpdf.js";import l from"./pdf.js";import y from"./quantile.js";var d=t,h=r,k=e,j=o.isPrimitive,v=n,b=i,w=s,g=p,q=u,E=f,T=m,V=a,x=c,M=l,P=y;function R(t){return V(t,this.k)}function z(t){return x(t,this.k)}function A(t){return M(t,this.k)}function B(t){return P(t,this.k)}function C(){var t;if(!(this instanceof C))return 0===arguments.length?new C:new C(arguments[0]);if(arguments.length){if(!j(t=arguments[0]))throw new TypeError("invalid argument. Rate parameter `k` must be a positive number. Value: `"+t+"`")}else t=1;return d(this,"k",{configurable:!1,enumerable:!0,get:function(){return t},set:function(r){if(!j(r))throw new TypeError("invalid value. Must be a positive number. Value: `"+r+"`");t=r}}),this}k(C.prototype,"entropy",(function(){return v(this.k)})),k(C.prototype,"kurtosis",(function(){return b(this.k)})),k(C.prototype,"mean",(function(){return w(this.k)})),k(C.prototype,"mode",(function(){return g(this.k)})),k(C.prototype,"skewness",(function(){return q(this.k)})),k(C.prototype,"stdev",(function(){return E(this.k)})),k(C.prototype,"variance",(function(){return T(this.k)})),h(C.prototype,"cdf",R),h(C.prototype,"logpdf",z),h(C.prototype,"pdf",A),h(C.prototype,"quantile",B);var D=C;export default D;
//# sourceMappingURL=ctor.js.map