{"version":3,"sources":["@stdlib/stats/base/dists/binomial/entropy/lib/entropy.js","@stdlib/stats/base/dists/binomial/entropy/lib/index.js"],"names":["isNonNegativeInteger","__var_0__","isnan","__var_1__","exp","__var_2__","ln","__var_3__","PINF","__var_4__","entropy","n","p","nlq","out","i","q","NaN"],"mappings":"uSA0BA,IAAIA,EAAuBC,EACvBC,EAAQC,EACRC,EAAMC,EACNC,EAAKC,EACLC,EAAOC,EAgCX,SAASC,EAASC,EAAGC,GACpB,IAAIC,EACAC,EACAC,EACAC,EAEJ,GACCd,EAAOS,IACPT,EAAOU,IACPA,EAAI,GACJA,EAAI,IACHZ,EAAsBW,IACvBA,IAAMH,EAEN,OAAOS,IAER,GAAW,IAANL,GAAiB,IAANA,GAAiB,IAAND,EAC1B,OAAO,EAKR,IAFAE,EAAMF,EAAIL,EADVU,EAAI,EAAMJ,GAEVE,EAAMV,EAAKS,GAAQA,EACbE,EAAI,EAAGA,GAAKJ,EAAGI,IACpBF,GAAOP,GAAMK,EAAII,EAAI,GAAMA,GAAMT,EAAIM,EAAII,GACzCF,GAAOV,EAAKS,GAAQA,EAErB,OAAQC,ECnDN,IAACJ,EAAUT","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nonnegative-integer';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/exp';\nimport __var_3__ from '@stdlib/math/base/special/ln';\nimport __var_4__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNonNegativeInteger = __var_0__;\nvar isnan = __var_1__;\nvar exp = __var_2__;\nvar ln = __var_3__;\nvar PINF = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns the entropy of a binomial distribution.\n*\n* @param {NonNegativeInteger} n - number of trials\n* @param {Probability} p - success probability\n* @returns {number} entropy\n*\n* @example\n* var v = entropy( 100, 0.1 );\n* // returns ~2.511\n*\n* @example\n* var v = entropy( 20, 0.5 );\n* // returns ~2.223\n*\n* @example\n* var v = entropy( 10.3, 0.5 );\n* // returns NaN\n*\n* @example\n* var v = entropy( 20, 1.1 );\n* // returns NaN\n*\n* @example\n* var v = entropy( 20, NaN );\n* // returns NaN\n*/\nfunction entropy( n, p ) {\n\tvar nlq;\n\tvar out;\n\tvar i;\n\tvar q;\n\n\tif (\n\t\tisnan( n ) ||\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0 ||\n\t\t!isNonNegativeInteger( n ) ||\n\t\tn === PINF\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( p === 0 || p === 1 || n === 0 ) {\n\t\treturn 0.0;\n\t}\n\tq = 1.0 - p;\n\tnlq = n * ln( q );\n\tout = exp( nlq ) * nlq;\n\tfor ( i = 1; i <= n; i++ ) {\n\t\tnlq += ln( ( n - i + 1 ) / i ) + ln( p / q );\n\t\tout += exp( nlq ) * nlq;\n\t}\n\treturn -out;\n}\n\n\n// EXPORTS //\nexport default entropy;\n","import __var_0__ from './entropy.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Binomial distribution entropy.\n*\n* @module @stdlib/stats/base/dists/binomial/entropy\n*\n* @example\n* var entropy = require( '@stdlib/stats/base/dists/binomial/entropy' );\n*\n* var v = entropy( 100, 0.1 );\n* // returns ~0.051\n*\n* v = entropy( 20, 0.5 );\n* // returns ~-0.1\n*/\n\n// MODULES //\nvar entropy = __var_0__;\n\n\n// EXPORTS //\nexport default entropy;\n"]}