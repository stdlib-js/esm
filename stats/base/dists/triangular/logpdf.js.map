{"version":3,"sources":["@stdlib/stats/base/dists/triangular/logpdf/lib/logpdf.js","@stdlib/stats/base/dists/triangular/logpdf/lib/factory.js","@stdlib/stats/base/dists/triangular/logpdf/lib/index.js"],"names":["isnan","__var_0__","ln","__var_1__","NINF","__var_2__","LN2","__var_3__","logpdf","x","a","b","c","denom1","denom2","denom3","NaN","constantFunction","__var_4__","factory","setReadOnly"],"mappings":"6WAyBA,IAAIA,EAAQC,EACRC,EAAKC,EACLC,EAAOC,EACPC,EAAMC,EAkDV,SAASC,EAAQC,EAAGC,EAAGC,EAAGC,GACzB,IAAIC,EACAC,EACAC,EAEJ,OACCf,EAAOS,IACPT,EAAOU,IACPV,EAAOW,IACPX,EAAOY,IACPF,EAAIE,GACJA,EAAID,EAEGK,IAEHP,EAAIC,EACDN,GAERS,EAASX,EAAIS,EAAID,GAAMR,EAAIU,EAAIF,GAC/BI,EAASZ,EAAIS,EAAID,GACjBK,EAASb,EAAIS,EAAID,GAAMR,EAAIS,EAAIC,GAG1BH,EAAIG,EACDN,EAAMJ,EAAIO,EAAIC,GAAMG,EAEvBJ,IAAMG,EACHN,EAAMQ,EAGTL,GAAKE,EACFL,EAAMJ,EAAIS,EAAIF,GAAMM,EAGrBX,GCtFR,IAAIa,EAAmBhB,EACnBD,EAAQG,EACRD,EAAKG,EACLD,EAAOG,EACPD,EAAMY,EAqBV,SAASC,EAAST,EAAGC,EAAGC,GACvB,IAAIC,EACAC,EACAC,EAEJ,OACCf,EAAOU,IACPV,EAAOW,IACPX,EAAOY,IACPF,EAAIE,GACJA,EAAID,EAEGM,EAAkBD,MAG1BH,EAASX,EAAIS,EAAID,GAAMR,EAAIU,EAAIF,GAC/BI,EAASZ,EAAIS,EAAID,GACjBK,EAASb,EAAIS,EAAID,GAAMR,EAAIS,EAAIC,GAc/B,SAAiBH,GAChB,GAAKT,EAAOS,GACX,OAAOO,IAER,GAAKP,EAAIC,EACR,OAAON,EAGR,GAAKK,EAAIG,EACR,OAAON,EAAMJ,EAAIO,EAAIC,GAAMG,EAE5B,GAAKJ,IAAMG,EACV,OAAON,EAAMQ,EAGd,GAAKL,GAAKE,EACT,OAAOL,EAAMJ,EAAIS,EAAIF,GAAMM,EAG5B,OAAOX,ICpDT,IAAIgB,EAAcnB,EACdO,EAASL,EACTgB,EAAUd,EAKde,EAAaZ,EAAQ,UAAWW","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/ln';\nimport __var_2__ from '@stdlib/constants/math/float64-ninf';\nimport __var_3__ from '@stdlib/constants/math/float64-ln-two';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar ln = __var_1__;\nvar NINF = __var_2__;\nvar LN2 = __var_3__;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF) for a triangular distribution with lower limit `a` and upper limit `b` and mode `c` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {number} evaluated logPDF\n*\n* @example\n* var y = logpdf( 0.5, -1.0, 1.0, 0.0 );\n* // returns ~-0.693\n*\n* @example\n* var y = logpdf( 0.5, -1.0, 1.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var y = logpdf( -10.0, -20.0, 0.0, -2.0 );\n* // returns ~-2.89\n*\n* @example\n* var y = logpdf( -2.0, -1.0, 1.0, 0.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logpdf( NaN, 0.0, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, NaN, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, 0.0, NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 2.0, 1.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 2.0, 1.0, 0.0, 1.5 );\n* // returns NaN\n*/\nfunction logpdf( x, a, b, c ) {\n\tvar denom1;\n\tvar denom2;\n\tvar denom3;\n\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c ) ||\n\t\ta > c ||\n\t\tc > b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a ) {\n\t\treturn NINF;\n\t}\n\tdenom1 = ln( b - a ) + ln( c - a );\n\tdenom2 = ln( b - a );\n\tdenom3 = ln( b - a ) + ln( b - c );\n\n\t// Case: x >= a\n\tif ( x < c ) {\n\t\treturn LN2 + ln( x - a ) - denom1;\n\t}\n\tif ( x === c ) {\n\t\treturn LN2 - denom2;\n\t}\n\t// Case: x > c\n\tif ( x <= b ) {\n\t\treturn LN2 + ln( b - x ) - denom3;\n\t}\n\t// Case: x > b\n\treturn NINF;\n}\n\n\n// EXPORTS //\nexport default logpdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/ln';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\nimport __var_4__ from '@stdlib/constants/math/float64-ln-two';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar ln = __var_2__;\nvar NINF = __var_3__;\nvar LN2 = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the probability density function (PDF) for a triangular distribution with lower limit `a` and upper limit `b` and mode `c`.\n*\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {Function} logPDF\n*\n* @example\n* var logpdf = factory( 0.0, 10.0, 5.0 );\n* var y = logpdf( 2.0 );\n* // returns ~-2.526\n*\n* y = logpdf( 12.0 );\n* // returns -Infinity\n*/\nfunction factory( a, b, c ) {\n\tvar denom1;\n\tvar denom2;\n\tvar denom3;\n\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c ) ||\n\t\ta > c ||\n\t\tc > b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\n\tdenom1 = ln( b - a ) + ln( c - a );\n\tdenom2 = ln( b - a );\n\tdenom3 = ln( b - a ) + ln( b - c );\n\treturn logpdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the probability density function (PDF) for a triangular distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logPDF\n\t*\n\t* @example\n\t* var y = logpdf( 12.0 );\n\t* // returns <number>\n\t*/\n\tfunction logpdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a ) {\n\t\t\treturn NINF;\n\t\t}\n\t\t// Case: x >= a\n\t\tif ( x < c ) {\n\t\t\treturn LN2 + ln( x - a ) - denom1;\n\t\t}\n\t\tif ( x === c ) {\n\t\t\treturn LN2 - denom2;\n\t\t}\n\t\t// Case: x > c\n\t\tif ( x <= b ) {\n\t\t\treturn LN2 + ln( b - x ) - denom3;\n\t\t}\n\t\t// Case: x > b\n\t\treturn NINF;\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logpdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Triangular distribution logarithm of probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/triangular/logpdf\n*\n* @example\n* var logpdf = require( '@stdlib/stats/base/dists/triangular/logpdf' );\n*\n* var y = logpdf( 0.5, -1.0, 1.0, 0.0 );\n* // returns ~-0.693\n*\n* y = logpdf( 0.5, -1.0, 1.0, 0.5 );\n* // returns 0.0\n*\n* y = logpdf( -10.0, -20.0, 0.0, -2.0 );\n* // returns ~-2.89\n*\n* var mylogpdf = logpdf.factory( 0.0, 10.0, 5.0 );\n* y = mylogpdf( 2.0 );\n* // returns ~-2.526\n*\n* y = mylogpdf( 12.0 );\n* // returns -Infinity\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logpdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logpdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logpdf;\n"]}