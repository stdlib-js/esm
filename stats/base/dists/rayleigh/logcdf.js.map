{"version":3,"sources":["@stdlib/stats/base/dists/rayleigh/logcdf/lib/logcdf.js","@stdlib/stats/base/dists/rayleigh/logcdf/lib/factory.js","@stdlib/stats/base/dists/rayleigh/logcdf/lib/index.js"],"names":["expm1","__var_0__","isnan","__var_1__","log1p","__var_2__","exp","__var_3__","pow","__var_4__","ln","__var_5__","LNHALF","__var_6__","NINF","__var_7__","logcdf","x","sigma","s2","p","NaN","constantFunction","degenerate","factory","__var_8__","__var_9__","setReadOnly"],"mappings":"mnBA6BA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EACNC,EAAMC,EACNC,EAAKC,EACLC,EAASC,EACTC,EAAOC,EAqCX,SAASC,EAAQC,EAAGC,GACnB,IAAIC,EACAC,EACJ,OACClB,EAAOe,IACPf,EAAOgB,IACPA,EAAQ,EAEDG,IAEO,IAAVH,EACKD,EAAI,EAAQH,EAAO,EAExBG,EAAI,EACDH,GAERK,EAAKX,EAAKU,EAAO,IACjBE,GAAKZ,EAAKS,EAAG,IAAU,EAAME,IAChBP,EAAWR,GAAQE,EAAKc,IAAQV,GAAKV,EAAOoB,KC5D1D,IAAIE,EAAmBrB,EACnBsB,EAAapB,EAAUqB,QACvBxB,EAAQK,EACRH,EAAQK,EACRH,EAAQK,EACRH,EAAMK,EACNH,EAAMK,EACNH,EAAKK,EACLH,EAASa,EACTX,EAAOY,EAmBX,SAASF,EAASN,GACjB,IAAIC,EACJ,OAAKjB,EAAOgB,IAAWA,EAAQ,EACvBI,EAAkBD,KAEX,IAAVH,EACGK,EAAY,IAEpBJ,EAAKX,EAAKU,EAAO,GAcjB,SAAiBD,GAChB,IAAIG,EACJ,GAAKlB,EAAOe,GACX,OAAOI,IAER,GAAKJ,EAAI,EACR,OAAOH,EAGR,OADAM,GAAKZ,EAAKS,EAAG,IAAU,EAAME,IAChBP,EAAWR,GAAQE,EAAKc,IAAQV,GAAKV,EAAOoB,MC/C3D,IAAIO,EAAc1B,EACde,EAASb,EACTqB,EAAUnB,EAKdsB,EAAaX,EAAQ,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/expm1';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/log1p';\nimport __var_3__ from '@stdlib/math/base/special/exp';\nimport __var_4__ from '@stdlib/math/base/special/pow';\nimport __var_5__ from '@stdlib/math/base/special/ln';\nimport __var_6__ from '@stdlib/constants/math/float64-ln-half';\nimport __var_7__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar expm1 = __var_0__;\nvar isnan = __var_1__;\nvar log1p = __var_2__;\nvar exp = __var_3__;\nvar pow = __var_4__;\nvar ln = __var_5__;\nvar LNHALF = __var_6__;\nvar NINF = __var_7__;\n\n\n// MAIN //\n\n/**\n* Evaluates the logarithm of the cumulative distribution function (CDF) for a Rayleigh distribution with scale parameter `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {NonNegativeNumber} sigma - scale parameter\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 2.0, 3.0 );\n* // returns ~-1.613\n*\n* @example\n* var y = logcdf( 1.0, 2.0 );\n* // returns ~-2.141\n*\n* @example\n* var y = logcdf( -1.0, 4.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logcdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = logcdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction logcdf( x, sigma ) {\n\tvar s2;\n\tvar p;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn ( x < 0.0 ) ? NINF : 0.0;\n\t}\n\tif ( x < 0.0 ) {\n\t\treturn NINF;\n\t}\n\ts2 = pow( sigma, 2.0 );\n\tp = -pow( x, 2.0 ) / ( 2.0 * s2 );\n\treturn ( p < LNHALF ) ? log1p( -exp( p ) ) : ln( -expm1( p ) );\n}\n\n\n// EXPORTS //\nexport default logcdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/stats/base/dists/degenerate/logcdf';\nimport __var_2__ from '@stdlib/math/base/special/expm1';\nimport __var_3__ from '@stdlib/math/base/assert/is-nan';\nimport __var_4__ from '@stdlib/math/base/special/log1p';\nimport __var_5__ from '@stdlib/math/base/special/exp';\nimport __var_6__ from '@stdlib/math/base/special/pow';\nimport __var_7__ from '@stdlib/math/base/special/ln';\nimport __var_8__ from '@stdlib/constants/math/float64-ln-half';\nimport __var_9__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar degenerate = __var_1__.factory;\nvar expm1 = __var_2__;\nvar isnan = __var_3__;\nvar log1p = __var_4__;\nvar exp = __var_5__;\nvar pow = __var_6__;\nvar ln = __var_7__;\nvar LNHALF = __var_8__;\nvar NINF = __var_9__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the logarithm of the cumulative distribution function (CDF) for a Rayleigh distribution with scale parameter `sigma`.\n*\n* @param {NonNegativeNumber} sigma - scale parameter\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 2.0 );\n* var y = logcdf( 3.0 );\n* // returns ~-0.393\n*\n* y = logcdf( 1.0 );\n* // returns ~-2.141\n*/\nfunction factory( sigma ) {\n\tvar s2;\n\tif ( isnan( sigma ) || sigma < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn degenerate( 0.0 );\n\t}\n\ts2 = pow( sigma, 2.0 );\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the logarithm of the cumulative distribution function (CDF) for a Rayleigh distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tvar p;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tp = -pow( x, 2.0 ) / ( 2.0 * s2 );\n\t\treturn ( p < LNHALF ) ? log1p( -exp( p ) ) : ln( -expm1( p ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logcdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Rayleigh distribution logarithm of cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/rayleigh/logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats/base/dists/rayleigh/logcdf' );\n*\n* var y = logcdf( 2.0, 5.0 );\n* // returns ~-2.564\n*\n* var mylogcdf = logcdf.factory( 0.5 );\n* y = mylogcdf( 1.0 );\n* // returns ~-0.145\n*\n* y = mylogcdf( 0.5 );\n* // returns ~-0.934\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logcdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logcdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logcdf;\n"]}