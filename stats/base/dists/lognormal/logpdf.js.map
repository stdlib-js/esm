{"version":3,"sources":["@stdlib/stats/base/dists/lognormal/logpdf/lib/logpdf.js","@stdlib/stats/base/dists/lognormal/logpdf/lib/factory.js","@stdlib/stats/base/dists/lognormal/logpdf/lib/index.js"],"names":["isnan","__var_0__","pow","__var_1__","ln","__var_2__","NINF","__var_3__","PI","__var_4__","logpdf","x","mu","sigma","s2","B","NaN","constantFunction","__var_5__","factory","A","setReadOnly"],"mappings":"+ZA0BA,IAAIA,EAAQC,EACRC,EAAMC,EACNC,EAAKC,EACLC,EAAOC,EACPC,EAAKC,EA8CT,SAASC,EAAQC,EAAGC,EAAIC,GACvB,IAAIC,EAEAC,EACJ,OACCf,EAAOW,IACPX,EAAOY,IACPZ,EAAOa,IACPA,GAAS,EAEFG,IAEHL,GAAK,EACFL,GAIRS,GAAK,GAAQ,GAFbD,EAAKZ,EAAKW,EAAO,MACZ,GAAMT,EAAI,EAAMU,EAAKN,GAEfJ,EAAIO,GAAQI,EAAIb,EAAKE,EAAGO,GAAKC,EAAI,ICnE7C,IAAIK,EAAmBhB,EACnBD,EAAQG,EACRD,EAAMG,EACND,EAAKG,EACLD,EAAOG,EACPD,EAAKU,EAoBT,SAASC,EAASP,EAAIC,GACrB,IAAIC,EACAM,EACAL,EACJ,OACCf,EAAOY,IACPZ,EAAOa,IACPA,GAAS,EAEFI,EAAkBD,MAE1BF,EAAKZ,EAAKW,EAAO,GACjBO,GAAK,GAAMhB,EAAI,EAAMU,EAAKN,GAC1BO,GAAK,GAAQ,EAAMD,GAcnB,SAAiBH,GAChB,GAAKX,EAAOW,GACX,OAAOK,IAER,GAAKL,GAAK,EACT,OAAOL,EAER,OAAOc,EAAIhB,EAAIO,GAAQI,EAAIb,EAAKE,EAAGO,GAAKC,EAAI,KCrC9C,IAAIS,EAAcpB,EACdS,EAASP,EACTgB,EAAUd,EAKdgB,EAAaX,EAAQ,UAAWS","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/pow';\nimport __var_2__ from '@stdlib/math/base/special/ln';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\nimport __var_4__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar pow = __var_1__;\nvar ln = __var_2__;\nvar NINF = __var_3__;\nvar PI = __var_4__;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF) for a lognormal distribution with location parameter `mu` and scale parameter `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {number} evaluated logPDF\n*\n* @example\n* var y = logpdf( 2.0, 0.0, 1.0 );\n* // returns ~-1.852\n*\n* @example\n* var y = logpdf( 1.0, 0.0, 1.0 );\n* // returns ~-0.919\n*\n* @example\n* var y = logpdf( 1.0, 3.0, 1.0 );\n* // returns ~-5.419\n*\n* @example\n* var y = logpdf( -1.0, 4.0, 2.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logpdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = logpdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction logpdf( x, mu, sigma ) {\n\tvar s2;\n\tvar A;\n\tvar B;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn NINF;\n\t}\n\ts2 = pow( sigma, 2.0 );\n\tA = -0.5 * ln( 2.0 * s2 * PI );\n\tB = -1.0 / ( 2.0 * s2 );\n\treturn A - ln( x ) + ( B * pow( ln(x) - mu, 2.0 ) );\n}\n\n\n// EXPORTS //\nexport default logpdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/pow';\nimport __var_3__ from '@stdlib/math/base/special/ln';\nimport __var_4__ from '@stdlib/constants/math/float64-ninf';\nimport __var_5__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar pow = __var_2__;\nvar ln = __var_3__;\nvar NINF = __var_4__;\nvar PI = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the probability density function (PDF) for a lognormal distribution with location parameter `mu` and scale parameter `sigma`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {Function} logPDF\n*\n* @example\n* var logpdf = factory( 4.0, 2.0 );\n* var y = logpdf( 10.0 );\n* // returns ~-4.275\n*\n* y = logpdf( 2.0 );\n* // returns ~-3.672\n*/\nfunction factory( mu, sigma ) {\n\tvar s2;\n\tvar A;\n\tvar B;\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\ts2 = pow( sigma, 2.0 );\n\tA = -0.5 * ln( 2.0 * s2 * PI );\n\tB = -1.0 / ( 2.0 * s2 );\n\treturn logpdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the probability density function (PDF) for a lognormal distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logPDF\n\t*\n\t* @example\n\t* var y = logpdf( 2.5 );\n\t* // returns <number>\n\t*/\n\tfunction logpdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn A - ln( x ) + ( B * pow( ln(x) - mu, 2.0 ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logpdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the probability density function (PDF) for a lognormal distribution.\n*\n* @module @stdlib/stats/base/dists/lognormal/logpdf\n*\n* @example\n* var logpdf = require( '@stdlib/stats/base/dists/lognormal/logpdf' );\n*\n* var y = logpdf( 2.0, 0.0, 1.0 );\n* // returns ~-1.852\n*\n* y = logpdf( 1.0, 0.0, 1.0 );\n* // returns ~-0.919\n*\n* y = logpdf( 1.0, 3.0, 1.0 );\n* // returns ~-5.419\n*\n* var mylogpdf = logpdf.factory( 4.0, 2.0 );\n* y = mylogpdf( 10.0 );\n* // returns ~-4.269\n*\n* y = mylogpdf( 2.0 );\n* // returns ~-3.689\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logpdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logpdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logpdf;\n"]}