{"version":3,"sources":["@stdlib/stats/base/dists/lognormal/pdf/lib/pdf.js","@stdlib/stats/base/dists/lognormal/pdf/lib/factory.js","@stdlib/stats/base/dists/lognormal/pdf/lib/index.js"],"names":["isnan","__var_0__","sqrt","__var_1__","exp","__var_2__","pow","__var_3__","ln","__var_4__","PI","__var_5__","pdf","x","mu","sigma","s2","NaN","constantFunction","__var_6__","factory","A","B","setReadOnly"],"mappings":"gdA2BA,IAAIA,EAAQC,EACRC,EAAOC,EACPC,EAAMC,EACNC,EAAMC,EACNC,EAAKC,EACLC,EAAKC,EA8CT,SAASC,EAAKC,EAAGC,EAAIC,GACpB,IAAIC,EAGJ,OACChB,EAAOa,IACPb,EAAOc,IACPd,EAAOe,IACPA,GAAS,EAEFE,IAEHJ,GAAK,EACF,GAERG,EAAKV,EAAKS,EAAO,GAGT,EAAIF,GAFR,EAAQX,EAAM,EAAMc,EAAKN,IAERN,GADhB,GAAQ,EAAMY,GACWV,EAAKE,EAAGK,GAAKC,EAAI,KCpEhD,IAAII,EAAmBjB,EACnBD,EAAQG,EACRD,EAAOG,EACPD,EAAMG,EACND,EAAMG,EACND,EAAKG,EACLD,EAAKS,EAoBT,SAASC,EAASN,EAAIC,GACrB,IAAIC,EACAK,EACAC,EACJ,OACCtB,EAAOc,IACPd,EAAOe,IACPA,GAAS,EAEFG,EAAkBD,MAE1BD,EAAKV,EAAKS,EAAO,GACjBM,EAAI,EAAQnB,EAAM,EAAMc,EAAKN,GAC7BY,GAAK,GAAQ,EAAMN,GAcnB,SAAcH,GACb,GAAKb,EAAOa,GACX,OAAOI,IAER,GAAKJ,GAAK,EACT,OAAO,EAER,OAAQ,EAAIA,EAAKQ,EAAIjB,EAAKkB,EAAIhB,EAAKE,EAAGK,GAAKC,EAAI,MCvCjD,IAAIS,EAActB,EACdW,EAAMT,EACNiB,EAAUf,EAKdkB,EAAaX,EAAK,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\nimport __var_2__ from '@stdlib/math/base/special/exp';\nimport __var_3__ from '@stdlib/math/base/special/pow';\nimport __var_4__ from '@stdlib/math/base/special/ln';\nimport __var_5__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar sqrt = __var_1__;\nvar exp = __var_2__;\nvar pow = __var_3__;\nvar ln = __var_4__;\nvar PI = __var_5__;\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a lognormal distribution with location parameter `mu` and scale parameter `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {number} evaluated PDF\n*\n* @example\n* var y = pdf( 2.0, 0.0, 1.0 );\n* // returns ~0.157\n*\n* @example\n* var y = pdf( 1.0, 0.0, 1.0 );\n* // returns ~0.399\n*\n* @example\n* var y = pdf( 1.0, 3.0, 1.0 );\n* // returns ~0.004\n*\n* @example\n* var y = pdf( -1.0, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = pdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = pdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction pdf( x, mu, sigma ) {\n\tvar s2;\n\tvar A;\n\tvar B;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\treturn 0.0;\n\t}\n\ts2 = pow( sigma, 2.0 );\n\tA = 1.0 / ( sqrt( 2.0 * s2 * PI ) );\n\tB = -1.0 / ( 2.0 * s2 );\n\treturn (1.0/x) * A * exp( B * pow( ln(x) - mu, 2.0 ) );\n}\n\n\n// EXPORTS //\nexport default pdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\nimport __var_3__ from '@stdlib/math/base/special/exp';\nimport __var_4__ from '@stdlib/math/base/special/pow';\nimport __var_5__ from '@stdlib/math/base/special/ln';\nimport __var_6__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar sqrt = __var_2__;\nvar exp = __var_3__;\nvar pow = __var_4__;\nvar ln = __var_5__;\nvar PI = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a lognormal distribution with location parameter `mu` and scale parameter `sigma`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 4.0, 2.0 );\n* var y = pdf( 10.0 );\n* // returns ~0.014\n*\n* y = pdf( 2.0 );\n* // returns ~0.025\n*/\nfunction factory( mu, sigma ) {\n\tvar s2;\n\tvar A;\n\tvar B;\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\ts2 = pow( sigma, 2.0 );\n\tA = 1.0 / ( sqrt( 2.0 * s2 * PI ) );\n\tB = -1.0 / ( 2.0 * s2 );\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a lognormal distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( 2.5 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn (1.0/x) * A * exp( B * pow( ln(x) - mu, 2.0 ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './pdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the probability density function (PDF) for a lognormal distribution.\n*\n* @module @stdlib/stats/base/dists/lognormal/pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats/base/dists/lognormal/pdf' );\n*\n* var y = pdf( 2.0, 0.0, 1.0 );\n* // returns ~0.157\n*\n* y = pdf( 1.0, 0.0, 1.0 );\n* // returns ~0.399\n*\n* y = pdf( 1.0, 3.0, 1.0 );\n* // returns ~0.004\n*\n* var mypdf = pdf.factory( 4.0, 2.0 );\n* y = mypdf( 10.0 );\n* // returns ~0.014\n*\n* y = mypdf( 2.0 );\n* // returns ~0.025\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar pdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default pdf;\n"]}