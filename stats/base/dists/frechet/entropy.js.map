{"version":3,"sources":["@stdlib/stats/base/dists/frechet/entropy/lib/entropy.js","@stdlib/stats/base/dists/frechet/entropy/lib/index.js"],"names":["isnan","__var_0__","ln","__var_1__","GAMMA","__var_2__","entropy","alpha","s","m","NaN"],"mappings":"+KAwBA,IAAIA,EAAQC,EACRC,EAAKC,EACLC,EAAQC,EAiCZ,SAASC,EAASC,EAAOC,EAAGC,GAC3B,OACCT,EAAOO,IACPP,EAAOQ,IACPR,EAAOS,IACPF,GAAS,GACTC,GAAK,EAEEE,IAED,EAAQN,EAAQG,EAAUH,EAAQF,EAAIM,EAAID,GChC/C,IAACD,EAAUL","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/ln';\nimport __var_2__ from '@stdlib/constants/math/float64-eulergamma';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar ln = __var_1__;\nvar GAMMA = __var_2__;\n\n\n// MAIN //\n\n/**\n* Returns the differential entropy for a Fréchet distribution with shape `alpha`, scale `s`, and location `m`.\n*\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} s - scale parameter\n* @param {number} m - location parameter\n* @returns {PositiveNumber} entropy\n*\n* @example\n* var y = entropy( 1.0, 1.0, 0.0 );\n* // returns ~2.154\n*\n* @example\n* var y = entropy( 5.0, 2.0, 0.0 );\n* // returns ~0.776\n*\n* @example\n* var y = entropy( NaN, 1.0, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = entropy( 1.0, NaN, 0.0 );\n* // returns NaN\n*\n* @example\n* var y = entropy( 1.0, 1.0, NaN );\n* // returns NaN\n*/\nfunction entropy( alpha, s, m ) {\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( s ) ||\n\t\tisnan( m ) ||\n\t\talpha <= 0.0 ||\n\t\ts <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn 1.0 + ( GAMMA / alpha ) + GAMMA + ln( s / alpha );\n}\n\n\n// EXPORTS //\nexport default entropy;\n","import __var_0__ from './entropy.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fréchet distribution differential entropy.\n*\n* @module @stdlib/stats/base/dists/frechet/entropy\n*\n* @example\n* var entropy = require( '@stdlib/stats/base/dists/frechet/entropy' );\n*\n* var y = entropy( 1.0, 1.0, 0.0 );\n* // returns ~2.154\n*\n* y = entropy( 4.0, 2.0, 0.0 );\n* // returns ~1.028\n*/\n\n// MODULES //\nvar entropy = __var_0__;\n\n\n// EXPORTS //\nexport default entropy;\n"]}