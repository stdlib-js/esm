// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import t from"./../../../../utils/define-property.js";import e from"./../../../../utils/define-nonenumerable-read-only-property.js";import r from"./../../../../utils/define-nonenumerable-read-only-accessor.js";import o from"./../../../../assert/is-positive-number.js";import i from"./entropy.js";import n from"./kurtosis.js";import a from"./mean.js";import s from"./median.js";import p from"./mode.js";import u from"./skewness.js";import f from"./stdev.js";import m from"./variance.js";import h from"./cdf.js";import l from"./logcdf.js";import b from"./logpdf.js";import c from"./mgf.js";import d from"./pdf.js";import y from"./quantile.js";var v=t,j=e,g=r,w=o.isPrimitive,k=i,E=n,T=a,V=s,q=p,M=u,x=f,F=m,P=h,S=l,z=b,A=c,B=d,C=y;function D(t){return P(t,this.alpha,this.beta)}function G(t){return S(t,this.alpha,this.beta)}function H(t){return z(t,this.alpha,this.beta)}function I(t){return A(t,this.alpha,this.beta)}function J(t){return B(t,this.alpha,this.beta)}function K(t){return C(t,this.alpha,this.beta)}function L(){var t,e;if(!(this instanceof L))return 0===arguments.length?new L:new L(arguments[0],arguments[1]);if(arguments.length){if(e=arguments[1],!w(t=arguments[0]))throw new TypeError("invalid argument. First shape parameter `alpha` must be a positive number. Value: `"+t+"`");if(!w(e))throw new TypeError("invalid argument. Second shape parameter `beta` must be a positive number. Value: `"+e+"`")}else t=1,e=1;return v(this,"alpha",{configurable:!1,enumerable:!0,get:function(){return t},set:function(e){if(!w(e))throw new TypeError("invalid value. Must be a positive number. Value: `"+e+"`");t=e}}),v(this,"beta",{configurable:!1,enumerable:!0,get:function(){return e},set:function(t){if(!w(t))throw new TypeError("invalid value. Must be a positive number. Value: `"+t+"`");e=t}}),this}g(L.prototype,"entropy",(function(){return k(this.alpha,this.beta)})),g(L.prototype,"kurtosis",(function(){return E(this.alpha,this.beta)})),g(L.prototype,"mean",(function(){return T(this.alpha,this.beta)})),g(L.prototype,"median",(function(){return V(this.alpha,this.beta)})),g(L.prototype,"mode",(function(){return q(this.alpha,this.beta)})),g(L.prototype,"skewness",(function(){return M(this.alpha,this.beta)})),g(L.prototype,"stdev",(function(){return x(this.alpha,this.beta)})),g(L.prototype,"variance",(function(){return F(this.alpha,this.beta)})),j(L.prototype,"cdf",D),j(L.prototype,"logcdf",G),j(L.prototype,"logpdf",H),j(L.prototype,"mgf",I),j(L.prototype,"pdf",J),j(L.prototype,"quantile",K);var N=L;export default N;
//# sourceMappingURL=ctor.js.map