{"version":3,"sources":["@stdlib/stats/base/dists/cauchy/ctor/lib/ctor.js","@stdlib/stats/base/dists/cauchy/ctor/lib/index.js"],"names":["defineProperty","__var_0__","setReadOnly","__var_1__","setReadOnlyAccessor","__var_2__","isPositive","__var_3__","isPrimitive","isNumber","__var_4__","isnan","__var_5__","entropy","__var_6__","median","__var_7__","mode","__var_8__","cdf","__var_9__","logcdf","__var_10__","logpdf","__var_11__","pdf","__var_12__","quantile","__var_13__","cauchyCDF","x","this","x0","gamma","cauchyLogCDF","cauchyLogPDF","cauchyPDF","cauchyQuantile","p","Cauchy","arguments","length","TypeError","configurable","enumerable","get","set","value","prototype","ctor"],"mappings":"8jBAqCA,IAAIA,EAAiBC,EACjBC,EAAcC,EACdC,EAAsBC,EACtBC,EAAaC,EAAUC,YACvBC,EAAWC,EAAUF,YACrBG,EAAQC,EACRC,EAAUC,EACVC,EAASC,EACTC,EAAOC,EACPC,EAAMC,EACNC,EAASC,EACTC,EAASC,EACTC,EAAMC,EACNC,EAAWC,EAYf,SAASC,EAAWC,GACnB,OAAOX,EAAKW,EAAGC,KAAKC,GAAID,KAAKE,OAU9B,SAASC,EAAcJ,GACtB,OAAOT,EAAQS,EAAGC,KAAKC,GAAID,KAAKE,OAUjC,SAASE,EAAcL,GACtB,OAAOP,EAAQO,EAAGC,KAAKC,GAAID,KAAKE,OAUjC,SAASG,EAAWN,GACnB,OAAOL,EAAKK,EAAGC,KAAKC,GAAID,KAAKE,OAU9B,SAASI,EAAgBC,GACxB,OAAOX,EAAUW,EAAGP,KAAKC,GAAID,KAAKE,OAwBnC,SAASM,IACR,IAAIN,EACAD,EACJ,KAAOD,gBAAgBQ,GACtB,OAA0B,IAArBC,UAAUC,OACP,IAAIF,EAEL,IAAIA,EAAQC,UAAW,GAAKA,UAAW,IAE/C,GAAKA,UAAUC,OAAS,CAGvB,GADAR,EAAQO,UAAW,IACb/B,EAFNuB,EAAKQ,UAAW,KAEQ7B,EAAOqB,GAC9B,MAAM,IAAIU,UAAW,iFAAmFV,EAAK,KAE9G,IAAM1B,EAAY2B,GACjB,MAAM,IAAIS,UAAW,gFAAkFT,EAAQ,UAGhHD,EAAK,EACLC,EAAQ,EA4BT,OA1BAjC,EAAgB+B,KAAM,KAAM,CAC3BY,cAAgB,EAChBC,YAAc,EACdC,IAAO,WACN,OAAOb,GAERc,IAAO,SAAcC,GACpB,IAAMtC,EAAUsC,IAAWpC,EAAOoC,GACjC,MAAM,IAAIL,UAAW,sDAAwDK,EAAQ,KAEtFf,EAAKe,KAGP/C,EAAgB+B,KAAM,QAAS,CAC9BY,cAAgB,EAChBC,YAAc,EACdC,IAAO,WACN,OAAOZ,GAERa,IAAO,SAAcC,GACpB,IAAMzC,EAAYyC,GACjB,MAAM,IAAIL,UAAW,qDAAuDK,EAAQ,KAErFd,EAAQc,KAGHhB,KAiBR3B,EAAqBmC,EAAOS,UAAW,WAAW,WACjD,OAAOnC,EAASkB,KAAKC,GAAID,KAAKE,UAiB/B7B,EAAqBmC,EAAOS,UAAW,UAAU,WAChD,OAAOjC,EAAQgB,KAAKC,GAAID,KAAKE,UAiB9B7B,EAAqBmC,EAAOS,UAAW,QAAQ,WAC9C,OAAO/B,EAAMc,KAAKC,GAAID,KAAKE,UAmB5B/B,EAAaqC,EAAOS,UAAW,MAAOnB,GAkBtC3B,EAAaqC,EAAOS,UAAW,SAAUd,GAkBzChC,EAAaqC,EAAOS,UAAW,SAAUb,GAkBzCjC,EAAaqC,EAAOS,UAAW,MAAOZ,GAkBtClC,EAAaqC,EAAOS,UAAW,WAAYX,GC7RxC,IAACY,EAAOhD","sourcesContent":["import __var_0__ from '@stdlib/utils/define-property';\nimport __var_1__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_2__ from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport __var_3__ from '@stdlib/assert/is-positive-number';\nimport __var_4__ from '@stdlib/assert/is-number';\nimport __var_5__ from '@stdlib/assert/is-nan';\nimport __var_6__ from '@stdlib/stats/base/dists/cauchy/entropy';\nimport __var_7__ from '@stdlib/stats/base/dists/cauchy/median';\nimport __var_8__ from '@stdlib/stats/base/dists/cauchy/mode';\nimport __var_9__ from '@stdlib/stats/base/dists/cauchy/cdf';\nimport __var_10__ from '@stdlib/stats/base/dists/cauchy/logcdf';\nimport __var_11__ from '@stdlib/stats/base/dists/cauchy/logpdf';\nimport __var_12__ from '@stdlib/stats/base/dists/cauchy/pdf';\nimport __var_13__ from '@stdlib/stats/base/dists/cauchy/quantile';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\nvar defineProperty = __var_0__;\nvar setReadOnly = __var_1__;\nvar setReadOnlyAccessor = __var_2__;\nvar isPositive = __var_3__.isPrimitive;\nvar isNumber = __var_4__.isPrimitive;\nvar isnan = __var_5__;\nvar entropy = __var_6__;\nvar median = __var_7__;\nvar mode = __var_8__;\nvar cdf = __var_9__;\nvar logcdf = __var_10__;\nvar logpdf = __var_11__;\nvar pdf = __var_12__;\nvar quantile = __var_13__;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {Probability} evaluated CDF\n*/\nfunction cauchyCDF( x ) {\n\treturn cdf( x, this.x0, this.gamma );\n}\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (logCDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated logCDF\n*/\nfunction cauchyLogCDF( x ) {\n\treturn logcdf( x, this.x0, this.gamma );\n}\n\n/**\n* Evaluates the natural logarithm of the probability density function (logPDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated logPDF\n*/\nfunction cauchyLogPDF( x ) {\n\treturn logpdf( x, this.x0, this.gamma );\n}\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n*/\nfunction cauchyPDF( x ) {\n\treturn pdf( x, this.x0, this.gamma );\n}\n\n/**\n* Evaluates the quantile function.\n*\n* @private\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n*/\nfunction cauchyQuantile( p ) {\n\treturn quantile( p, this.x0, this.gamma );\n}\n\n\n// MAIN //\n\n/**\n* Cauchy distribution constructor.\n*\n* @constructor\n* @param {number} [x0=0.0] - location parameter\n* @param {PositiveNumber} [gamma=1.0] - scale parameter\n* @throws {TypeError} `gamma` must be a positive number\n* @returns {Cauchy} distribution instance\n*\n* @example\n* var cauchy = new Cauchy( 1.0, 1.0 );\n*\n* var y = cauchy.cdf( 0.8 );\n* // returns ~0.437\n*\n* var v = cauchy.median;\n* // returns 1.0\n*/\nfunction Cauchy() {\n\tvar gamma;\n\tvar x0;\n\tif ( !(this instanceof Cauchy) ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn new Cauchy();\n\t\t}\n\t\treturn new Cauchy( arguments[ 0 ], arguments[ 1 ] );\n\t}\n\tif ( arguments.length ) {\n\t\tx0 = arguments[ 0 ];\n\t\tgamma = arguments[ 1 ];\n\t\tif ( !isNumber( x0 ) || isnan( x0 ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Location parameter `x0` must be a number primitive. Value: `' + x0 + '`' );\n\t\t}\n\t\tif ( !isPositive( gamma ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Scale parameter `gamma` must be a positive number. Value: `' + gamma + '`' );\n\t\t}\n\t} else {\n\t\tx0 = 0.0;\n\t\tgamma = 1.0;\n\t}\n\tdefineProperty( this, 'x0', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn x0;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isNumber( value ) || isnan( value ) ) {\n\t\t\t\tthrow new TypeError( 'invalid value. Must be a number primitive. Value: `' + value + '`' );\n\t\t\t}\n\t\t\tx0 = value;\n\t\t}\n\t});\n\tdefineProperty( this, 'gamma', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn gamma;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isPositive( value ) ) {\n\t\t\t\tthrow new TypeError( 'invalid value. Must be a positive number. Value: `' + value + '`' );\n\t\t\t}\n\t\t\tgamma = value;\n\t\t}\n\t});\n\treturn this;\n}\n\n/**\n* Cauchy distribution differential entropy.\n*\n* @name entropy\n* @memberof Cauchy.prototype\n* @type {number}\n* @see [differential entropy]{@link https://en.wikipedia.org/wiki/Entropy_%28information_theory%29}\n*\n* @example\n* var cauchy = new Cauchy( 4.0, 12.0 );\n*\n* var v = cauchy.entropy;\n* // returns ~5.016\n*/\nsetReadOnlyAccessor( Cauchy.prototype, 'entropy', function get() {\n\treturn entropy( this.x0, this.gamma );\n});\n\n/**\n* Cauchy distribution median.\n*\n* @name median\n* @memberof Cauchy.prototype\n* @type {number}\n* @see [median]{@link https://en.wikipedia.org/wiki/Median}\n*\n* @example\n* var cauchy = new Cauchy( 4.0, 12.0 );\n*\n* var v = cauchy.median;\n* // returns 4.0\n*/\nsetReadOnlyAccessor( Cauchy.prototype, 'median', function get() {\n\treturn median( this.x0, this.gamma );\n});\n\n/**\n* Cauchy distribution mode.\n*\n* @name mode\n* @memberof Cauchy.prototype\n* @type {number}\n* @see [mode]{@link https://en.wikipedia.org/wiki/Mode_%28statistics%29}\n*\n* @example\n* var cauchy = new Cauchy( 4.0, 12.0 );\n*\n* var v = cauchy.mode;\n* // returns 4.0\n*/\nsetReadOnlyAccessor( Cauchy.prototype, 'mode', function get() {\n\treturn mode( this.x0, this.gamma );\n});\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @name cdf\n* @memberof Cauchy.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated CDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var cauchy = new Cauchy( 2.0, 4.0 );\n*\n* var v = cauchy.cdf( 0.5 );\n* // returns ~0.386\n*/\nsetReadOnly( Cauchy.prototype, 'cdf', cauchyCDF );\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (logCDF).\n*\n* @name logcdf\n* @memberof Cauchy.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated logCDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var cauchy = new Cauchy( 2.0, 4.0 );\n*\n* var v = cauchy.logcdf( 0.5 );\n* // returns ~-0.952\n*/\nsetReadOnly( Cauchy.prototype, 'logcdf', cauchyLogCDF );\n\n/**\n* Evaluates the natural logarithm of the probability density function (logPDF).\n*\n* @name logpdf\n* @memberof Cauchy.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated logPDF\n* @see [pdf]{@link https://en.wikipedia.org/wiki/Probability_density_function}\n*\n* @example\n* var cauchy = new Cauchy( 2.0, 4.0 );\n*\n* var v = cauchy.logpdf( 0.8 );\n* // returns ~-2.617\n*/\nsetReadOnly( Cauchy.prototype, 'logpdf', cauchyLogPDF );\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @name pdf\n* @memberof Cauchy.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n* @see [pdf]{@link https://en.wikipedia.org/wiki/Probability_density_function}\n*\n* @example\n* var cauchy = new Cauchy( 2.0, 4.0 );\n*\n* var v = cauchy.pdf( 0.8 );\n* // returns ~0.073\n*/\nsetReadOnly( Cauchy.prototype, 'pdf', cauchyPDF );\n\n/**\n* Evaluates the quantile function.\n*\n* @name quantile\n* @memberof Cauchy.prototype\n* @type {Function}\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n* @see [quantile function]{@link https://en.wikipedia.org/wiki/Quantile_function}\n*\n* @example\n* var cauchy = new Cauchy( 2.0, 4.0 );\n*\n* var v = cauchy.quantile( 0.5 );\n* // returns 2.0\n*/\nsetReadOnly( Cauchy.prototype, 'quantile', cauchyQuantile );\n\n\n// EXPORTS //\nexport default Cauchy;\n","import __var_0__ from './ctor.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Cauchy distribution constructor.\n*\n* @module @stdlib/stats/base/dists/cauchy/ctor\n*\n* @example\n* var Cauchy = require( '@stdlib/stats/base/dists/cauchy/ctor' );\n*\n* var cauchy = new Cauchy( 1.0, 1.0 );\n*\n* var y = cauchy.cdf( 0.8 );\n* // returns ~0.437\n*\n* var mode = cauchy.mode;\n* // returns 1.0\n*/\n\n// MODULES //\nvar ctor = __var_0__;\n\n\n// EXPORTS //\nexport default ctor;\n"]}