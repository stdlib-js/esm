{"version":3,"sources":["@stdlib/stats/base/dists/arcsine/logcdf/lib/logcdf.js","@stdlib/stats/base/dists/arcsine/logcdf/lib/factory.js","@stdlib/stats/base/dists/arcsine/logcdf/lib/index.js"],"names":["isnan","__var_0__","asin","__var_1__","sqrt","__var_2__","ln","__var_3__","LN_PI","__var_4__","NINF","__var_5__","LN2","__var_6__","logcdf","x","a","b","NaN","constantFunction","__var_7__","factory","setReadOnly"],"mappings":"whBA4BA,IAAIA,EAAQC,EACRC,EAAOC,EACPC,EAAOC,EACPC,EAAKC,EACLC,EAAQC,EACRC,EAAOC,EACPC,EAAMC,EA6CV,SAASC,EAAQC,EAAGC,EAAGC,GACtB,OACCjB,EAAOe,IACPf,EAAOgB,IACPhB,EAAOiB,IACPD,GAAKC,EAEEC,IAEHH,EAAIC,EACDN,EAEHK,GAAKE,EACF,EAEDL,EAAMJ,EAAQF,EAAIJ,EAAME,GAAQW,EAAEC,IAAQC,EAAED,MCjEpD,IAAIG,EAAmBlB,EACnBD,EAAQG,EACRD,EAAOG,EACPD,EAAOG,EACPD,EAAKG,EACLD,EAAQG,EACRD,EAAOG,EACPD,EAAMQ,EAoBV,SAASC,EAASL,EAAGC,GACpB,OACCjB,EAAOgB,IACPhB,EAAOiB,IACPD,GAAKC,EAEEE,EAAkBD,KAe1B,SAAiBH,GAChB,GAAKf,EAAOe,GACX,OAAOG,IAER,GAAKH,EAAIC,EACR,OAAON,EAER,GAAKK,GAAKE,EACT,OAAO,EAER,OAAOL,EAAMJ,EAAQF,EAAIJ,EAAME,GAAQW,EAAEC,IAAQC,EAAED,OC5CrD,IAAIM,EAAcrB,EACda,EAASX,EACTkB,EAAUhB,EAKdiB,EAAaR,EAAQ,UAAWO","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/asin';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\nimport __var_3__ from '@stdlib/math/base/special/ln';\nimport __var_4__ from '@stdlib/constants/math/float64-ln-pi';\nimport __var_5__ from '@stdlib/constants/math/float64-ninf';\nimport __var_6__ from '@stdlib/constants/math/float64-ln-two';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar asin = __var_1__;\nvar sqrt = __var_2__;\nvar ln = __var_3__;\nvar LN_PI = __var_4__;\nvar NINF = __var_5__;\nvar LN2 = __var_6__;\n\n\n// MAIN //\n\n/**\n* Evaluates the logarithm of the cumulative distribution function (CDF) for an arcsine distribution with minimum support `a` and maximum support `b` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 9.0, 0.0, 10.0 );\n* // returns ~-0.23\n*\n* @example\n* var y = logcdf( 0.5, 0.0, 2.0 );\n* // returns ~-1.1\n*\n* @example\n* var y = logcdf( +Infinity, 2.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = logcdf( -Infinity, 2.0, 4.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logcdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2.0, 1.0, 0.0 );\n* // returns NaN\n*/\nfunction logcdf( x, a, b ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a ) {\n\t\treturn NINF;\n\t}\n\tif ( x >= b ) {\n\t\treturn 0.0;\n\t}\n\treturn LN2 - LN_PI + ln( asin( sqrt( ( x-a ) / ( b-a ) ) ) );\n}\n\n\n// EXPORTS //\nexport default logcdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/asin';\nimport __var_3__ from '@stdlib/math/base/special/sqrt';\nimport __var_4__ from '@stdlib/math/base/special/ln';\nimport __var_5__ from '@stdlib/constants/math/float64-ln-pi';\nimport __var_6__ from '@stdlib/constants/math/float64-ninf';\nimport __var_7__ from '@stdlib/constants/math/float64-ln-two';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar asin = __var_2__;\nvar sqrt = __var_3__;\nvar ln = __var_4__;\nvar LN_PI = __var_5__;\nvar NINF = __var_6__;\nvar LN2 = __var_7__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the logarithm of the cumulative distribution function (CDF) for an arcsine distribution with minimum support `a` and maximum support `b`.\n*\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 0.0, 10.0 );\n* var y = logcdf( 0.5 );\n* // returns ~-1.941\n*\n* y = logcdf( 8.0 );\n* // returns ~-0.35\n*/\nfunction factory( a, b ) {\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the logarithm of the cumulative distribution function (CDF) for an arcsine distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tif ( x >= b ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn LN2 - LN_PI + ln( asin( sqrt( ( x-a ) / ( b-a ) ) ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logcdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Arcsine distribution logarithm of cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/arcsine/logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats/base/dists/arcsine/logcdf' );\n*\n* var y = logcdf( 5.0, 0.0, 4.0 );\n* // returns 0.0\n*\n* var mylogcdf = logcdf.factory( 0.0, 10.0 );\n* y = mylogcdf( 0.5 );\n* // returns ~-1.938\n*\n* y = mylogcdf( 8.0 );\n* // returns ~-0.35\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logcdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logcdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logcdf;\n"]}