{"version":3,"sources":["@stdlib/stats/base/dists/arcsine/pdf/lib/pdf.js","@stdlib/stats/base/dists/arcsine/pdf/lib/factory.js","@stdlib/stats/base/dists/arcsine/pdf/lib/index.js"],"names":["isnan","__var_0__","sqrt","__var_1__","PI","__var_2__","pdf","x","a","b","NaN","constantFunction","__var_3__","factory","setReadOnly"],"mappings":"+SAwBA,IAAIA,EAAQC,EACRC,EAAOC,EACPC,EAAKC,EAyCT,SAASC,EAAKC,EAAGC,EAAGC,GACnB,OACCT,EAAOO,IACPP,EAAOQ,IACPR,EAAOS,IACPD,GAAKC,EAEEC,IAEHH,EAAIC,GAAKD,EAAIE,EACV,EAED,GAAQL,EAAKF,GAAQK,EAAEC,IAAQC,EAAEF,KCtDzC,IAAII,EAAmBV,EACnBD,EAAQG,EACRD,EAAOG,EACPD,EAAKQ,EAoBT,SAASC,EAASL,EAAGC,GACpB,OACCT,EAAOQ,IACPR,EAAOS,IACPD,GAAKC,EAEEE,EAAkBD,KAe1B,SAAcH,GACb,GAAKP,EAAOO,GACX,OAAOG,IAER,GAAKH,EAAIC,GAAKD,EAAIE,EACjB,OAAO,EAER,OAAO,GAAQL,EAAKF,GAAQK,EAAEC,IAAQC,EAAEF,MCjC1C,IAAIO,EAAcb,EACdK,EAAMH,EACNU,EAAUR,EAKdS,EAAaR,EAAK,UAAWO","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\nimport __var_2__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar sqrt = __var_1__;\nvar PI = __var_2__;\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for an arcsine distribution with minimum support `a` and maximum support `b` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {number} evaluated PDF\n*\n* @example\n* var y = pdf( 2.0, 0.0, 4.0 );\n* // returns ~0.159\n*\n* @example\n* var y = pdf( 5.0, 0.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = pdf( 0.25, 0.0, 1.0 );\n* // returns ~0.735\n*\n* @example\n* var y = pdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = pdf( 2.0, 3.0, 1.0 );\n* // returns NaN\n*/\nfunction pdf( x, a, b ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a || x > b ) {\n\t\treturn 0.0;\n\t}\n\treturn 1.0 / ( PI * sqrt( ( x-a ) * ( b-x ) ) );\n}\n\n\n// EXPORTS //\nexport default pdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\nimport __var_3__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar sqrt = __var_2__;\nvar PI = __var_3__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for an arcsine distribution with minimum support `a` and maximum support `b`.\n*\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 0.0, 10.0 );\n* var y = pdf( 2.0 );\n* // returns ~0.08\n*\n* y = pdf( 12.0 );\n* // returns 0.0\n*/\nfunction factory( a, b ) {\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for an arcsine distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a || x > b ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn 1.0 / ( PI * sqrt( ( x-a ) * ( b-x ) ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './pdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Arcsine distribution probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/arcsine/pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats/base/dists/arcsine/pdf' );\n*\n* var y = pdf( 3.0, 2.0, 6.0 );\n* // returns ~0.184\n*\n* var myPDF = pdf.factory( 6.0, 7.0 );\n* y = myPDF( 7.0 );\n* // returns Infinity\n*\n* y = myPDF( 5.0 );\n* // returns 0.0\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar pdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default pdf;\n"]}