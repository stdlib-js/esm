{"version":3,"sources":["@stdlib/stats/base/dists/normal/cdf/lib/cdf.js","@stdlib/stats/base/dists/normal/cdf/lib/factory.js","@stdlib/stats/base/dists/normal/cdf/lib/index.js"],"names":["erfc","__var_0__","sqrt","__var_1__","isnan","__var_2__","cdf","x","mu","sigma","denom","NaN","constantFunction","degenerate","factory","__var_3__","__var_4__","setReadOnly"],"mappings":"kVAwBA,IAAIA,EAAOC,EACPC,EAAOC,EACPC,EAAQC,EA0CZ,SAASC,EAAKC,EAAGC,EAAIC,GACpB,IAAIC,EAEJ,OACCN,EAAOG,IACPH,EAAOI,IACPJ,EAAOK,IACPA,EAAQ,EAEDE,IAEO,IAAVF,EACIF,EAAIC,EAAM,EAAM,GAEzBE,EAAQD,EAAQP,EAAM,GAEf,GAAMF,IADRO,EAAIC,GACcE,IC1DxB,IAAIE,EAAmBX,EACnBY,EAAaV,EAAUW,QACvBV,EAAQC,EACRH,EAAOa,EACPf,EAAOgB,EAoBX,SAASF,EAASN,EAAIC,GACrB,IAAIC,EACJ,OACCN,EAAOI,IACPJ,EAAOK,IACPA,EAAQ,EAEDG,EAAkBD,KAEX,IAAVF,EACGI,EAAYL,IAEpBE,EAAQD,EAAQP,EAAM,GActB,SAAcK,GAEb,GAAKH,EAAOG,GACX,OAAOI,IAGR,MAAO,GAAMX,IADRO,EAAIC,GACgBE,KC1C3B,IAAIO,EAAchB,EACdK,EAAMH,EACNW,EAAUT,EAKdY,EAAaX,EAAK,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/erfc';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar erfc = __var_0__;\nvar sqrt = __var_1__;\nvar isnan = __var_2__;\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) for a Normal distribution with mean `mu` and standard deviation `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {Probability} evaluated cumulative distribution function\n*\n* @example\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.977\n*\n* @example\n* var y = cdf( -1.0, -1.0, 2.0 );\n* // returns 0.5\n*\n* @example\n* var y = cdf( -1.0, 4.0, 2.0 );\n* // returns ~0.006\n*\n* @example\n* var y = cdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = cdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative standard deviation:\n* var y = cdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction cdf( x, mu, sigma ) {\n\tvar denom;\n\tvar xc;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn (x < mu) ? 0.0 : 1.0;\n\t}\n\tdenom = sigma * sqrt( 2.0 );\n\txc = x - mu;\n\treturn 0.5 * erfc( -xc/denom );\n}\n\n\n// EXPORTS //\nexport default cdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/stats/base/dists/degenerate/cdf';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\nimport __var_3__ from '@stdlib/math/base/special/sqrt';\nimport __var_4__ from '@stdlib/math/base/special/erfc';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar degenerate = __var_1__.factory;\nvar isnan = __var_2__;\nvar sqrt = __var_3__;\nvar erfc = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a Normal distribution.\n*\n* @param {number} mu - mean\n* @param {NonNegativeNumber} sigma - standard deviation\n* @returns {Function} function to evaluate the cumulative distribution function\n*\n* @example\n* var cdf = factory( 10.0, 2.0 );\n* var y = cdf( 10.0 );\n* // returns 0.5\n*\n* y = cdf( 12.0 );\n* // returns ~0.841\n*/\nfunction factory( mu, sigma ) {\n\tvar denom;\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma < 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( sigma === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\tdenom = sigma * sqrt( 2.0 );\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a Normal distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( x ) {\n\t\tvar xc;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\txc = x - mu;\n\t\treturn 0.5 * erfc( -xc / denom );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './cdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Normal distribution cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/normal/cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats/base/dists/normal/cdf' );\n*\n* var y = cdf( 2.0, 0.0, 1.0 );\n* // returns ~0.977\n*\n* var myCDF = cdf.factory( 10.0, 2.0 );\n* y = myCDF( 10.0 );\n* // returns 0.5\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar cdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( cdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default cdf;\n"]}