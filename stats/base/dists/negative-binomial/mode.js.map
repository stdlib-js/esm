{"version":3,"sources":["@stdlib/stats/base/dists/negative-binomial/mode/lib/mode.js","@stdlib/stats/base/dists/negative-binomial/mode/lib/index.js"],"names":["isnan","__var_0__","floor","__var_1__","mode","r","p","NaN"],"mappings":"gHAuBA,IAAIA,EAAQC,EACRC,EAAQC,EAwCZ,SAASC,EAAMC,EAAGC,GACjB,OACCN,EAAOK,IACPL,EAAOM,IACPD,GAAK,GACLC,EAAI,GACJA,EAAI,EAEGC,IAEDL,GAAS,EAAII,IAAQD,EAAE,GAAQC,GCrCpC,IAACF,EAAOH","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/floor';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar floor = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns the mode of a negative binomial distribution.\n*\n* @param {PositiveNumber} r - number of failures until experiment is stopped\n* @param {Probability} p - success probability\n* @returns {NonNegativeInteger} mode\n*\n* @example\n* var v = mode( 100, 0.2 );\n* // returns 396\n*\n* @example\n* var v = mode( 20, 0.5 );\n* // returns 19\n*\n* @example\n* var v = mode( 10.3, 0.8 );\n* // returns 2\n*\n* @example\n* var v = mode( -2, 0.5 );\n* // returns NaN\n*\n* @example\n* var v = mode( 20, 1.1 );\n* // returns NaN\n*\n* @example\n* var v = mode( 20, NaN );\n* // returns NaN\n*\n* @example\n* var v = mode( NaN, 0.5 );\n* // returns NaN\n*/\nfunction mode( r, p ) {\n\tif (\n\t\tisnan( r ) ||\n\t\tisnan( p ) ||\n\t\tr <= 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn floor( ( 1.0-p ) * ( r-1.0 ) / p );\n}\n\n\n// EXPORTS //\nexport default mode;\n","import __var_0__ from './mode.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Negative binomial distribution mode.\n*\n* @module @stdlib/stats/base/dists/negative-binomial/mode\n*\n* @example\n* var mode = require( '@stdlib/stats/base/dists/negative-binomial/mode' );\n*\n* var v = mode( 100, 0.2 );\n* // returns 396\n*\n* v = mode( 20, 0.5 );\n* // returns 19\n*/\n\n// MODULES //\nvar mode = __var_0__;\n\n\n// EXPORTS //\nexport default mode;\n"]}