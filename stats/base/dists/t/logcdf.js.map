{"version":3,"sources":["@stdlib/stats/base/dists/t/logcdf/lib/logcdf.js","@stdlib/stats/base/dists/t/logcdf/lib/factory.js","@stdlib/stats/base/dists/t/logcdf/lib/index.js"],"names":["betainc","__var_0__","isnan","__var_1__","log1p","__var_2__","pow","__var_3__","ln","__var_4__","LN_HALF","__var_5__","logcdf","x","v","x2","p","NaN","constantFunction","__var_6__","factory","setReadOnly"],"mappings":"0dA2BA,IAAIA,EAAUC,EACVC,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EACNC,EAAKC,EACLC,EAAUC,EAoCd,SAASC,EAAQC,EAAGC,GACnB,IAAIC,EACAC,EAEJ,OACCd,EAAOW,IACPX,EAAOY,IACPA,GAAK,EAEEG,IAEG,IAANJ,EACGH,GAKPM,EAFIF,EAAI,GADTC,EAAKT,EAAKO,EAAG,IAGRb,EADAe,GAAOD,EAAIC,GACC,GAAKD,EAAE,GAAK,GAAM,GAAS,EAGvCd,EADAc,GAAMA,EAAIC,GACED,EAAE,EAAK,IAAK,GAAM,GAAU,EAEpCD,EAAI,EAAQT,GAAQY,GAAMR,EAAIQ,IC9DxC,IAAIE,EAAmBjB,EACnBD,EAAUG,EACVD,EAAQG,EACRD,EAAQG,EACRD,EAAMG,EACND,EAAKG,EACLD,EAAUS,EAmBd,SAASC,EAASN,GACjB,OAAKZ,EAAOY,IAAOA,GAAK,EAChBI,EAAkBD,KAe1B,SAAiBJ,GAChB,IAAIE,EACAC,EAEJ,GAAKd,EAAOW,GACX,OAAOI,IAER,GAAW,IAANJ,EACJ,OAAOH,EAERK,EAAKT,EAAKO,EAAG,GAGZG,EAFIF,EAAI,EAAIC,EAERf,EADAe,GAAOD,EAAIC,GACC,GAAKD,EAAE,GAAK,GAAM,GAAS,EAGvCd,EADAc,GAAMA,EAAIC,GACED,EAAE,EAAK,IAAK,GAAM,GAAU,EAE7C,OAASD,EAAI,EAAQT,GAAQY,GAAMR,EAAIQ,ICvCzC,IAAIK,EAAcpB,EACdW,EAAST,EACTiB,EAAUf,EAKdgB,EAAaT,EAAQ,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/betainc';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/log1p';\nimport __var_3__ from '@stdlib/math/base/special/pow';\nimport __var_4__ from '@stdlib/math/base/special/ln';\nimport __var_5__ from '@stdlib/constants/math/float64-ln-half';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar betainc = __var_0__;\nvar isnan = __var_1__;\nvar log1p = __var_2__;\nvar pow = __var_3__;\nvar ln = __var_4__;\nvar LN_HALF = __var_5__;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (CDF) for a Student's t distribution with degrees of freedom `v` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 2.0, 0.1 );\n* // returns ~-0.493\n*\n* @example\n* var y = logcdf( 1.0, 2.0 );\n* // returns ~-0.237\n*\n* @example\n* var y = logcdf( -1.0, 4.0 );\n* // returns ~-1.677\n*\n* @example\n* var y = logcdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction logcdf( x, v ) {\n\tvar x2;\n\tvar p;\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( v ) ||\n\t\tv <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn LN_HALF;\n\t}\n\tx2 = pow( x, 2.0 );\n\tif ( v > 2.0*x2 ) {\n\t\tz = x2 / ( v + x2 );\n\t\tp = betainc( z, 0.5, v/2.0, true, true ) / 2.0;\n\t} else {\n\t\tz = v / ( v + x2 );\n\t\tp = betainc( z, v/2.0, 0.5, true, false ) / 2.0;\n\t}\n\treturn ( x > 0.0 ) ? log1p( -p ) : ln( p );\n}\n\n\n// EXPORTS //\nexport default logcdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/special/betainc';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\nimport __var_3__ from '@stdlib/math/base/special/log1p';\nimport __var_4__ from '@stdlib/math/base/special/pow';\nimport __var_5__ from '@stdlib/math/base/special/ln';\nimport __var_6__ from '@stdlib/constants/math/float64-ln-half';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar betainc = __var_1__;\nvar isnan = __var_2__;\nvar log1p = __var_3__;\nvar pow = __var_4__;\nvar ln = __var_5__;\nvar LN_HALF = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the cumulative distribution function (CDF) for a Student's t distribution with degrees of freedom `v`.\n*\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 0.5 );\n* var y = logcdf( 3.0 );\n* // returns ~-0.203\n*\n* y = logcdf( 1.0 );\n* // returns ~-0.358\n*/\nfunction factory( v ) {\n\tif ( isnan( v ) || v <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the cumulative distribution function (CDF) for a Student's t distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tvar x2;\n\t\tvar p;\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === 0.0 ) {\n\t\t\treturn LN_HALF;\n\t\t}\n\t\tx2 = pow( x, 2.0 );\n\t\tif ( v > 2.0*x2 ) {\n\t\t\tz = x2 / ( v + x2 );\n\t\t\tp = betainc( z, 0.5, v/2.0, true, true ) / 2.0;\n\t\t} else {\n\t\t\tz = v / ( v + x2 );\n\t\t\tp = betainc( z, v/2.0, 0.5, true, false ) / 2.0;\n\t\t}\n\t\treturn ( x > 0.0 ) ? log1p( -p ) : ln( p );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logcdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the cumulative distribution function (CDF) for a Student's t distribution.\n*\n* @module @stdlib/stats/base/dists/t/logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats/base/dists/t/logcdf' );\n*\n* var y = logcdf( 2.0, 0.1 );\n* // returns ~-0.493\n*\n* y = logcdf( 1.0, 2.0 );\n* // returns ~-0.237\n*\n* y = logcdf( -1.0, 4.0 );\n* // returns ~-1.677\n*\n* var mylogcdf = logcdf.factory( 0.5 );\n* y = mylogcdf( 3.0 );\n* // returns ~-0.203\n*\n* y = mylogcdf( 1.0 );\n* // returns ~-0.358\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logcdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logcdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logcdf;\n"]}