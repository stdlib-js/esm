{"version":3,"sources":["@stdlib/stats/base/dists/t/logpdf/lib/logpdf.js","@stdlib/stats/base/dists/t/logpdf/lib/factory.js","@stdlib/stats/base/dists/t/logpdf/lib/index.js"],"names":["isnan","__var_0__","betaln","__var_1__","sqrt","__var_2__","pow","__var_3__","ln","__var_4__","logpdf","x","v","betaTerm","NaN","constantFunction","__var_5__","factory","exponent","setReadOnly"],"mappings":"yZA0BA,IAAIA,EAAQC,EACRC,EAASC,EACTC,EAAOC,EACPC,EAAMC,EACNC,EAAKC,EAoCT,SAASC,EAAQC,EAAGC,GACnB,IAAIC,EACJ,OACCb,EAAOW,IACPX,EAAOY,IACPA,GAAK,EAEEE,KAERD,EAAWL,EAAIJ,EAAMQ,IAAQV,EAAQU,EAAE,EAAK,KAChC,EAAIA,GAAK,EAAQJ,EAAII,GAAMA,EAAIN,EAAKK,EAAG,KAAcE,GCjDlE,IAAIE,EAAmBd,EACnBD,EAAQG,EACRD,EAASG,EACTD,EAAOG,EACPD,EAAMG,EACND,EAAKQ,EAmBT,SAASC,EAASL,GACjB,IAAIM,EACAL,EAEJ,OAAKb,EAAOY,IAAOA,GAAK,EAChBG,EAAkBD,MAE1BD,EAAWL,EAAIJ,EAAMQ,IAAQV,EAAQU,EAAE,EAAK,IAC5CM,GAAa,EAAMN,GAAM,EAczB,SAAiBD,GAChB,GAAKX,EAAOW,GACX,OAAOG,IAER,OAASI,EAAWV,EAAII,GAAMA,EAAIN,EAAKK,EAAG,KAAcE,ICrC1D,IAAIM,EAAclB,EACdS,EAASP,EACTc,EAAUZ,EAKdc,EAAaT,EAAQ,UAAWO","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/betaln';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\nimport __var_3__ from '@stdlib/math/base/special/pow';\nimport __var_4__ from '@stdlib/math/base/special/ln';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar betaln = __var_1__;\nvar sqrt = __var_2__;\nvar pow = __var_3__;\nvar ln = __var_4__;\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF) for a Student's t distribution with degrees of freedom `v` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {number} evaluated logPDF\n*\n* @example\n* var y = logpdf( 0.3, 4.0 );\n* // returns ~-1.036\n*\n* @example\n* var y = logpdf( 2.0, 0.7 );\n* // returns ~-2.841\n*\n* @example\n* var y = logpdf( -1.0, 0.5 );\n* // returns ~-2.134\n*\n* @example\n* var y = logpdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = logpdf( NaN, 2.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 2.0, -1.0 );\n* // returns NaN\n*/\nfunction logpdf( x, v ) {\n\tvar betaTerm;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( v ) ||\n\t\tv <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tbetaTerm = ln( sqrt( v ) ) + betaln( v/2.0, 0.5 );\n\treturn ( ( (1.0+v) / 2.0 ) * ln( v / ( v + pow( x, 2.0 ) ) ) ) - betaTerm;\n}\n\n\n// EXPORTS //\nexport default logpdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/betaln';\nimport __var_3__ from '@stdlib/math/base/special/sqrt';\nimport __var_4__ from '@stdlib/math/base/special/pow';\nimport __var_5__ from '@stdlib/math/base/special/ln';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar betaln = __var_2__;\nvar sqrt = __var_3__;\nvar pow = __var_4__;\nvar ln = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the probability density function (PDF) for a Student's t distribution with `v` degrees of freedom.\n*\n* @param {PositiveNumber} v - degrees of freedom\n* @returns {Function} logPDF\n*\n* @example\n* var logpdf = factory( 1.0 );\n* var y = logpdf( 3.0 );\n* // returns ~-3.447\n*\n* y = logpdf( 1.0 );\n* // returns ~-1.838\n*/\nfunction factory( v ) {\n\tvar exponent;\n\tvar betaTerm;\n\n\tif ( isnan( v ) || v <= 0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tbetaTerm = ln( sqrt( v ) ) + betaln( v/2.0, 0.5 );\n\texponent = ( 1.0 + v ) / 2.0;\n\treturn logpdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the probability density function (PDF) for a Student's t distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logPDF\n\t*\n\t* @example\n\t* var y = logpdf( 2.3 );\n\t* // returns <number>\n\t*/\n\tfunction logpdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn ( exponent * ln( v / ( v + pow( x, 2.0 ) ) ) ) - betaTerm;\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logpdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Natural logarithm of the probability density function (PDF) for a Student's t distribution.\n*\n* @module @stdlib/stats/base/dists/t/logpdf\n*\n* @example\n* var logpdf = require( '@stdlib/stats/base/dists/t/logpdf' );\n*\n* var y = logpdf( 3.0, 1.0 );\n* // returns ~-3.442\n*\n* var mylogPDF = logpdf.factory( 3.0 );\n* y = mylogPDF( 1.0 );\n* // returns ~-1.575\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logpdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logpdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logpdf;\n"]}