{"version":3,"sources":["@stdlib/stats/base/dists/levy/logcdf/lib/logcdf.js","@stdlib/stats/base/dists/levy/logcdf/lib/factory.js","@stdlib/stats/base/dists/levy/logcdf/lib/index.js"],"names":["isnan","__var_0__","erfc","__var_1__","sqrt","__var_2__","NINF","__var_3__","ln","__var_4__","logcdf","x","mu","c","z","NaN","constantFunction","__var_5__","factory","setReadOnly"],"mappings":"6ZA0BA,IAAIA,EAAQC,EACRC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAKC,EA0CT,SAASC,EAAQC,EAAGC,EAAIC,GACvB,IAAIC,EACJ,OACCd,EAAOW,IACPX,EAAOY,IACPZ,EAAOa,IACPA,GAAK,EAEEE,IAEHJ,EAAIC,EACDN,GAERQ,EAAIV,EAAMS,GAAM,GAAQF,EAAEC,KACnBJ,EAAIN,EAAMY,KC3DlB,IAAIE,EAAmBf,EACnBD,EAAQG,EACRD,EAAOG,EACPD,EAAOG,EACPC,EAAKC,EACLH,EAAOW,EAqBX,SAASC,EAASN,EAAIC,GACrB,OACCb,EAAOY,IACPZ,EAAOa,IACPA,GAAK,EAEEG,EAAkBD,KAe1B,SAAiBJ,GAChB,IAAIG,EACJ,GAAKd,EAAOW,GACX,OAAOI,IAER,GAAKJ,EAAIC,EACR,OAAON,EAGR,OADAQ,EAAIV,EAAMS,GAAM,GAAQF,EAAEC,KACnBJ,EAAIN,EAAMY,KC/BnB,IAAIK,EAAclB,EACdS,EAASP,EACTe,EAAUb,EAKdc,EAAaT,EAAQ,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/erfc';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\nimport __var_4__ from '@stdlib/math/base/special/ln';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar erfc = __var_1__;\nvar sqrt = __var_2__;\nvar NINF = __var_3__;\nvar ln = __var_4__;\n\n\n// MAIN //\n\n/**\n* Evaluates the logarithm of the cumulative distribution function (CDF) for a Lévy distribution with location parameter `mu` and scale parameter `c` at value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 2.0, 0.0, 1.0 );\n* // returns ~-0.735\n*\n* @example\n* var y = logcdf( 12.0, 10.0, 3.0 );\n* // returns ~-1.51\n*\n* @example\n* var y = logcdf( 9.0, 10.0, 3.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logcdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = logcdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction logcdf( x, mu, c ) {\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < mu ) {\n\t\treturn NINF;\n\t}\n\tz = sqrt( c / ( 2.0 * ( x-mu ) ) );\n\treturn ln( erfc( z ) );\n}\n\n\n// EXPORTS //\nexport default logcdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/erfc';\nimport __var_3__ from '@stdlib/math/base/special/sqrt';\nimport __var_4__ from '@stdlib/math/base/special/ln';\nimport __var_5__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar erfc = __var_2__;\nvar sqrt = __var_3__;\nvar ln = __var_4__;\nvar NINF = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the logarithm of the cumulative distribution function (CDF) for a Lévy distribution with location parameter `mu` and scale parameter `c`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 3.0, 1.5 );\n*\n* var y = logcdf( 4.0 );\n* // returns ~-1.511\n*\n* y = logcdf( 2.0 );\n* // returns -Infinity\n*/\nfunction factory( mu, c ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the logarithm of the cumulative distribution function (CDF) for a Lévy distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < mu ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tz = sqrt( c / ( 2.0 * ( x-mu ) ) );\n\t\treturn ln( erfc( z ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logcdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Lévy distribution logarithm of cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/levy/logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats/base/dists/levy/logcdf' );\n*\n* var y = logcdf( 10.0, 0.0, 3.0 );\n* // returns ~-0.538\n*\n* y = logcdf( 0.3, 0.0, 3.0 );\n* // returns ~-6.215\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/levy/logcdf' ).factory;\n*\n* var mylogcdf = factory( 2.0, 3.0 );\n* var y = mylogcdf( 100.0 );\n* // returns ~-0.15\n*\n* y = mylogcdf( 10.0 );\n* // returns ~-0.616\n*\n* y = mylogcdf( 2.0 );\n* // returns -Infinity\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logcdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logcdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logcdf;\n"]}