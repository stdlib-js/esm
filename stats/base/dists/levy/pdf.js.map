{"version":3,"sources":["@stdlib/stats/base/dists/levy/pdf/lib/pdf.js","@stdlib/stats/base/dists/levy/pdf/lib/factory.js","@stdlib/stats/base/dists/levy/pdf/lib/index.js"],"names":["isnan","__var_0__","sqrt","__var_1__","exp","__var_2__","pow","__var_3__","TWO_PI","__var_4__","pdf","x","mu","c","NaN","constantFunction","__var_5__","factory","setReadOnly"],"mappings":"+ZA0BA,IAAIA,EAAQC,EACRC,EAAOC,EACPC,EAAMC,EACNC,EAAMC,EACNC,EAASC,EAsCb,SAASC,EAAKC,EAAGC,EAAIC,GACpB,OACCb,EAAOW,IACPX,EAAOY,IACPZ,EAAOa,IACPA,GAAK,EAEEC,IAEHH,GAAKC,EACF,EAEDV,EAAMW,EAAEL,GAAWJ,GAAMS,GAAM,GAAKF,EAAEC,KAAUN,EAAKK,EAAEC,EAAI,KCrDnE,IAAIG,EAAmBd,EACnBD,EAAQG,EACRD,EAAOG,EACPD,EAAMG,EACND,EAAMG,EACND,EAASQ,EAoBb,SAASC,EAASL,EAAIC,GACrB,OAAKb,EAAOY,IAAQZ,EAAOa,IAAOA,GAAK,EAC/BE,EAAkBD,KAe1B,SAAcH,GACb,GAAKX,EAAOW,GACX,OAAOG,IAER,GAAKH,GAAKC,EACT,OAAO,EAER,OAAOV,EAAMW,EAAEL,GAAWJ,GAAMS,GAAM,GAAKF,EAAEC,KAAUN,EAAKK,EAAEC,EAAI,MCjCpE,IAAIM,EAAcjB,EACdS,EAAMP,EACNc,EAAUZ,EAKda,EAAaR,EAAK,UAAWO","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\nimport __var_2__ from '@stdlib/math/base/special/exp';\nimport __var_3__ from '@stdlib/math/base/special/pow';\nimport __var_4__ from '@stdlib/constants/math/float64-two-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar sqrt = __var_1__;\nvar exp = __var_2__;\nvar pow = __var_3__;\nvar TWO_PI = __var_4__;\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a Lévy distribution with location parameter `mu` and scale parameter `c` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {number} evaluated PDF\n*\n* @example\n* var y = pdf( 2.0, 0.0, 1.0 );\n* // returns ~0.11\n*\n* @example\n* var y = pdf( -1.0, 4.0, 2.0 );\n* // returns 0.0\n*\n* @example\n* var y = pdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = pdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction pdf( x, mu, c ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( c ) ||\n\t\tc <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= mu ) {\n\t\treturn 0.0;\n\t}\n\treturn sqrt( c/TWO_PI ) * exp( -c / ( 2.0*(x-mu) ) ) / pow( x-mu, 1.5 );\n}\n\n\n// EXPORTS //\nexport default pdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\nimport __var_3__ from '@stdlib/math/base/special/exp';\nimport __var_4__ from '@stdlib/math/base/special/pow';\nimport __var_5__ from '@stdlib/constants/math/float64-two-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar sqrt = __var_2__;\nvar exp = __var_3__;\nvar pow = __var_4__;\nvar TWO_PI = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a Lévy distribution.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} c - scale parameter\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 10.0, 2.0 );\n* var y = pdf( 11.0 );\n* // returns ~0.208\n*\n* y = pdf( 10.0 );\n* // returns 0.0\n*/\nfunction factory( mu, c ) {\n\tif ( isnan( mu ) || isnan( c ) || c <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a Lévy distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( -1.2 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= mu ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn sqrt( c/TWO_PI ) * exp( -c / ( 2.0*(x-mu) ) ) / pow( x-mu, 1.5 );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './pdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Lévy distribution probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/levy/pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats/base/dists/levy/pdf' );\n*\n* var y = pdf( 2.0, 0.0, 1.0 );\n* // returns ~0.11\n*\n* @example\n* var factory = require( '@stdlib/stats/base/dists/levy/pdf' ).factory;\n*\n* var pdf = factory( 10.0, 2.0 );\n* y = pdf( 11.0 );\n* // returns ~0.208\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar pdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default pdf;\n"]}