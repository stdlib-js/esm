{"version":3,"sources":["@stdlib/stats/base/dists/truncated-normal/pdf/lib/pdf.js","@stdlib/stats/base/dists/truncated-normal/pdf/lib/factory.js","@stdlib/stats/base/dists/truncated-normal/pdf/lib/index.js"],"names":["exp","__var_0__","pow","__var_1__","sqrt","__var_2__","isnan","__var_3__","normalCDF","__var_4__","PI","__var_5__","pdf","x","a","b","mu","sigma","s2x2","A","B","C","NaN","constantFunction","__var_6__","factory","setReadOnly"],"mappings":"6bA2BA,IAAIA,EAAMC,EACNC,EAAMC,EACNC,EAAOC,EACPC,EAAQC,EACRC,EAAYC,EACZC,EAAKC,EAeT,SAASC,EAAKC,EAAGC,EAAGC,EAAGC,EAAIC,GAC1B,IAAIC,EACAC,EACAC,EACAC,EAEJ,OACCf,EAAOO,IACPP,EAAOQ,IACPR,EAAOS,IACPE,GAAS,GACTH,GAAKC,EAEEO,IAEHT,EAAIC,GAAKD,EAAIE,EACV,GAERG,EAAO,EAAMhB,EAAKe,EAAO,GACzBE,EAAI,EAAQf,EAAMc,EAAOR,GACzBU,GAAK,EAAG,EACRC,EAAIb,GAAYO,EAAEC,GAAIC,GAAUT,GAAYM,EAAEE,GAAIC,GAC3CE,EAAInB,EAAKoB,EAAIlB,EAAKW,EAAIG,EAAI,IAAUK,GCzC5C,IAAIE,EAAmBtB,EACnBD,EAAMG,EACND,EAAMG,EACNC,EAAQC,EACRH,EAAOK,EACPD,EAAYG,EACZD,EAAKc,EAcT,SAASC,EAASX,EAAGC,EAAGC,EAAIC,GAC3B,IAAIC,EACAC,EACAC,EACAC,EAEJ,OACCf,EAAOQ,IACPR,EAAOS,IACPT,EAAOU,IACPV,EAAOW,IACPA,GAAS,GACTH,GAAKC,EAEEQ,EAAkBD,MAE1BJ,EAAO,EAAMhB,EAAKe,EAAO,GACzBE,EAAI,EAAQf,EAAMc,EAAOR,GACzBU,GAAK,EAAG,EACRC,EAAIb,GAAYO,EAAEC,GAAIC,GAAUT,GAAYM,EAAEE,GAAIC,GAUlD,SAAcJ,GACb,GAAKP,EAAOO,GACX,OAAOS,IAER,GAAKT,EAAIC,GAAKD,EAAIE,EACjB,OAAO,EAER,OAAOI,EAAInB,EAAKoB,EAAIlB,EAAKW,EAAIG,EAAI,IAAUK,ICtD7C,IAAIK,EAAczB,EACdW,EAAMT,EACNsB,EAAUpB,EAKdqB,EAAad,EAAK,UAAWa","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/exp';\nimport __var_1__ from '@stdlib/math/base/special/pow';\nimport __var_2__ from '@stdlib/math/base/special/sqrt';\nimport __var_3__ from '@stdlib/math/base/assert/is-nan';\nimport __var_4__ from '@stdlib/stats/base/dists/normal/cdf';\nimport __var_5__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar exp = __var_0__;\nvar pow = __var_1__;\nvar sqrt = __var_2__;\nvar isnan = __var_3__;\nvar normalCDF = __var_4__;\nvar PI = __var_5__;\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a truncated normal distribution with endpoints `a` and `b`, location parameter `mu` and scale parameter `sigma` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {number} evaluated PDF\n*/\nfunction pdf( x, a, b, mu, sigma ) {\n\tvar s2x2;\n\tvar A;\n\tvar B;\n\tvar C;\n\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tsigma <= 0.0 ||\n\t\ta >= b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a || x > b ) {\n\t\treturn 0.0;\n\t}\n\ts2x2 = 2.0 * pow( sigma, 2.0 );\n\tA = 1.0 / ( sqrt( s2x2 * PI ) );\n\tB = -1.0 / ( s2x2 );\n\tC = normalCDF( (b-mu)/sigma ) - normalCDF( (a-mu)/sigma );\n\treturn A * exp( B * pow( x - mu, 2.0 ) ) / C;\n}\n\n\n// EXPORTS //\nexport default pdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/special/exp';\nimport __var_2__ from '@stdlib/math/base/special/pow';\nimport __var_3__ from '@stdlib/math/base/assert/is-nan';\nimport __var_4__ from '@stdlib/math/base/special/sqrt';\nimport __var_5__ from '@stdlib/stats/base/dists/normal/cdf';\nimport __var_6__ from '@stdlib/constants/math/float64-pi';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar exp = __var_1__;\nvar pow = __var_2__;\nvar isnan = __var_3__;\nvar sqrt = __var_4__;\nvar normalCDF = __var_5__;\nvar PI = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a truncated normal distribution with endpoints `a` and `b`, mean `mu` and standard deviation `sigma`.\n*\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @param {number} mu - location parameter\n* @param {PositiveNumber} sigma - scale parameter\n* @returns {Function} PDF\n*/\nfunction factory( a, b, mu, sigma ) {\n\tvar s2x2;\n\tvar A;\n\tvar B;\n\tvar C;\n\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( sigma ) ||\n\t\tsigma <= 0.0 ||\n\t\ta >= b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\ts2x2 = 2.0 * pow( sigma, 2.0 );\n\tA = 1.0 / ( sqrt( s2x2 * PI ) );\n\tB = -1.0 / ( s2x2 );\n\tC = normalCDF( (b-mu)/sigma ) - normalCDF( (a-mu)/sigma );\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a truncated normal distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a || x > b ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn A * exp( B * pow( x - mu, 2.0 ) ) / C;\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './pdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Truncated normal distribution probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/truncated-normal/pdf\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar pdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default pdf;\n"]}