{"version":3,"sources":["@stdlib/stats/base/dists/erlang/entropy/lib/entropy.js","@stdlib/stats/base/dists/erlang/entropy/lib/index.js"],"names":["isPositiveInteger","__var_0__","isnan","__var_1__","digamma","__var_2__","gamma","__var_3__","ln","__var_4__","entropy","k","lambda","NaN"],"mappings":"oSA0BA,IAAIA,EAAoBC,EACpBC,EAAQC,EACRC,EAAUC,EACVC,EAAQC,EACRC,EAAKC,EA4CT,SAASC,EAASC,EAAGC,GACpB,OACEZ,EAAmBW,IACpBT,EAAOU,IACPA,GAAU,EAEHC,KAEG,EAAEF,GAAMP,EAASO,GAAQH,EAAIF,EAAOK,GAAMC,GAAWD,EC1C9D,IAACD,EAAUT","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-positive-integer';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/digamma';\nimport __var_3__ from '@stdlib/math/base/special/gamma';\nimport __var_4__ from '@stdlib/math/base/special/ln';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPositiveInteger = __var_0__;\nvar isnan = __var_1__;\nvar digamma = __var_2__;\nvar gamma = __var_3__;\nvar ln = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns the differential entropy of an Erlang distribution.\n*\n* @param {PositiveInteger} k - shape parameter\n* @param {PositiveNumber} lambda - rate parameter\n* @returns {number} differential entropy\n*\n* @example\n* var v = entropy( 1, 1.0 );\n* // returns 1.0\n*\n* @example\n* var v = entropy( 4, 12.0 );\n* // returns ~-0.462\n*\n* @example\n* var v = entropy( 8, 2.0 );\n* // returns ~1.723\n*\n* @example\n* var v = entropy( 1.5, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = entropy( 1, -0.1 );\n* // returns NaN\n*\n* @example\n* var v = entropy( -0.1, 1.0 );\n* // returns NaN\n*\n* @example\n* var v = entropy( 2, NaN );\n* // returns NaN\n*\n* @example\n* var v = entropy( NaN, 2.0 );\n* // returns NaN\n*/\nfunction entropy( k, lambda ) {\n\tif (\n\t\t!isPositiveInteger( k ) ||\n\t\tisnan( lambda ) ||\n\t\tlambda <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn ( ( 1-k ) * digamma( k ) ) + ln( gamma( k ) / lambda ) + k;\n}\n\n\n// EXPORTS //\nexport default entropy;\n","import __var_0__ from './entropy.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Erlang distribution differential entropy.\n*\n* @module @stdlib/stats/base/dists/erlang/entropy\n*\n* @example\n* var entropy = require( '@stdlib/stats/base/dists/erlang/entropy' );\n*\n* var v = entropy( 1, 1.0 );\n* // returns ~-0.154\n*\n* v = entropy( 4, 12.0 );\n* // returns ~9.587\n*\n* v = entropy( 8, 2.0 );\n* // returns ~33.973\n*/\n\n// MODULES //\nvar entropy = __var_0__;\n\n\n// EXPORTS //\nexport default entropy;\n"]}