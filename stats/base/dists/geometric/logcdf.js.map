{"version":3,"sources":["@stdlib/stats/base/dists/geometric/logcdf/lib/logcdf.js","@stdlib/stats/base/dists/geometric/logcdf/lib/factory.js","@stdlib/stats/base/dists/geometric/logcdf/lib/index.js"],"names":["isnan","__var_0__","floor","__var_1__","log1p","__var_2__","pow","__var_3__","NINF","__var_4__","PINF","__var_5__","logcdf","x","p","NaN","constantFunction","__var_6__","factory","setReadOnly"],"mappings":"4dA2BA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EACNC,EAAOC,EACPC,EAAOC,EAqCX,SAASC,EAAQC,EAAGC,GACnB,OACCd,EAAOa,IACPb,EAAOc,IACPA,EAAI,GACJA,EAAI,EAEGC,IAEHF,EAAI,EACDL,EAEHK,IAAMH,EACH,GAERG,EAAIX,EAAOW,GACJT,GAAQE,EAAK,EAAMQ,EAAGD,EAAI,KCzDlC,IAAIG,EAAmBf,EACnBD,EAAQG,EACRD,EAAQG,EACRD,EAAQG,EACRD,EAAMG,EACND,EAAOG,EACPD,EAAOO,EAmBX,SAASC,EAASJ,GACjB,OAAKd,EAAOc,IAAOA,EAAI,GAAOA,EAAI,EAC1BE,EAAkBD,KAe1B,SAAiBF,GAChB,GAAKb,EAAOa,GACX,OAAOE,IAER,GAAKF,EAAI,EACR,OAAOL,EAER,GAAKK,IAAMH,EACV,OAAO,EAGR,OADAG,EAAIX,EAAOW,GACJT,GAAQE,EAAK,EAAMQ,EAAGD,EAAI,KCnCnC,IAAIM,EAAclB,EACdW,EAAST,EACTe,EAAUb,EAKdc,EAAaP,EAAQ,UAAWM","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/floor';\nimport __var_2__ from '@stdlib/math/base/special/log1p';\nimport __var_3__ from '@stdlib/math/base/special/pow';\nimport __var_4__ from '@stdlib/constants/math/float64-ninf';\nimport __var_5__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar floor = __var_1__;\nvar log1p = __var_2__;\nvar pow = __var_3__;\nvar NINF = __var_4__;\nvar PINF = __var_5__;\n\n\n// MAIN //\n\n/**\n* Evaluates the logarithm of the cumulative distribution function (CDF) for a geometric distribution with success probability `p` at a value `x`.\n*\n* @param {number} x - input value\n* @param {Probability} p - success probability\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 2.0, 0.5 );\n* // returns ~-0.134\n*\n* @example\n* var y = logcdf( 2.0, 0.1 );\n* // returns ~-1.306\n*\n* @example\n* var y = logcdf( -1.0, 0.5 );\n* // returns -Infinity\n*\n* @example\n* var y = logcdf( NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Invalid probability\n* var y = logcdf( 2.0, 1.4 );\n* // returns NaN\n*/\nfunction logcdf( x, p ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( x === PINF ) {\n\t\treturn 0.0;\n\t}\n\tx = floor( x );\n\treturn log1p( -pow( 1.0 - p, x + 1.0 ) );\n}\n\n\n// EXPORTS //\nexport default logcdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/special/floor';\nimport __var_3__ from '@stdlib/math/base/special/log1p';\nimport __var_4__ from '@stdlib/math/base/special/pow';\nimport __var_5__ from '@stdlib/constants/math/float64-ninf';\nimport __var_6__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar isnan = __var_1__;\nvar floor = __var_2__;\nvar log1p = __var_3__;\nvar pow = __var_4__;\nvar NINF = __var_5__;\nvar PINF = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the logarithm of the cumulative distribution function (CDF) for a geometric distribution with success probability `p`.\n*\n* @param {Probability} p - success probability\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 0.5 );\n* var y = logcdf( 3.0 );\n* // returns ~-0.065\n*\n* y = logcdf( 1.0 );\n* // returns ~-0.288\n*/\nfunction factory( p ) {\n\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the logarithm of the cumulative distribution function (CDF) for a geometric distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tif ( x === PINF ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tx = floor( x );\n\t\treturn log1p( -pow( 1.0 - p, x + 1.0 ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logcdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Geometric distribution logarithm of cumulative distribution function (CDF).\n*\n* @module @stdlib/stats/base/dists/geometric/logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats/base/dists/geometric/logcdf' );\n*\n* var y = logcdf( 2.0, 0.5 );\n* // returns ~-0.134\n*\n* y = logcdf( 2.0, 0.1 );\n* // returns ~-1.306\n*\n* var mylogcdf = logcdf.factory( 0.5 );\n* y = mylogcdf( 3.0 );\n* // returns ~-0.065\n*\n* y = mylogcdf( 1.0 );\n* // returns ~-0.288\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logcdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logcdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logcdf;\n"]}