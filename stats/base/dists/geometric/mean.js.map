{"version":3,"sources":["@stdlib/stats/base/dists/geometric/mean/lib/mean.js","@stdlib/stats/base/dists/geometric/mean/lib/index.js"],"names":["isnan","__var_0__","mean","p","NaN"],"mappings":"wDAsBA,IAAIA,EAAQC,EA2BZ,SAASC,EAAMC,GACd,OACCH,EAAOG,IACPA,EAAI,GACJA,EAAI,EAEGC,KAEC,EAAMD,GAAMA,ECpBnB,IAACD,EAAOD","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns the expected value of a geometric distribution.\n*\n* @param {Probability} p - success probability\n* @returns {NonNegativeNumber} expected value\n*\n* @example\n* var v = mean( 0.1 );\n* // returns 9.0\n*\n* @example\n* var v = mean( 0.5 );\n* // returns 1.0\n*\n* @example\n* var v = mean( 1.1 );\n* // returns NaN\n*\n* @example\n* var v = mean( NaN );\n* // returns NaN\n*/\nfunction mean( p ) {\n\tif (\n\t\tisnan( p ) ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn ( 1.0 - p ) / p;\n}\n\n\n// EXPORTS //\nexport default mean;\n","import __var_0__ from './mean.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Geometric distribution expected value.\n*\n* @module @stdlib/stats/base/dists/geometric/mean\n*\n* @example\n* var mean = require( '@stdlib/stats/base/dists/geometric/mean' );\n*\n* var v = mean( 0.1 );\n* // returns 9.0\n*\n* v = mean( 0.5 );\n* // returns 1.0\n*/\n\n// MODULES //\nvar mean = __var_0__;\n\n\n// EXPORTS //\nexport default mean;\n"]}