{"version":3,"sources":["@stdlib/stats/base/dists/logistic/logpdf/lib/logpdf.js","@stdlib/stats/base/dists/logistic/logpdf/lib/factory.js","@stdlib/stats/base/dists/logistic/logpdf/lib/index.js"],"names":["isnan","__var_0__","log1p","__var_1__","abs","__var_2__","exp","__var_3__","ln","__var_4__","NINF","__var_5__","PINF","__var_6__","logpdf","x","mu","s","az","NaN","constantFunction","degenerate","factory","__var_7__","ls","setReadOnly"],"mappings":"wjBA4BA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EACNC,EAAMC,EACNC,EAAKC,EACLC,EAAOC,EACPC,EAAOC,EA8CX,SAASC,EAAQC,EAAGC,EAAIC,GACvB,IAAIC,EAEJ,OACClB,EAAOe,IACPf,EAAOgB,IACPhB,EAAOiB,IACPA,EAAI,EAEGE,IAEHJ,IAAML,EACHA,EAEG,IAANO,EACKF,IAAMC,EAAOJ,EAAOF,GAG9BQ,GAAMd,GADAW,EAAIC,GAAOC,IAEJ,EAAMf,EAAOI,EAAKY,IAAUV,EAAIS,GCtE9C,IAAIG,EAAmBnB,EACnBoB,EAAalB,EAAUmB,QACvBtB,EAAQK,EACRH,EAAQK,EACRH,EAAMK,EACNH,EAAMK,EACNH,EAAKK,EACLH,EAAOa,EAoBX,SAASD,EAASN,EAAIC,GACrB,IAAIO,EACJ,OAAKxB,EAAOgB,IAAQhB,EAAOiB,IAAOA,EAAI,EAC9BG,EAAkBD,KAEf,IAANF,EACGI,EAAYL,IAEpBQ,EAAKhB,EAAIS,GAcT,SAAiBF,GAChB,IAAIG,EAEJ,GAAKlB,EAAOe,GACX,OAAOI,IAER,GAAKJ,IAAML,EACV,OAAOA,EAIR,OADAQ,GAAMd,GADAW,EAAIC,GAAOC,IAEJ,EAAMf,EAAOI,EAAKY,IAAUM,ICjD3C,IAAIC,EAAcxB,EACda,EAASX,EACTmB,EAAUjB,EAKdoB,EAAaX,EAAQ,UAAWQ","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/log1p';\nimport __var_2__ from '@stdlib/math/base/special/abs';\nimport __var_3__ from '@stdlib/math/base/special/exp';\nimport __var_4__ from '@stdlib/math/base/special/ln';\nimport __var_5__ from '@stdlib/constants/math/float64-ninf';\nimport __var_6__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar log1p = __var_1__;\nvar abs = __var_2__;\nvar exp = __var_3__;\nvar ln = __var_4__;\nvar NINF = __var_5__;\nvar PINF = __var_6__;\n\n\n// MAIN //\n\n/**\n* Evaluates the logarithm of the probability density function (PDF) for a logistic distribution with location parameter `mu` and scale parameter `s` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {number} evaluated logPDF\n*\n* @example\n* var y = logpdf( 2.0, 0.0, 1.0 );\n* // returns ~-2.254\n*\n* @example\n* var y = logpdf( -1.0, 4.0, 2.0 );\n* // returns ~-3.351\n*\n* @example\n* var y = logpdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = logpdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 2.0, 8.0, 0.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logpdf( 8.0, 8.0, 0.0 );\n* // returns Infinity\n*/\nfunction logpdf( x, mu, s ) {\n\tvar az;\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( s ) ||\n\t\ts < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === NINF ) {\n\t\treturn NINF;\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn ( x === mu ) ? PINF : NINF;\n\t}\n\tz = ( x - mu ) / s;\n\taz = -abs( z );\n\treturn az - (2.0 * log1p( exp( az ) )) - ln( s );\n}\n\n\n// EXPORTS //\nexport default logpdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/stats/base/dists/degenerate/logpdf';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\nimport __var_3__ from '@stdlib/math/base/special/log1p';\nimport __var_4__ from '@stdlib/math/base/special/abs';\nimport __var_5__ from '@stdlib/math/base/special/exp';\nimport __var_6__ from '@stdlib/math/base/special/ln';\nimport __var_7__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar degenerate = __var_1__.factory;\nvar isnan = __var_2__;\nvar log1p = __var_3__;\nvar abs = __var_4__;\nvar exp = __var_5__;\nvar ln = __var_6__;\nvar NINF = __var_7__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the logarithm of the probability density function (PDF) for a logistic distribution.\n*\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} logPDF\n*\n* @example\n* var logpdf = factory( 10.0, 2.0 );\n* var y = logpdf( 10.0 );\n* // returns ~-2.079\n*\n* y = logpdf( 5.0 );\n* // returns ~-3.351\n*/\nfunction factory( mu, s ) {\n\tvar ls;\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\tls = ln( s );\n\treturn logpdf;\n\n\t/**\n\t* Evaluates the logarithm of the probability density function (PDF) for a logistic distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logPDF\n\t*\n\t* @example\n\t* var y = logpdf( -1.2 );\n\t* // returns <number>\n\t*/\n\tfunction logpdf( x ) {\n\t\tvar az;\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === NINF ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tz = ( x - mu ) / s;\n\t\taz = -abs( z );\n\t\treturn az - (2.0 * log1p( exp( az ) )) - ls;\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './logpdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Logistic distribution logarithm of probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/logistic/logpdf\n*\n* @example\n* var logpdf = require( '@stdlib/stats/base/dists/logistic/logpdf' );\n*\n* var y = logpdf( 2.0, 0.0, 1.0 );\n* // returns ~-2.254\n*\n* var mylogpdf = logpdf.factory( 10.0, 2.0 );\n* y = mylogpdf( 10.0 );\n* // returns -2.079\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar logpdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( logpdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default logpdf;\n"]}