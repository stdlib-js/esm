{"version":3,"sources":["@stdlib/stats/base/dists/logistic/pdf/lib/pdf.js","@stdlib/stats/base/dists/logistic/pdf/lib/factory.js","@stdlib/stats/base/dists/logistic/pdf/lib/index.js"],"names":["isnan","__var_0__","abs","__var_1__","exp","__var_2__","pow","__var_3__","NINF","__var_4__","PINF","__var_5__","pdf","x","mu","s","ez","z","NaN","constantFunction","degenerate","factory","__var_6__","setReadOnly"],"mappings":"8fA2BA,IAAIA,EAAQC,EACRC,EAAMC,EACNC,EAAMC,EACNC,EAAMC,EACNC,EAAOC,EACPC,EAAOC,EA8CX,SAASC,EAAKC,EAAGC,EAAIC,GACpB,IAAIC,EACAC,EACJ,OACCjB,EAAOa,IACPb,EAAOc,IACPd,EAAOe,IACPA,EAAI,EAEGG,IAEHL,IAAML,EACH,EAEG,IAANO,EACKF,IAAMC,EAAOJ,EAAO,GAE9BO,EAAIf,GAAOW,EAAIC,GAAOC,IACtBC,EAAKZ,GAAMa,KACGF,EAAIT,EAAK,EAAMU,EAAI,KCrElC,IAAIG,EAAmBlB,EACnBmB,EAAajB,EAAUkB,QACvBrB,EAAQK,EACRH,EAAMK,EACNH,EAAMK,EACNH,EAAMK,EACNH,EAAOc,EAoBX,SAASD,EAASP,EAAIC,GACrB,OAAKf,EAAOc,IAAQd,EAAOe,IAAOA,EAAI,EAC9BI,EAAkBD,KAEf,IAANH,EACGK,EAAYN,GAepB,SAAcD,GACb,IAAIG,EACAC,EACJ,GAAKjB,EAAOa,GACX,OAAOK,IAER,GAAKL,IAAML,EACV,OAAO,EAIR,OAFAS,EAAIf,GAAOW,EAAIC,GAAOC,IACtBC,EAAKZ,GAAMa,KACGF,EAAIT,EAAK,EAAMU,EAAI,KC7CnC,IAAIO,EAActB,EACdW,EAAMT,EACNkB,EAAUhB,EAKdkB,EAAaX,EAAK,UAAWS","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/abs';\nimport __var_2__ from '@stdlib/math/base/special/exp';\nimport __var_3__ from '@stdlib/math/base/special/pow';\nimport __var_4__ from '@stdlib/constants/math/float64-ninf';\nimport __var_5__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar abs = __var_1__;\nvar exp = __var_2__;\nvar pow = __var_3__;\nvar NINF = __var_4__;\nvar PINF = __var_5__;\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a logistic distribution with location parameter `mu` and scale parameter `s` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {number} evaluated PDF\n*\n* @example\n* var y = pdf( 2.0, 0.0, 1.0 );\n* // returns ~0.105\n*\n* @example\n* var y = pdf( -1.0, 4.0, 2.0 );\n* // returns ~0.035\n*\n* @example\n* var y = pdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = pdf( 2.0, 0.0, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = pdf( 2.0, 8.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = pdf( 8.0, 8.0, 0.0 );\n* // returns Infinity\n*/\nfunction pdf( x, mu, s ) {\n\tvar ez;\n\tvar z;\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( mu ) ||\n\t\tisnan( s ) ||\n\t\ts < 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === NINF ) {\n\t\treturn 0.0;\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn ( x === mu ) ? PINF : 0.0;\n\t}\n\tz = abs( ( x - mu ) / s );\n\tez = exp( -z );\n\treturn ez / ( s * pow( 1.0 + ez, 2.0 ) );\n}\n\n\n// EXPORTS //\nexport default pdf;\n","import __var_0__ from '@stdlib/utils/constant-function';\nimport __var_1__ from '@stdlib/stats/base/dists/degenerate/pdf';\nimport __var_2__ from '@stdlib/math/base/assert/is-nan';\nimport __var_3__ from '@stdlib/math/base/special/abs';\nimport __var_4__ from '@stdlib/math/base/special/exp';\nimport __var_5__ from '@stdlib/math/base/special/pow';\nimport __var_6__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar constantFunction = __var_0__;\nvar degenerate = __var_1__.factory;\nvar isnan = __var_2__;\nvar abs = __var_3__;\nvar exp = __var_4__;\nvar pow = __var_5__;\nvar NINF = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a logistic distribution.\n*\n* @param {number} mu - location parameter\n* @param {NonNegativeNumber} s - scale parameter\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 10.0, 2.0 );\n* var y = pdf( 10.0 );\n* // returns 0.125\n*\n* y = pdf( 5.0 );\n* // returns ~0.035\n*/\nfunction factory( mu, s ) {\n\tif ( isnan( mu ) || isnan( s ) || s < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( s === 0.0 ) {\n\t\treturn degenerate( mu );\n\t}\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a logistic distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( -1.2 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tvar ez;\n\t\tvar z;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x === NINF ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tz = abs( ( x - mu ) / s );\n\t\tez = exp( -z );\n\t\treturn ez / ( s * pow( 1.0 + ez, 2.0 ) );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './pdf.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Logistic distribution probability density function (PDF).\n*\n* @module @stdlib/stats/base/dists/logistic/pdf\n*\n* @example\n* var pdf = require( '@stdlib/stats/base/dists/logistic/pdf' );\n*\n* var y = pdf( 2.0, 0.0, 1.0 );\n* // returns ~0.105\n*\n* var myPDF = pdf.factory( 10.0, 2.0 );\n* y = myPDF( 10.0 );\n* // returns 0.125\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar pdf = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( pdf, 'factory', factory );\n\n\n// EXPORTS //\nexport default pdf;\n"]}