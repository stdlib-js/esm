{"version":3,"sources":["@stdlib/stats/base/dists/negative-binomial/lib/index.js"],"names":["setReadOnly","__var_0__","negativeBinomial","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__","__var_11__","__var_12__"],"mappings":"ilBAsCA,IAAIA,EAAcC,EAUdC,EAAmB,GASvBF,EAAaE,EAAkB,MAAOC,GAStCH,EAAaE,EAAkB,mBAAoBE,GASnDJ,EAAaE,EAAkB,WAAYG,GAS3CL,EAAaE,EAAkB,SAAUI,GASzCN,EAAaE,EAAkB,OAAQK,GASvCP,EAAaE,EAAkB,MAAOM,GAStCR,EAAaE,EAAkB,OAAQO,GASvCT,EAAaE,EAAkB,MAAOQ,GAStCV,EAAaE,EAAkB,WAAYS,GAS3CX,EAAaE,EAAkB,WAAYU,GAS3CZ,EAAaE,EAAkB,QAASW,GASxCb,EAAaE,EAAkB,WAAYY","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/stats/base/dists/negative-binomial/cdf';\nimport __var_2__ from '@stdlib/stats/base/dists/negative-binomial/ctor';\nimport __var_3__ from '@stdlib/stats/base/dists/negative-binomial/kurtosis';\nimport __var_4__ from '@stdlib/stats/base/dists/negative-binomial/logpmf';\nimport __var_5__ from '@stdlib/stats/base/dists/negative-binomial/mean';\nimport __var_6__ from '@stdlib/stats/base/dists/negative-binomial/mgf';\nimport __var_7__ from '@stdlib/stats/base/dists/negative-binomial/mode';\nimport __var_8__ from '@stdlib/stats/base/dists/negative-binomial/pmf';\nimport __var_9__ from '@stdlib/stats/base/dists/negative-binomial/quantile';\nimport __var_10__ from '@stdlib/stats/base/dists/negative-binomial/skewness';\nimport __var_11__ from '@stdlib/stats/base/dists/negative-binomial/stdev';\nimport __var_12__ from '@stdlib/stats/base/dists/negative-binomial/variance';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace negativeBinomial\n*/\nvar negativeBinomial = {};\n\n/**\n* @name cdf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/cdf}\n*/\nsetReadOnly( negativeBinomial, 'cdf', __var_1__);\n\n/**\n* @name NegativeBinomial\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/ctor}\n*/\nsetReadOnly( negativeBinomial, 'NegativeBinomial', __var_2__);\n\n/**\n* @name kurtosis\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/kurtosis}\n*/\nsetReadOnly( negativeBinomial, 'kurtosis', __var_3__);\n\n/**\n* @name logpmf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/logpmf}\n*/\nsetReadOnly( negativeBinomial, 'logpmf', __var_4__);\n\n/**\n* @name mean\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/mean}\n*/\nsetReadOnly( negativeBinomial, 'mean', __var_5__);\n\n/**\n* @name mgf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/mgf}\n*/\nsetReadOnly( negativeBinomial, 'mgf', __var_6__);\n\n/**\n* @name mode\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/mode}\n*/\nsetReadOnly( negativeBinomial, 'mode', __var_7__);\n\n/**\n* @name pmf\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/pmf}\n*/\nsetReadOnly( negativeBinomial, 'pmf', __var_8__);\n\n/**\n* @name quantile\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/quantile}\n*/\nsetReadOnly( negativeBinomial, 'quantile', __var_9__);\n\n/**\n* @name skewness\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/skewness}\n*/\nsetReadOnly( negativeBinomial, 'skewness', __var_10__);\n\n/**\n* @name stdev\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/stdev}\n*/\nsetReadOnly( negativeBinomial, 'stdev', __var_11__);\n\n/**\n* @name variance\n* @memberof negativeBinomial\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/stats/base/dists/negative-binomial/variance}\n*/\nsetReadOnly( negativeBinomial, 'variance', __var_12__);\n\n\n// EXPORTS //\nexport default negativeBinomial;\n"]}