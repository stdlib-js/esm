// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./../../utils/define-nonenumerable-read-only-property.js";import a from"./../../math/base/assert/is-nan.js";import o from"./../../math/base/assert/is-positive-zero.js";var e=a,i=o;function t(r,a,o,t,n){var f,l,s,u;if(r<=0)return NaN;if(1===r||0===o)return void 0===(s=t.call(n,a[0],0,0,a))?NaN:s;for(l=o<0?(1-r)*o:0,u=0;u<r&&((f=t.call(n,a[l],u,l,a))!=f||void 0===f);u++)l+=o;if(u===r)return NaN;for(u+=1;u<r;u++)l+=o,void 0===(s=t.call(n,a[l],u,l,a))||e(s)||(s>f||s===f&&i(s))&&(f=s);return f}var n=a,f=o;function l(r,a,o,e,i,t){var l,s,u,v;if(r<=0)return NaN;if(1===r||0===o)return void 0===(u=i.call(t,a[0],0,0,a))?NaN:u;for(s=e,v=0;v<r&&((l=i.call(t,a[s],v,s,a))!=l||void 0===l);v++)s+=o;if(v===r)return NaN;for(v+=1;v<r;v++)s+=o,void 0===(u=i.call(t,a[s],v,s,a))||n(u)||(u>l||u===l&&f(u))&&(l=u);return l}var s=r,u=t,v=l;s(u,"ndarray",v);var N=u;export default N;
//# sourceMappingURL=nanmax-by.js.map