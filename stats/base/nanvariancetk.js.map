{"version":3,"sources":["@stdlib/stats/base/nanvariancetk/lib/nanvariancetk.js","@stdlib/stats/base/nanvariancetk/lib/ndarray.js","@stdlib/stats/base/nanvariancetk/lib/index.js"],"names":["nanvariancetk","N","correction","x","stride","S2","ix","nc","S","v","n","i","NaN","offset","setReadOnly","__var_0__","__var_1__","ndarray","__var_2__"],"mappings":"wEAsCA,SAASA,EAAeC,EAAGC,EAAYC,EAAGC,GACzC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKV,GAAK,EACT,OAAOW,IAER,GAAW,IAANX,GAAsB,IAAXG,EAEf,OADAK,EAAIN,EAAG,KACIM,GAAKR,EAAEC,EAAa,EACvB,EAEDU,IAUR,IAPCN,EADIF,EAAS,GACP,EAAEH,GAAKG,EAER,EAENC,EAAK,EACLG,EAAI,EACJE,EAAI,EACEC,EAAI,EAAGA,EAAIV,EAAGU,KACnBF,EAAIN,EAAGG,KACIG,IACVJ,GAAMI,EAAIA,EACVD,GAAKC,EACLC,GAAK,GAENJ,GAAMF,EAGP,OADAG,EAAKG,EAAIR,IACE,EACHU,KAEAP,EAAOG,EAAEE,EAAGF,GAAMD,ECpC3B,SAASP,EAAeC,EAAGC,EAAYC,EAAGC,EAAQS,GACjD,IAAIR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKV,GAAK,EACT,OAAOW,IAER,GAAW,IAANX,GAAsB,IAAXG,EAEf,OADAK,EAAIN,EAAGU,KACIJ,GAAKR,EAAEC,EAAa,EACvB,EAEDU,IAMR,IAJAN,EAAKO,EACLR,EAAK,EACLG,EAAI,EACJE,EAAI,EACEC,EAAI,EAAGA,EAAIV,EAAGU,KACnBF,EAAIN,EAAGG,KACIG,IACVJ,GAAMI,EAAIA,EACVD,GAAKC,EACLC,GAAK,GAENJ,GAAMF,EAGP,OADAG,EAAKG,EAAIR,IACE,EACHU,KAEAP,EAAOG,EAAEE,EAAGF,GAAMD,ECtD3B,IAAIO,EAAcC,EACdf,EAAgBgB,EAChBC,EAAUC,EAKdJ,EAAad,EAAe,UAAWiB","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array ignoring `NaN` values and using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, NaN, 2.0 ];\n*\n* var v = nanvariancetk( x.length, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction nanvariancetk( N, correction, x, stride ) {\n\tvar S2;\n\tvar ix;\n\tvar nc;\n\tvar S;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tv = x[ 0 ];\n\t\tif ( v === v && N-correction > 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn NaN;\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tS2 = 0.0;\n\tS = 0.0;\n\tn = 0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tif ( v === v ) {\n\t\t\tS2 += v * v;\n\t\t\tS += v;\n\t\t\tn += 1;\n\t\t}\n\t\tix += stride;\n\t}\n\tnc = n - correction;\n\tif ( nc <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\treturn (S2 - ((S/n)*S)) / nc;\n}\n\n\n// EXPORTS //\nexport default nanvariancetk;\n","\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array ignoring `NaN` values and using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} variance\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, NaN, NaN ];\n* var N = floor( x.length / 2 );\n*\n* var v = nanvariancetk( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction nanvariancetk( N, correction, x, stride, offset ) {\n\tvar S2;\n\tvar ix;\n\tvar nc;\n\tvar S;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tv = x[ offset ];\n\t\tif ( v === v && N-correction > 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn NaN;\n\t}\n\tix = offset;\n\tS2 = 0.0;\n\tS = 0.0;\n\tn = 0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tif ( v === v ) {\n\t\t\tS2 += v * v;\n\t\t\tS += v;\n\t\t\tn += 1;\n\t\t}\n\t\tix += stride;\n\t}\n\tnc = n - correction;\n\tif ( nc <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\treturn (S2 - ((S/n)*S)) / nc;\n}\n\n\n// EXPORTS //\nexport default nanvariancetk;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './nanvariancetk.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar nanvariancetk = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( nanvariancetk, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default nanvariancetk;\n"]}