{"version":3,"sources":["@stdlib/stats/base/nanstdev/lib/nanstdev.js","@stdlib/stats/base/nanstdev/lib/ndarray.js","@stdlib/stats/base/nanstdev/lib/index.js"],"names":["nanstdevpn","__var_0__","nanstdev","N","correction","x","stride","ndarray","offset","setReadOnly","__var_1__","__var_2__"],"mappings":"uGAsBA,IAAIA,EAAaC,EAoBjB,SAASC,EAAUC,EAAGC,EAAYC,EAAGC,GACpC,OAAON,EAAYG,EAAGC,EAAYC,EAAGC,GCrBtC,IAAIN,EAAaC,EAAUM,QAwB3B,SAASL,EAAUC,EAAGC,EAAYC,EAAGC,EAAQE,GAC5C,OAAOR,EAAYG,EAAGC,EAAYC,EAAGC,EAAQE,GCvB9C,IAAIC,EAAcR,EACdC,EAAWQ,EACXH,EAAUI,EAKdF,EAAaP,EAAU,UAAWK","sourcesContent":["import __var_0__ from '@stdlib/stats/base/nanstdevpn';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar nanstdevpn = __var_0__;\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} standard deviation\n*\n* @example\n* var x = [ 1.0, -2.0, NaN, 2.0 ];\n*\n* var v = nanstdev( x.length, 1, x, 1 );\n* // returns ~2.0817\n*/\nfunction nanstdev( N, correction, x, stride ) {\n\treturn nanstdevpn( N, correction, x, stride );\n}\n\n\n// EXPORTS //\nexport default nanstdev;\n","import __var_0__ from '@stdlib/stats/base/nanstdevpn';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar nanstdevpn = __var_0__.ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} standard deviation\n*\n* @example\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, NaN, NaN ];\n* var N = floor( x.length / 2 );\n*\n* var v = nanstdev( N, 1, x, 2, 1 );\n* // returns 2.5\n*/\nfunction nanstdev( N, correction, x, stride, offset ) {\n\treturn nanstdevpn( N, correction, x, stride, offset );\n}\n\n\n// EXPORTS //\nexport default nanstdev;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './nanstdev.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar nanstdev = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( nanstdev, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default nanstdev;\n"]}