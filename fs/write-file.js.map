{"version":3,"sources":["@stdlib/fs/write-file/lib/main.js","@stdlib/fs/write-file/lib/sync.js","@stdlib/fs/write-file/lib/index.js"],"names":["write","__var_0__","writeFile","args","i","Array","arguments","length","apply","writeFileSync","file","data","options","err","setReadOnly","__var_1__","sync","__var_2__"],"mappings":"sGAsBA,IAAIA,EAAQC,EAAUC,UAsBtB,SAASA,IACR,IAAIC,EACAC,EAEJ,IADAD,EAAO,IAAIE,MAAOC,UAAUC,QACtBH,EAAI,EAAGA,EAAID,EAAKI,OAAQH,IAC7BD,EAAMC,GAAME,UAAWF,GAExBJ,EAAMQ,MAAO,KAAML,GC7BpB,IAAID,EAAYD,EAAUQ,cAmB1B,SAASA,EAAeC,EAAMC,EAAMC,GACnC,IACMN,UAAUC,OAAS,EACvBL,EAAWQ,EAAMC,EAAMC,GAEvBV,EAAWQ,EAAMC,GAEjB,MAAQE,GACT,OAAOA,EAER,OAAO,KCFR,IAAIC,EAAcb,EACdC,EAAYa,EACZC,EAAOC,EAKXH,EAAaZ,EAAW,OAAQc","sourcesContent":["import __var_0__ from '@stdlib/vendor/fs.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar write = __var_0__.writeFile;\n\n\n// MAIN //\n\n/**\n* Asynchronously writes data to a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(string|Buffer)} data - data to write\n* @param {(Object|string)} [options] - options\n* @param {Function} clbk - callback to invoke after writing data to a file\n*\n* @example\n* function onWrite( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* writeFile( './beep/boop.txt', 'beep boop\\n', onWrite );\n*/\nfunction writeFile() {\n\tvar args;\n\tvar i;\n\targs = new Array( arguments.length );\n\tfor ( i = 0; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\twrite.apply( null, args );\n}\n\n\n// EXPORTS //\nexport default writeFile;\n","import __var_0__ from '@stdlib/vendor/fs.js'; // eslint-disable-line no-sync\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar writeFile = __var_0__.writeFileSync;\n\n\n// MAIN //\n\n/**\n* Synchronously writes data to a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(string|Buffer)} data - data to write\n* @param {(Object|string)} [options] - options\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var err = writeFileSync( './beep/boop.txt', 'beep boop\\n' );\n* if ( err instanceof Error ) {\n*     throw err;\n* }\n*/\nfunction writeFileSync( file, data, options ) {\n\ttry {\n\t\tif ( arguments.length > 2 ) {\n\t\t\twriteFile( file, data, options );\n\t\t} else {\n\t\t\twriteFile( file, data );\n\t\t}\n\t} catch ( err ) {\n\t\treturn err;\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default writeFileSync;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './sync.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Write data to a file.\n*\n* @module @stdlib/fs/write-file\n*\n* @example\n* var writeFile = require( '@stdlib/fs/write-file' );\n*\n* function onWrite( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* writeFile( './beep/boop.txt', 'beep boop\\n', onWrite );\n*\n* @example\n* var writeFileSync = require( '@stdlib/fs/write-file' ).sync;\n*\n* var err = writeFileSync( './beep/boop.txt', 'beep boop\\n' );\n* if ( err instanceof Error ) {\n*     throw err;\n* }\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar writeFile = __var_1__;\nvar sync = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( writeFile, 'sync', sync );\n\n\n// EXPORTS //\nexport default writeFile;\n"]}