{"version":3,"sources":["@stdlib/fs/read-dir/lib/async.js","@stdlib/fs/read-dir/lib/sync.js","@stdlib/fs/read-dir/lib/index.js"],"names":["readdir","__var_0__","readDir","args","i","Array","arguments","length","apply","readdirSync","readDirSync","path","err","setReadOnly","__var_1__","sync","__var_2__"],"mappings":"sGAsBA,IAAIA,EAAUC,EAAUD,QAqBxB,SAASE,IACR,IAAIC,EACAC,EAEJ,IADAD,EAAO,IAAIE,MAAOC,UAAUC,QACtBH,EAAI,EAAGA,EAAID,EAAKI,OAAQH,IAC7BD,EAAMC,GAAME,UAAWF,GAExBJ,EAAQQ,MAAO,KAAML,GC5BtB,IAAIM,EAAcR,EAAUQ,YAkB5B,SAASC,EAAaC,GACrB,IACC,OAAOF,EAAaE,GACnB,MAAQC,GACT,OAAOA,GCOT,IAAIC,EAAcZ,EACdC,EAAUY,EACVC,EAAOC,EAKXH,EAAaX,EAAS,OAAQa","sourcesContent":["import __var_0__ from '@stdlib/vendor/fs.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar readdir = __var_0__.readdir;\n\n\n// MAIN //\n\n/**\n* Asynchronously reads the contents of a directory.\n*\n* @param {(string|Buffer)} path - directory path\n* @param {Function} clbk - callback to invoke after reading directory contents\n*\n* @example\n* function onRead( error, data ) {\n*     if ( error ) {\n*         console.error( error );\n*     } else {\n*         console.log( data );\n*     }\n* }\n* readDir( __dirname, onRead );\n*/\nfunction readDir() {\n\tvar args;\n\tvar i;\n\targs = new Array( arguments.length );\n\tfor ( i = 0; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treaddir.apply( null, args );\n}\n\n\n// EXPORTS //\nexport default readDir;\n","import __var_0__ from '@stdlib/vendor/fs.js'; // eslint-disable-line no-sync\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar readdirSync = __var_0__.readdirSync;\n\n\n// MAIN //\n\n/**\n* Synchronously reads the contents of a directory.\n*\n* @param {(string|Buffer)} path - directory path\n* @returns {(StringArray|Error)} directory contents or an error\n*\n* @example\n* var out = readDirSync( __dirname );\n* if ( out instanceof Error ) {\n*     throw out;\n* }\n* console.log( out );\n*/\nfunction readDirSync( path ) {\n\ttry {\n\t\treturn readdirSync( path );\n\t} catch ( err ) {\n\t\treturn err;\n\t}\n}\n\n\n// EXPORTS //\nexport default readDirSync;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './async.js';\nimport __var_2__ from './sync.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Read the contents of a directory.\n*\n* @module @stdlib/fs/read-dir\n*\n* @example\n* var readDir = require( '@stdlib/fs/read-dir' );\n*\n* function onRead( error, data ) {\n*     if ( error ) {\n*         console.error( error );\n*     } else {\n*         console.log( data );\n*     }\n* }\n* readDir( __dirname, onRead );\n*\n* @example\n* var readDirSync = require( '@stdlib/fs/read-dir' ).sync;\n*\n* var out = readDirSync( __dirname );\n* if ( out instanceof Error ) {\n*     throw out;\n* }\n* console.log( out );\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar readDir = __var_1__;\nvar sync = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( readDir, 'sync', sync );\n\n\n// EXPORTS //\nexport default readDir;\n"]}