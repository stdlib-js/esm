{"version":3,"sources":["@stdlib/fs/read-file/lib/main.js","@stdlib/fs/read-file/lib/sync.js","@stdlib/fs/read-file/lib/index.js"],"names":["readfile","__var_0__","readFile","args","i","Array","arguments","length","apply","readfileSync","readFileSync","file","options","f","err","setReadOnly","__var_1__","sync","__var_2__"],"mappings":"sGAsBA,IAAIA,EAAWC,EAAUC,SAuBzB,SAASA,IACR,IAAIC,EACAC,EAEJ,IADAD,EAAO,IAAIE,MAAOC,UAAUC,QACtBH,EAAI,EAAGA,EAAID,EAAKI,OAAQH,IAC7BD,EAAMC,GAAME,UAAWF,GAExBJ,EAASQ,MAAO,KAAML,GC9BvB,IAAIM,EAAeR,EAAUS,aAqB7B,SAASA,EAAcC,EAAMC,GAC5B,IAAIC,EACJ,IAEEA,EADIP,UAAUC,OAAS,EACnBE,EAAcE,EAAMC,GAEpBH,EAAcE,GAElB,MAAQG,GACT,OAAOA,EAER,OAAOD,ECJR,IAAIE,EAAcd,EACdC,EAAWc,EACXC,EAAOC,EAKXH,EAAab,EAAU,OAAQe","sourcesContent":["import __var_0__ from '@stdlib/vendor/fs.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar readfile = __var_0__.readFile;\n\n\n// MAIN //\n\n/**\n* Asynchronously reads the entire contents of a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(Object|string)} [options] - options\n* @param {(string|null)} [options.encoding] - file encoding\n* @param {string} [options.flag] - file status flag\n* @param {Function} clbk - callback to invoke after reading file contents\n*\n* @example\n* function onFile( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data );\n* }\n* readFile( __filename, onFile );\n*/\nfunction readFile() {\n\tvar args;\n\tvar i;\n\targs = new Array( arguments.length );\n\tfor ( i = 0; i < args.length; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\treadfile.apply( null, args );\n}\n\n\n// EXPORTS //\nexport default readFile;\n","import __var_0__ from '@stdlib/vendor/fs.js'; // eslint-disable-line no-sync\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar readfileSync = __var_0__.readFileSync;\n\n\n// MAIN //\n\n/**\n* Synchronously reads the entire contents of a file.\n*\n* @param {(string|Buffer|integer)} file - file path or file descriptor\n* @param {(Object|string)} [options] - options\n* @param {(string|null)} [options.encoding] - file encoding\n* @param {string} [options.flag] - file status flag\n* @returns {(Buffer|string|Error)} file contents or an error\n*\n* @example\n* var out = readFileSync( __filename );\n* if ( out instanceof Error ) {\n*     throw out;\n* }\n* console.log( out );\n*/\nfunction readFileSync( file, options ) {\n\tvar f;\n\ttry {\n\t\tif ( arguments.length > 1 ) {\n\t\t\tf = readfileSync( file, options );\n\t\t} else {\n\t\t\tf = readfileSync( file );\n\t\t}\n\t} catch ( err ) {\n\t\treturn err;\n\t}\n\treturn f;\n}\n\n\n// EXPORTS //\nexport default readFileSync;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './sync.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Read the entire contents of a file.\n*\n* @module @stdlib/fs/read-file\n*\n* @example\n* var readFile = require( '@stdlib/fs/read-file' );\n*\n* function onFile( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data );\n* }\n* readFile( __filename, onFile );\n*\n* @example\n* var readFileSync = require( '@stdlib/fs/read-file' ).sync;\n*\n* var out = readFileSync( __filename );\n* if ( out instanceof Error ) {\n*     throw out;\n* }\n* console.log( out );\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar readFile = __var_1__;\nvar sync = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( readFile, 'sync', sync );\n\n\n// EXPORTS //\nexport default readFile;\n"]}