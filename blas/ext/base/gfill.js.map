{"version":3,"sources":["@stdlib/blas/ext/base/gfill/lib/gfill.js","@stdlib/blas/ext/base/gfill/lib/ndarray.js","@stdlib/blas/ext/base/gfill/lib/main.js","@stdlib/blas/ext/base/gfill/lib/index.js"],"names":["M","gfill","N","alpha","x","stride","ix","i","m","offset","setReadOnly","__var_0__","__var_1__","ndarray","__var_2__"],"mappings":"2EAuBA,IAAIA,EAAI,EAoBR,SAASC,EAAOC,EAAGC,EAAOC,EAAGC,GAC5B,IAAIC,EACAC,EACAC,EAEJ,GAAKN,GAAK,EACT,OAAOE,EAGR,GAAgB,IAAXC,EAAe,CAInB,IAHAG,EAAIN,EAAIF,GAGC,EACR,IAAMO,EAAI,EAAGA,EAAIC,EAAGD,IACnBH,EAAGG,GAAMJ,EAGX,GAAKD,EAAIF,EACR,OAAOI,EAER,IAAMG,EAAIC,EAAGD,EAAIL,EAAGK,GAAKP,EACxBI,EAAGG,GAAMJ,EACTC,EAAGG,EAAE,GAAMJ,EACXC,EAAGG,EAAE,GAAMJ,EACXC,EAAGG,EAAE,GAAMJ,EACXC,EAAGG,EAAE,GAAMJ,EACXC,EAAGG,EAAE,GAAMJ,EACXC,EAAGG,EAAE,GAAMJ,EACXC,EAAGG,EAAE,GAAMJ,EAEZ,OAAOC,EAOR,IAJCE,EADID,EAAS,GACP,EAAEH,GAAKG,EAER,EAEAE,EAAI,EAAGA,EAAIL,EAAGK,IACnBH,EAAGE,GAAOH,EACVG,GAAMD,EAEP,OAAOD,EC9DR,IAAIJ,EAAI,EAqBR,SAASC,EAAOC,EAAGC,EAAOC,EAAGC,EAAQI,GACpC,IAAIH,EACAE,EACAD,EAEJ,GAAKL,GAAK,EACT,OAAOE,EAKR,GAHAE,EAAKG,EAGW,IAAXJ,EAAe,CAInB,IAHAG,EAAIN,EAAIF,GAGC,EACR,IAAMO,EAAI,EAAGA,EAAIC,EAAGD,IACnBH,EAAGE,GAAOH,EACVG,GAAMD,EAGR,GAAKH,EAAIF,EACR,OAAOI,EAER,IAAMG,EAAIC,EAAGD,EAAIL,EAAGK,GAAKP,EACxBI,EAAGE,GAAOH,EACVC,EAAGE,EAAG,GAAMH,EACZC,EAAGE,EAAG,GAAMH,EACZC,EAAGE,EAAG,GAAMH,EACZC,EAAGE,EAAG,GAAMH,EACZC,EAAGE,EAAG,GAAMH,EACZC,EAAGE,EAAG,GAAMH,EACZC,EAAGE,EAAG,GAAMH,EACZG,GAAMN,EAEP,OAAOI,EAER,IAAMG,EAAI,EAAGA,EAAIL,EAAGK,IACnBH,EAAGE,GAAOH,EACVG,GAAMD,EAEP,OAAOD,EC7DR,IAAIM,EAAcC,EACdV,EAAQW,EACRC,EAAUC,EAKdJ,EAAaT,EAAO,UAAWY,GCa5B,IAACZ,EAAQU","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Fills a strided array with a specified scalar constant.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar\n* @param {NumericArray} x - input array\n* @param {integer} stride - index increment\n* @returns {NumericArray} input array\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* gfill( x.length, 5.0, x, 1 );\n* // x => [ 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0 ]\n*/\nfunction gfill( N, alpha, x, stride ) {\n\tvar ix;\n\tvar i;\n\tvar m;\n\n\tif ( N <= 0 ) {\n\t\treturn x;\n\t}\n\t// Use loop unrolling if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tx[ i ] = alpha;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn x;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tx[ i ] = alpha;\n\t\t\tx[ i+1 ] = alpha;\n\t\t\tx[ i+2 ] = alpha;\n\t\t\tx[ i+3 ] = alpha;\n\t\t\tx[ i+4 ] = alpha;\n\t\t\tx[ i+5 ] = alpha;\n\t\t\tx[ i+6 ] = alpha;\n\t\t\tx[ i+7 ] = alpha;\n\t\t}\n\t\treturn x;\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tx[ ix ] = alpha;\n\t\tix += stride;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\nexport default gfill;\n","\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Fills a strided array with a specified scalar constant.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} alpha - scalar\n* @param {NumericArray} x - input array\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @returns {NumericArray} input array\n*\n* @example\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ];\n*\n* gfill( 3, 5.0, x, 1, x.length-3 );\n* // x => [ 1.0, -2.0, 3.0, 5.0, 5.0, 5.0 ]\n*/\nfunction gfill( N, alpha, x, stride, offset ) {\n\tvar ix;\n\tvar m;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn x;\n\t}\n\tix = offset;\n\n\t// Use loop unrolling if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tx[ ix ] = alpha;\n\t\t\t\tix += stride;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn x;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tx[ ix ] = alpha;\n\t\t\tx[ ix+1 ] = alpha;\n\t\t\tx[ ix+2 ] = alpha;\n\t\t\tx[ ix+3 ] = alpha;\n\t\t\tx[ ix+4 ] = alpha;\n\t\t\tx[ ix+5 ] = alpha;\n\t\t\tx[ ix+6 ] = alpha;\n\t\t\tx[ ix+7 ] = alpha;\n\t\t\tix += M;\n\t\t}\n\t\treturn x;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tx[ ix ] = alpha;\n\t\tix += stride;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\nexport default gfill;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './gfill.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar gfill = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( gfill, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default gfill;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill a strided array with a specified scalar constant.\n*\n* @module @stdlib/blas/ext/base/gfill\n*\n* @example\n* var gfill = require( '@stdlib/blas/ext/base/gfill' );\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* gfill( x.length, 5.0, x, 1 );\n* // x => [ 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0 ]\n*\n* @example\n* var gfill = require( '@stdlib/blas/ext/base/gfill' );\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* gfill.ndarray( x.length, 5.0, x, 1, 0 );\n* // x => [ 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0 ]\n*/\n\n// MODULES //\nvar gfill = __var_0__;\n\n\n// EXPORTS //\nexport default gfill;\n"]}