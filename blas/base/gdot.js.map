{"version":3,"sources":["@stdlib/blas/base/gdot/lib/main.js","@stdlib/blas/base/gdot/lib/ndarray.js","@stdlib/blas/base/gdot/lib/index.js"],"names":["M","gdot","N","x","strideX","y","strideY","dot","ix","iy","m","i","offsetX","offsetY","setReadOnly","__var_0__","__var_1__","ndarray","__var_2__"],"mappings":"wEAuBA,IAAIA,EAAI,EAsBR,SAASC,EAAMC,EAAGC,EAAGC,EAASC,EAAGC,GAChC,IAAIC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAJ,EAAM,EACDL,GAAK,EACT,OAAOK,EAGR,GAAiB,IAAZH,GAA6B,IAAZE,EAAgB,CAIrC,IAHAI,EAAIR,EAAIF,GAGC,EACR,IAAMW,EAAI,EAAGA,EAAID,EAAGC,IACnBJ,GAAOJ,EAAGQ,GAAMN,EAAGM,GAGrB,GAAKT,EAAIF,EACR,OAAOO,EAER,IAAMI,EAAID,EAAGC,EAAIT,EAAGS,GAAKX,EACxBO,GAASJ,EAAEQ,GAAGN,EAAEM,GAASR,EAAEQ,EAAE,GAAGN,EAAEM,EAAE,GAASR,EAAEQ,EAAE,GAAGN,EAAEM,EAAE,GAASR,EAAEQ,EAAE,GAAGN,EAAEM,EAAE,GAASR,EAAEQ,EAAE,GAAGN,EAAEM,EAAE,GAEjG,OAAOJ,EAYR,IATCC,EADIJ,EAAU,GACP,EAAEF,GAAME,EAEV,EAGLK,EADIH,EAAU,GACP,EAAEJ,GAAMI,EAEV,EAEAK,EAAI,EAAGA,EAAIT,EAAGS,IACnBJ,GAASJ,EAAGK,GAAOH,EAAGI,GACtBD,GAAMJ,EACNK,GAAMH,EAEP,OAAOC,EClER,IAAIP,EAAI,EAwBR,SAASC,EAAMC,EAAGC,EAAGC,EAASQ,EAASP,EAAGC,EAASO,GAClD,IAAIN,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAJ,EAAM,EACDL,GAAK,EACT,OAAOK,EAMR,GAJAC,EAAKI,EACLH,EAAKI,EAGY,IAAZT,GAA6B,IAAZE,EAAgB,CAIrC,IAHAI,EAAIR,EAAIF,GAGC,EACR,IAAMW,EAAI,EAAGA,EAAID,EAAGC,IACnBJ,GAASJ,EAAGK,GAAOH,EAAGI,GACtBD,GAAM,EACNC,GAAM,EAGR,GAAKP,EAAIF,EACR,OAAOO,EAER,IAAMI,EAAID,EAAGC,EAAIT,EAAGS,GAAKX,EACxBO,GAASJ,EAAEK,GAAIH,EAAEI,GAAUN,EAAEK,EAAG,GAAGH,EAAEI,EAAG,GAASN,EAAEK,EAAG,GAAGH,EAAEI,EAAG,GAASN,EAAEK,EAAG,GAAGH,EAAEI,EAAG,GAASN,EAAEK,EAAG,GAAGH,EAAEI,EAAG,GAC1GD,GAAMR,EACNS,GAAMT,EAEP,OAAOO,EAER,IAAMI,EAAI,EAAGA,EAAIT,EAAGS,IACnBJ,GAAOJ,EAAGK,GAAOH,EAAGI,GACpBD,GAAMJ,EACNK,GAAMH,EAEP,OAAOC,ECvCR,IAAIO,EAAcC,EACdd,EAAOe,EACPC,EAAUC,EAKdJ,EAAab,EAAM,UAAWgB","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 5;\n\n\n// MAIN //\n\n/**\n* Computes the dot product of `x` and `y`.\n*\n* @param {PositiveInteger} N - number of values over which to compute the dot product\n* @param {NumericArray} x - first input array\n* @param {integer} strideX - `x` stride length\n* @param {NumericArray} y - second input array\n* @param {integer} strideY - `y` stride length\n* @returns {number} dot product of `x` and `y`\n*\n* @example\n* var x = [ 4.0, 2.0, -3.0, 5.0, -1.0 ];\n* var y = [ 2.0, 6.0, -1.0, -4.0, 8.0 ];\n\n* var z = gdot( x.length, x, 1, y, 1 );\n* // returns -5.0\n*/\nfunction gdot( N, x, strideX, y, strideY ) {\n\tvar dot;\n\tvar ix;\n\tvar iy;\n\tvar m;\n\tvar i;\n\n\tdot = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn dot;\n\t}\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tdot += x[ i ] * y[ i ];\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn dot;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tdot += ( x[i]*y[i] ) + ( x[i+1]*y[i+1] ) + ( x[i+2]*y[i+2] ) + ( x[i+3]*y[i+3] ) + ( x[i+4]*y[i+4] ); // eslint-disable-line max-len\n\t\t}\n\t\treturn dot;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = ( 1-N ) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = ( 1-N ) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tdot += ( x[ ix ] * y[ iy ] );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn dot;\n}\n\n\n// EXPORTS //\nexport default gdot;\n","\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 5;\n\n\n// MAIN //\n\n/**\n* Computes the dot product of `x` and `y`.\n*\n* @param {integer} N - number of values over which to compute the dot product\n* @param {NumericArray} x - first input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @param {NumericArray} y - second input array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting index for `y`\n* @returns {number} dot product of `x` and `y`\n*\n* @example\n* var x = [ 4.0, 2.0, -3.0, 5.0, -1.0 ];\n* var y = [ 2.0, 6.0, -1.0, -4.0, 8.0 ];\n\n* var z = gdot( x.length, x, 1, 0, y, 1, 0 );\n* // returns -5.0\n*/\nfunction gdot( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar dot;\n\tvar ix;\n\tvar iy;\n\tvar m;\n\tvar i;\n\n\tdot = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn dot;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tdot += ( x[ ix ] * y[ iy ] );\n\t\t\t\tix += 1;\n\t\t\t\tiy += 1;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn dot;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tdot += ( x[ix]*y[iy] ) + ( x[ix+1]*y[iy+1] ) + ( x[ix+2]*y[iy+2] ) + ( x[ix+3]*y[iy+3] ) + ( x[ix+4]*y[iy+4] ); // eslint-disable-line max-len\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn dot;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tdot += x[ ix ] * y[ iy ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn dot;\n}\n\n\n// EXPORTS //\nexport default gdot;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to compute the dot product of vectors `x` and `y`.\n*\n* @module @stdlib/blas/base/gdot\n*\n* @example\n* var gdot = require( '@stdlib/blas/base/gdot' );\n*\n* var x = [ 4.0, 2.0, -3.0, 5.0, -1.0 ];\n* var y = [ 2.0, 6.0, -1.0, -4.0, 8.0 ];\n*\n* var z = gdot( x.length, x, 1, y, 1 );\n* // returns -5.0\n*\n*\n* @example\n* var gdot = require( '@stdlib/blas/base/gdot' );\n*\n* var x = [ 4.0, 2.0, -3.0, 5.0, -1.0 ];\n* var y = [ 2.0, 6.0, -1.0, -4.0, 8.0 ];\n*\n* var z = gdot.ndarray( x.length, x, 1, 0, y, 1, 0 );\n* // returns -5.0\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar gdot = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( gdot, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default gdot;\n"]}