{"version":3,"sources":["@stdlib/blas/base/sdot/lib/sdot.js","@stdlib/blas/base/sdot/lib/ndarray.js","@stdlib/blas/base/sdot/lib/index.js"],"names":["float64ToFloat32","__var_0__","sdot","N","x","strideX","y","strideY","dot","ix","iy","i","offsetX","offsetY","setReadOnly","__var_1__","ndarray","__var_2__"],"mappings":"iIAsBA,IAAIA,EAAmBC,EAwBvB,SAASC,EAAMC,EAAGC,EAAGC,EAASC,EAAGC,GAChC,IAAIC,EACAC,EACAC,EACAC,EAGJ,GADAH,EAAM,EACDL,GAAK,EACT,OAAOK,EAYR,IATCC,EADIJ,EAAU,GACP,EAAEF,GAAME,EAEV,EAGLK,EADIH,EAAU,GACP,EAAEJ,GAAMI,EAEV,EAEAI,EAAI,EAAGA,EAAIR,EAAGQ,IACnBH,EAAMR,EAAkBQ,EAAMR,EAAkBI,EAAGK,GAAOH,EAAGI,KAC7DD,GAAMJ,EACNK,GAAMH,EAEP,OAAOC,ECjDR,IAAIR,EAAmBC,EA0BvB,SAASC,EAAMC,EAAGC,EAAGC,EAASO,EAASN,EAAGC,EAASM,GAClD,IAAIL,EACAC,EACAC,EACAC,EAGJ,GADAH,EAAM,EACDL,GAAK,EACT,OAAOK,EAIR,IAFAC,EAAKG,EACLF,EAAKG,EACCF,EAAI,EAAGA,EAAIR,EAAGQ,IACnBH,EAAMR,EAAkBQ,EAAMR,EAAkBI,EAAGK,GAAOH,EAAGI,KAC7DD,GAAMJ,EACNK,GAAMH,EAEP,OAAOC,ECzCR,IAAIM,EAAcb,EACdC,EAAOa,EACPC,EAAUC,EAKdH,EAAaZ,EAAM,UAAWc","sourcesContent":["import __var_0__ from '@stdlib/number/float64/base/to-float32';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar float64ToFloat32 = __var_0__;\n\n\n// MAIN //\n\n/**\n* Computes the dot product of `x` and `y`.\n*\n* @param {PositiveInteger} N - number of values over which to compute the dot product\n* @param {Float32Array} x - first input array\n* @param {integer} strideX - `x` stride length\n* @param {Float32Array} y - second input array\n* @param {integer} strideY - `y` stride length\n* @returns {number} dot product of `x` and `y`\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var x = new Float32Array( [ 4.0, 2.0, -3.0, 5.0, -1.0 ] );\n* var y = new Float32Array( [ 2.0, 6.0, -1.0, -4.0, 8.0 ] );\n*\n* var z = sdot( x.length, x, 1, y, 1 );\n* // returns -5.0\n*/\nfunction sdot( N, x, strideX, y, strideY ) {\n\tvar dot;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\tdot = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn dot;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = ( 1-N ) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = ( 1-N ) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tdot = float64ToFloat32( dot + float64ToFloat32( x[ ix ] * y[ iy ] ) );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn dot;\n}\n\n\n// EXPORTS //\nexport default sdot;\n","import __var_0__ from '@stdlib/number/float64/base/to-float32';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar float64ToFloat32 = __var_0__;\n\n\n// MAIN //\n\n/**\n* Computes the dot product of `x` and `y`.\n*\n* @param {integer} N - number of values over which to compute the dot product\n* @param {Float32Array} x - first input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @param {Float32Array} y - second input array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting index for `y`\n* @returns {number} dot product of `x` and `y`\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var x = new Float32Array( [ 4.0, 2.0, -3.0, 5.0, -1.0 ] );\n* var y = new Float32Array( [ 2.0, 6.0, -1.0, -4.0, 8.0 ] );\n*\n* var z = sdot( x.length, x, 1, 0, y, 1, 0 );\n* // returns -5.0\n*/\nfunction sdot( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar dot;\n\tvar ix;\n\tvar iy;\n\tvar i;\n\n\tdot = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn dot;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tdot = float64ToFloat32( dot + float64ToFloat32( x[ ix ] * y[ iy ] ) );\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn dot;\n}\n\n\n// EXPORTS //\nexport default sdot;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './sdot.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar sdot = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( sdot, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default sdot;\n"]}