{"version":3,"sources":["@stdlib/blas/base/dcopy/lib/dcopy.js","@stdlib/blas/base/dcopy/lib/ndarray.js","@stdlib/blas/base/dcopy/lib/index.js"],"names":["M","dcopy","N","x","strideX","y","strideY","ix","iy","m","i","offsetX","offsetY","setReadOnly","__var_0__","__var_1__","ndarray","__var_2__"],"mappings":"wEAuBA,IAAIA,EAAI,EAwBR,SAASC,EAAOC,EAAGC,EAAGC,EAASC,EAAGC,GACjC,IAAIC,EACAC,EACAC,EACAC,EACJ,GAAKR,GAAK,EACT,OAAOG,EAGR,GAAiB,IAAZD,GAA6B,IAAZE,EAAgB,CAIrC,IAHAG,EAAIP,EAAIF,GAGC,EACR,IAAMU,EAAI,EAAGA,EAAID,EAAGC,IACnBL,EAAGK,GAAMP,EAAGO,GAGd,GAAKR,EAAIF,EACR,OAAOK,EAER,IAAMK,EAAID,EAAGC,EAAIR,EAAGQ,GAAKV,EACxBK,EAAGK,GAAMP,EAAGO,GACZL,EAAGK,EAAE,GAAMP,EAAGO,EAAE,GAChBL,EAAGK,EAAE,GAAMP,EAAGO,EAAE,GAChBL,EAAGK,EAAE,GAAMP,EAAGO,EAAE,GAChBL,EAAGK,EAAE,GAAMP,EAAGO,EAAE,GAChBL,EAAGK,EAAE,GAAMP,EAAGO,EAAE,GAChBL,EAAGK,EAAE,GAAMP,EAAGO,EAAE,GAChBL,EAAGK,EAAE,GAAMP,EAAGO,EAAE,GAEjB,OAAOL,EAYR,IATCE,EADIH,EAAU,GACR,EAAEF,GAAKE,EAER,EAGLI,EADIF,EAAU,GACR,EAAEJ,GAAKI,EAER,EAEAI,EAAI,EAAGA,EAAIR,EAAGQ,IACnBL,EAAGG,GAAOL,EAAGI,GACbA,GAAMH,EACNI,GAAMF,EAEP,OAAOD,ECxER,IAAIL,EAAI,EA0BR,SAASC,EAAOC,EAAGC,EAAGC,EAASO,EAASN,EAAGC,EAASM,GACnD,IAAIL,EACAC,EACAC,EACAC,EACJ,GAAKR,GAAK,EACT,OAAOG,EAMR,GAJAE,EAAKI,EACLH,EAAKI,EAGY,IAAZR,GAA6B,IAAZE,EAAgB,CAIrC,IAHAG,EAAIP,EAAIF,GAGC,EACR,IAAMU,EAAI,EAAGA,EAAID,EAAGC,IACnBL,EAAGG,GAAOL,EAAGI,GACbA,GAAMH,EACNI,GAAMF,EAGR,GAAKJ,EAAIF,EACR,OAAOK,EAER,IAAMK,EAAID,EAAGC,EAAIR,EAAGQ,GAAKV,EACxBK,EAAGG,GAAOL,EAAGI,GACbF,EAAGG,EAAG,GAAML,EAAGI,EAAG,GAClBF,EAAGG,EAAG,GAAML,EAAGI,EAAG,GAClBF,EAAGG,EAAG,GAAML,EAAGI,EAAG,GAClBF,EAAGG,EAAG,GAAML,EAAGI,EAAG,GAClBF,EAAGG,EAAG,GAAML,EAAGI,EAAG,GAClBF,EAAGG,EAAG,GAAML,EAAGI,EAAG,GAClBF,EAAGG,EAAG,GAAML,EAAGI,EAAG,GAClBA,GAAMP,EACNQ,GAAMR,EAEP,OAAOK,EAER,IAAMK,EAAI,EAAGA,EAAIR,EAAGQ,IACnBL,EAAGG,GAAOL,EAAGI,GACbA,GAAMH,EACNI,GAAMF,EAEP,OAAOD,ECtER,IAAIQ,EAAcC,EACdb,EAAQc,EACRC,EAAUC,EAKdJ,EAAaZ,EAAO,UAAWe","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of values to copy\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {Float64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @returns {Float64Array} `y`\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );\n*\n* dcopy( x.length, x, 1, y, 1 );\n* // y => <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction dcopy( N, x, strideX, y, strideY ) {\n\tvar ix;\n\tvar iy;\n\tvar m;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ i ] = x[ i ];\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ i ] = x[ i ];\n\t\t\ty[ i+1 ] = x[ i+1 ];\n\t\t\ty[ i+2 ] = x[ i+2 ];\n\t\t\ty[ i+3 ] = x[ i+3 ];\n\t\t\ty[ i+4 ] = x[ i+4 ];\n\t\t\ty[ i+5 ] = x[ i+5 ];\n\t\t\ty[ i+6 ] = x[ i+6 ];\n\t\t\ty[ i+7 ] = x[ i+7 ];\n\t\t}\n\t\treturn y;\n\t}\n\tif ( strideX < 0 ) {\n\t\tix = (1-N) * strideX;\n\t} else {\n\t\tix = 0;\n\t}\n\tif ( strideY < 0 ) {\n\t\tiy = (1-N) * strideY;\n\t} else {\n\t\tiy = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\nexport default dcopy;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar M = 8;\n\n\n// MAIN //\n\n/**\n* Copies values from `x` into `y`.\n*\n* @param {PositiveInteger} N - number of values to copy\n* @param {Float64Array} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @param {Float64Array} y - destination array\n* @param {integer} strideY - `y` stride length\n* @param {NonNegativeInteger} offsetY - starting `y` index\n* @returns {Float64Array} `y`\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0 ] );\n* var y = new Float64Array( [ 6.0, 7.0, 8.0, 9.0, 10.0 ] );\n*\n* dcopy( x.length, x, 1, 0, y, 1, 0 );\n* // y => <Float64Array>[ 1.0, 2.0, 3.0, 4.0, 5.0 ]\n*/\nfunction dcopy( N, x, strideX, offsetX, y, strideY, offsetY ) {\n\tvar ix;\n\tvar iy;\n\tvar m;\n\tvar i;\n\tif ( N <= 0 ) {\n\t\treturn y;\n\t}\n\tix = offsetX;\n\tiy = offsetY;\n\n\t// Use unrolled loops if both strides are equal to `1`...\n\tif ( strideX === 1 && strideY === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ty[ iy ] = x[ ix ];\n\t\t\t\tix += strideX;\n\t\t\t\tiy += strideY;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn y;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\ty[ iy ] = x[ ix ];\n\t\t\ty[ iy+1 ] = x[ ix+1 ];\n\t\t\ty[ iy+2 ] = x[ ix+2 ];\n\t\t\ty[ iy+3 ] = x[ ix+3 ];\n\t\t\ty[ iy+4 ] = x[ ix+4 ];\n\t\t\ty[ iy+5 ] = x[ ix+5 ];\n\t\t\ty[ iy+6 ] = x[ ix+6 ];\n\t\t\ty[ iy+7 ] = x[ ix+7 ];\n\t\t\tix += M;\n\t\t\tiy += M;\n\t\t}\n\t\treturn y;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\ty[ iy ] = x[ ix ];\n\t\tix += strideX;\n\t\tiy += strideY;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\nexport default dcopy;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './dcopy.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar dcopy = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( dcopy, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default dcopy;\n"]}