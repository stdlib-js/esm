{"version":3,"sources":["@stdlib/blas/base/gasum/lib/main.js","@stdlib/blas/base/gasum/lib/ndarray.js","@stdlib/blas/base/gasum/lib/index.js"],"names":["abs","__var_0__","M","gasum","N","x","stride","sum","m","i","offset","ix","setReadOnly","__var_1__","ndarray","__var_2__"],"mappings":"wHAsBA,IAAIA,EAAMC,EAKNC,EAAI,EAmBR,SAASC,EAAOC,EAAGC,EAAGC,GACrB,IAAIC,EACAC,EACAC,EAGJ,GADAF,EAAM,EACDH,GAAK,GAAKE,GAAU,EACxB,OAAOC,EAGR,GAAgB,IAAXD,EAAe,CAInB,IAHAE,EAAIJ,EAAIF,GAGC,EACR,IAAMO,EAAI,EAAGA,EAAID,EAAGC,IACnBF,GAAOP,EAAKK,EAAEI,IAGhB,GAAKL,EAAIF,EACR,OAAOK,EAER,IAAME,EAAID,EAAGC,EAAIL,EAAGK,GAAKP,EACxBK,GAAOP,EAAIK,EAAEI,IAAMT,EAAIK,EAAEI,EAAE,IAAMT,EAAIK,EAAEI,EAAE,IAAMT,EAAIK,EAAEI,EAAE,IAAMT,EAAIK,EAAEI,EAAE,IAAMT,EAAIK,EAAEI,EAAE,IAEpF,OAAOF,EAGR,IADAH,GAAKE,EACCG,EAAI,EAAGA,EAAIL,EAAGK,GAAKH,EACxBC,GAAOP,EAAKK,EAAEI,IAEf,OAAOF,ECvDR,IAAIP,EAAMC,EAKNC,EAAI,EAoBR,SAASC,EAAOC,EAAGC,EAAGC,EAAQI,GAC7B,IAAIH,EACAI,EACAH,EACAC,EAGJ,GADAF,EAAM,EACDH,GAAK,EACT,OAAOG,EAKR,GAHAI,EAAKD,EAGW,IAAXJ,EAAe,CAInB,IAHAE,EAAIJ,EAAIF,GAGC,EACR,IAAMO,EAAI,EAAGA,EAAID,EAAGC,IACnBF,GAAOP,EAAKK,EAAEM,IACdA,GAAML,EAGR,GAAKF,EAAIF,EACR,OAAOK,EAER,IAAME,EAAID,EAAGC,EAAIL,EAAGK,GAAKP,EACxBK,GAAOP,EAAKK,EAAEM,IAAQX,EAAKK,EAAEM,EAAG,IAAOX,EAAKK,EAAEM,EAAG,IAAOX,EAAKK,EAAEM,EAAG,IAAOX,EAAKK,EAAEM,EAAG,IAAOX,EAAKK,EAAEM,EAAG,IACpGA,GAAMT,EAEP,OAAOK,EAER,IAAME,EAAI,EAAGA,EAAIL,EAAGK,IACnBF,GAAOP,EAAKK,EAAEM,IACdA,GAAML,EAEP,OAAOC,ECpCR,IAAIK,EAAcX,EACdE,EAAQU,EACRC,EAAUC,EAKdH,EAAaT,EAAO,UAAWW","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/abs';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar abs = __var_0__;\n\n\n// VARIABLES //\n\nvar M = 6;\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values.\n*\n* @param {PositiveInteger} N - number of values to sum\n* @param {NumericArray} x - input array\n* @param {PositiveInteger} stride - `x` stride length\n* @returns {number} sum\n*\n* @example\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1 );\n* // 15.0\n*/\nfunction gasum( N, x, stride ) {\n\tvar sum;\n\tvar m;\n\tvar i;\n\n\tsum = 0.0;\n\tif ( N <= 0 || stride <= 0 ) {\n\t\treturn sum;\n\t}\n\t// Use unrolled loops if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tsum += abs( x[i] );\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn sum;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tsum += abs(x[i]) + abs(x[i+1]) + abs(x[i+2]) + abs(x[i+3]) + abs(x[i+4]) + abs(x[i+5]); // eslint-disable-line max-len\n\t\t}\n\t\treturn sum;\n\t}\n\tN *= stride;\n\tfor ( i = 0; i < N; i += stride ) {\n\t\tsum += abs( x[i] );\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\nexport default gasum;\n","import __var_0__ from '@stdlib/math/base/special/abs';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar abs = __var_0__;\n\n\n// VARIABLES //\n\nvar M = 6;\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values.\n*\n* @param {PositiveInteger} N - number of values to sum\n* @param {NumericArray} x - input array\n* @param {integer} stride - `x` stride length\n* @param {NonNegativeInteger} offset - starting `x` index\n* @returns {number} sum\n*\n* @example\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1, 0 );\n* // 15.0\n*/\nfunction gasum( N, x, stride, offset ) {\n\tvar sum;\n\tvar ix;\n\tvar m;\n\tvar i;\n\n\tsum = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn sum;\n\t}\n\tix = offset;\n\n\t// Use unrolled loops if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = N % M;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tsum += abs( x[ix] );\n\t\t\t\tix += stride;\n\t\t\t}\n\t\t}\n\t\tif ( N < M ) {\n\t\t\treturn sum;\n\t\t}\n\t\tfor ( i = m; i < N; i += M ) {\n\t\t\tsum += abs( x[ix] ) + abs( x[ix+1] ) + abs( x[ix+2] ) + abs( x[ix+3] ) + abs( x[ix+4] ) + abs( x[ix+5] ); // eslint-disable-line max-len\n\t\t\tix += M;\n\t\t}\n\t\treturn sum;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tsum += abs( x[ix] );\n\t\tix += stride;\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\nexport default gasum;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to compute the sum of absolute values.\n*\n* @module @stdlib/blas/base/gasum\n*\n* @example\n* var gasum = require( '@stdlib/blas/base/gasum' );\n*\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1 );\n* // 15.0\n*\n* @example\n* // Use the `ndarray` interface...\n* var gasum = require( '@stdlib/blas/base/gasum' ).ndarray;\n*\n* var x = new Float64Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = gasum( x.length, x, 1, 0 );\n* // 15.0\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar gasum = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( gasum, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default gasum;\n"]}