{"version":3,"sources":["@stdlib/blas/base/snrm2/lib/snrm2.js","@stdlib/blas/base/snrm2/lib/ndarray.js","@stdlib/blas/base/snrm2/lib/index.js"],"names":["sqrt","__var_0__","abs","__var_1__","pow","__var_2__","float64ToFloat32","__var_3__","snrm2","N","x","stride","scale","ssq","ax","i","offset","ix","setReadOnly","ndarray"],"mappings":"kRAyBA,IAAIA,EAAOC,EACPC,EAAMC,EACNC,EAAMC,EACNC,EAAmBC,EAsBvB,SAASC,EAAOC,EAAGC,EAAGC,GACrB,IAAIC,EACAC,EACAC,EACAC,EAEJ,GAAKN,GAAK,GAAKE,GAAU,EACxB,OAAO,EAER,GAAW,IAANF,EACJ,OAAOP,EAAKQ,EAAG,IAKhB,IAHAE,EAAQ,EACRC,EAAM,EACNJ,GAAKE,EACCI,EAAI,EAAGA,EAAIN,EAAGM,GAAKJ,EACR,IAAXD,EAAGK,KAEFH,GADLE,EAAKZ,EAAKQ,EAAGK,MAEZF,EAAMP,EAAkB,EAAQO,EAAMT,EAAKQ,EAAME,EAAI,IACrDF,EAAQE,GAERD,EAAMP,EAAkBO,EAAMT,EAAKU,EAAGF,EAAO,KAIhD,OAAON,EAAkBM,EAAQZ,EAAMa,ICnDxC,IAAIb,EAAOC,EACPC,EAAMC,EACNC,EAAMC,EACNC,EAAmBC,EAwBvB,SAASC,EAAOC,EAAGC,EAAGC,EAAQK,GAC7B,IAAIJ,EACAC,EACAC,EACAG,EACAF,EAEJ,GAAKN,GAAK,EACT,OAAO,EAER,GAAW,IAANA,EACJ,OAAOP,EAAKQ,EAAGM,IAKhB,IAHAC,EAAKD,EACLJ,EAAQ,EACRC,EAAM,EACAE,EAAI,EAAGA,EAAIN,EAAGM,IACF,IAAZL,EAAGO,KAEFL,GADLE,EAAKZ,EAAKQ,EAAGO,MAEZJ,EAAMP,EAAkB,EAAQO,EAAMT,EAAKQ,EAAME,EAAI,IACrDF,EAAQE,GAERD,EAAMP,EAAkBO,EAAMT,EAAKU,EAAGF,EAAO,KAG/CK,GAAMN,EAEP,OAAOL,EAAkBM,EAAQZ,EAAMa,ICxDxC,IAAIK,EAAcjB,EACdO,EAAQL,EACRgB,EAAUd,EAKda,EAAaV,EAAO,UAAWW","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/sqrt';\nimport __var_1__ from '@stdlib/math/base/special/abs';\nimport __var_2__ from '@stdlib/math/base/special/pow';\nimport __var_3__ from '@stdlib/number/float64/base/to-float32';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar sqrt = __var_0__;\nvar abs = __var_1__;\nvar pow = __var_2__;\nvar float64ToFloat32 = __var_3__;\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a single-precision floating-point vector.\n*\n* @param {PositiveInteger} N - number of values over which to compute the L2-norm\n* @param {Float32Array} x - input array\n* @param {PositiveInteger} stride - stride length\n* @returns {number} L2-norm\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var x = new Float32Array( [ 1.0, -2.0, 2.0 ] );\n* var N = 3;\n*\n* var z = snrm2( N, x, 1 );\n* // returns 3.0\n*/\nfunction snrm2( N, x, stride ) {\n\tvar scale;\n\tvar ssq;\n\tvar ax;\n\tvar i;\n\n\tif ( N <= 0 || stride <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 ) {\n\t\treturn abs( x[ 0 ] );\n\t}\n\tscale = 0.0;\n\tssq = 1.0;\n\tN *= stride;\n\tfor ( i = 0; i < N; i += stride ) {\n\t\tif ( x[ i ] !== 0.0 ) {\n\t\t\tax = abs( x[ i ] );\n\t\t\tif ( scale < ax ) {\n\t\t\t\tssq = float64ToFloat32( 1.0 + ( ssq * pow( scale/ax, 2 ) ) );\n\t\t\t\tscale = ax;\n\t\t\t} else {\n\t\t\t\tssq = float64ToFloat32( ssq + pow( ax/scale, 2 ) );\n\t\t\t}\n\t\t}\n\t}\n\treturn float64ToFloat32( scale * sqrt( ssq ) );\n}\n\n\n// EXPORTS //\nexport default snrm2;\n","import __var_0__ from '@stdlib/math/base/special/sqrt';\nimport __var_1__ from '@stdlib/math/base/special/abs';\nimport __var_2__ from '@stdlib/math/base/special/pow';\nimport __var_3__ from '@stdlib/number/float64/base/to-float32';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar sqrt = __var_0__;\nvar abs = __var_1__;\nvar pow = __var_2__;\nvar float64ToFloat32 = __var_3__;\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a single-precision floating-point vector.\n*\n* @param {PositiveInteger} N - number of values over which to compute the L2-norm\n* @param {Float32Array} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} L2-norm\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n* var floor = require( '@stdlib/math/base/special/floor' );\n*\n* var x = new Float32Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n* var N = floor( x.length / 2 );\n*\n* var z = snrm2( N, x, 2, 1 );\n* // returns 5.0\n*/\nfunction snrm2( N, x, stride, offset ) {\n\tvar scale;\n\tvar ssq;\n\tvar ax;\n\tvar ix;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( N === 1 ) {\n\t\treturn abs( x[ offset ] );\n\t}\n\tix = offset;\n\tscale = 0.0;\n\tssq = 1.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( x[ ix ] !== 0.0 ) {\n\t\t\tax = abs( x[ ix ] );\n\t\t\tif ( scale < ax ) {\n\t\t\t\tssq = float64ToFloat32( 1.0 + ( ssq * pow( scale/ax, 2 ) ) );\n\t\t\t\tscale = ax;\n\t\t\t} else {\n\t\t\t\tssq = float64ToFloat32( ssq + pow( ax/scale, 2 ) );\n\t\t\t}\n\t\t}\n\t\tix += stride;\n\t}\n\treturn float64ToFloat32( scale * sqrt( ssq ) );\n}\n\n\n// EXPORTS //\nexport default snrm2;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './snrm2.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar snrm2 = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( snrm2, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default snrm2;\n"]}