{"version":3,"sources":["@stdlib/blas/base/sasum/lib/sasum.js","@stdlib/blas/base/sasum/lib/ndarray.js","@stdlib/blas/base/sasum/lib/index.js"],"names":["abs","__var_0__","float64ToFloat32","__var_1__","sasum","N","x","stride","sum","i","offset","ix","setReadOnly","ndarray","__var_2__"],"mappings":"iLAuBA,IAAIA,EAAMC,EACNC,EAAmBC,EAqBvB,SAASC,EAAOC,EAAGC,EAAGC,GACrB,IAAIC,EACAC,EAGJ,GADAD,EAAM,EACDH,GAAK,GAAKE,GAAU,EACxB,OAAOC,EAGR,IADAH,GAAKE,EACCE,EAAI,EAAGA,EAAIJ,EAAGI,GAAKF,EACxBC,EAAMN,EAAkBM,EAAMR,EAAKM,EAAEG,KAEtC,OAAOD,EClCR,IAAIR,EAAMC,EACNC,EAAmBC,EAsBvB,SAASC,EAAOC,EAAGC,EAAGC,EAAQG,GAC7B,IAAIF,EACAG,EACAF,EAGJ,GADAD,EAAM,EACDH,GAAK,EACT,OAAOG,EAGR,IADAG,EAAKD,EACCD,EAAI,EAAGA,EAAIJ,EAAGI,IACnBD,EAAMN,EAAkBM,EAAMR,EAAKM,EAAEK,KACrCA,GAAMJ,EAEP,OAAOC,ECpCR,IAAII,EAAcX,EACdG,EAAQD,EACRU,EAAUC,EAKdF,EAAaR,EAAO,UAAWS","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/abs';\nimport __var_1__ from '@stdlib/number/float64/base/to-float32';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar abs = __var_0__;\nvar float64ToFloat32 = __var_1__;\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values.\n*\n* @param {PositiveInteger} N - number of values to sum\n* @param {Float32Array} x - input array\n* @param {PositiveInteger} stride - `x` stride length\n* @returns {number} sum\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var x = new Float32Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = sasum( x.length, x, 1 );\n* // returns 15.0\n*/\nfunction sasum( N, x, stride ) {\n\tvar sum;\n\tvar i;\n\n\tsum = 0.0;\n\tif ( N <= 0 || stride <= 0 ) {\n\t\treturn sum;\n\t}\n\tN *= stride;\n\tfor ( i = 0; i < N; i += stride ) {\n\t\tsum = float64ToFloat32( sum + abs( x[i] ) );\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\nexport default sasum;\n","import __var_0__ from '@stdlib/math/base/special/abs';\nimport __var_1__ from '@stdlib/number/float64/base/to-float32';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar abs = __var_0__;\nvar float64ToFloat32 = __var_1__;\n\n\n// MAIN //\n\n/**\n* Computes the sum of absolute values.\n*\n* @param {PositiveInteger} N - number of values to sum\n* @param {Float32Array} x - input array\n* @param {integer} stride - `x` stride length\n* @param {NonNegativeInteger} offset - starting `x` index\n* @returns {number} sum\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n*\n* var x = new Float32Array( [ 1.0, -2.0, 3.0, -4.0, 5.0 ] );\n*\n* var s = sasum( x.length, x, 1, 0 );\n* // returns 15.0\n*/\nfunction sasum( N, x, stride, offset ) {\n\tvar sum;\n\tvar ix;\n\tvar i;\n\n\tsum = 0.0;\n\tif ( N <= 0 ) {\n\t\treturn sum;\n\t}\n\tix = offset;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tsum = float64ToFloat32( sum + abs( x[ix] ) );\n\t\tix += stride;\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\nexport default sasum;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './sasum.js';\nimport __var_2__ from './ndarray.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar sasum = __var_1__;\nvar ndarray = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( sasum, 'ndarray', ndarray );\n\n\n// EXPORTS //\nexport default sasum;\n"]}