{"version":3,"sources":["@stdlib/fs/lib/index.js"],"names":["setReadOnly","__var_0__","fs","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__","__var_11__","__var_12__"],"mappings":"8hCAqCA,IAAAA,EAAAC,EAUAC,EAAA,GASAF,EAAAE,EAAA,QAAAC,GASAH,EAAAE,EAAA,SAAAE,GASAJ,EAAAE,EAAA,OAAAG,GASAL,EAAAE,EAAA,UAAAI,GASAN,EAAAE,EAAA,WAAAK,GASAP,EAAAE,EAAA,eAAAM,GASAR,EAAAE,EAAA,WAAAO,GASAT,EAAAE,EAAA,WAAAQ,GASAV,EAAAE,EAAA,SAAAS,GASAX,EAAAE,EAAA,oBAAAU,GASAZ,EAAAE,EAAA,SAAAW,GASAb,EAAAE,EAAA,YAAAY","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/fs/close';\nimport __var_2__ from '@stdlib/fs/exists';\nimport __var_3__ from '@stdlib/fs/open';\nimport __var_4__ from '@stdlib/fs/read-dir';\nimport __var_5__ from '@stdlib/fs/read-file';\nimport __var_6__ from '@stdlib/fs/read-file-list';\nimport __var_7__ from '@stdlib/fs/read-json';\nimport __var_8__ from '@stdlib/fs/read-wasm';\nimport __var_9__ from '@stdlib/fs/rename';\nimport __var_10__ from '@stdlib/fs/resolve-parent-path';\nimport __var_11__ from '@stdlib/fs/unlink';\nimport __var_12__ from '@stdlib/fs/write-file';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace fs\n*/\nvar fs = {};\n\n/**\n* @name close\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/close}\n*/\nsetReadOnly( fs, 'close', __var_1__);\n\n/**\n* @name exists\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/exists}\n*/\nsetReadOnly( fs, 'exists', __var_2__);\n\n/**\n* @name open\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/open}\n*/\nsetReadOnly( fs, 'open', __var_3__);\n\n/**\n* @name readDir\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/read-dir}\n*/\nsetReadOnly( fs, 'readDir', __var_4__);\n\n/**\n* @name readFile\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/read-file}\n*/\nsetReadOnly( fs, 'readFile', __var_5__);\n\n/**\n* @name readFileList\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/read-file-list}\n*/\nsetReadOnly( fs, 'readFileList', __var_6__);\n\n/**\n* @name readJSON\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/read-json}\n*/\nsetReadOnly( fs, 'readJSON', __var_7__);\n\n/**\n* @name readWASM\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/read-wasm}\n*/\nsetReadOnly( fs, 'readWASM', __var_8__);\n\n/**\n* @name rename\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/rename}\n*/\nsetReadOnly( fs, 'rename', __var_9__);\n\n/**\n* @name resolveParentPath\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/resolve-parent-path}\n*/\nsetReadOnly( fs, 'resolveParentPath', __var_10__);\n\n/**\n* @name unlink\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/unlink}\n*/\nsetReadOnly( fs, 'unlink', __var_11__);\n\n/**\n* @name writeFile\n* @memberof fs\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fs/write-file}\n*/\nsetReadOnly( fs, 'writeFile', __var_12__);\n\n\n// EXPORTS //\nexport default fs;\n\nexport { __var_1__ as close, __var_2__ as exists, __var_3__ as open, __var_4__ as readDir, __var_5__ as readFile, __var_6__ as readFileList, __var_7__ as readJSON, __var_8__ as readWASM, __var_9__ as rename, __var_10__ as resolveParentPath, __var_11__ as unlink, __var_12__ as writeFile};"]}