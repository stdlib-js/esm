{"version":3,"sources":["@stdlib/symbol/async-iterator/lib/main.js","@stdlib/symbol/async-iterator/lib/index.js"],"names":["hasAsyncIteratorSymbolSupport","__var_0__","AsyncIteratorSymbol","Symbol","asyncIterator"],"mappings":"gEAsBA,IAAIA,EAAgCC,EAmBhCC,EAAwBF,IAAoCG,OAAOC,cAAgB,KCJnFF,EAAsBD","sourcesContent":["import __var_0__ from '@stdlib/assert/has-async-iterator-symbol-support'; // eslint-disable-line id-length\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar hasAsyncIteratorSymbolSupport = __var_0__;\n\n\n// MAIN //\n\n/**\n* Async iterator symbol.\n*\n* @name AsyncIteratorSymbol\n* @constant\n* @type {(symbol|null)}\n*\n* @example\n* if ( AsyncIteratorSymbol === null ) {\n*     console.log( 'Environment does not support Symbol.asyncIterator.' );\n* } else {\n*     console.log( 'Environment does support Symbol.asyncIterator.' );\n* }\n*/\nvar AsyncIteratorSymbol = ( hasAsyncIteratorSymbolSupport() ) ? Symbol.asyncIterator : null; // eslint-disable-line max-len\n\n\n// EXPORTS //\nexport default AsyncIteratorSymbol;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Async iterator symbol.\n*\n* @module @stdlib/symbol/async-iterator\n*\n* @example\n* var AsyncIteratorSymbol = require( '@stdlib/symbol/async-iterator' );\n*\n* if ( AsyncIteratorSymbol === null ) {\n*     console.log( 'Environment does not support Symbol.asyncIterator.' );\n* } else {\n*     console.log( 'Environment does support Symbol.asyncIterator.' );\n* }\n*/\n\n// MAIN //\nvar AsyncIteratorSymbol = __var_0__;\n\n\n// EXPORTS //\nexport default AsyncIteratorSymbol;\n"]}