// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./../../assert/is-number.js";import a from"./../../assert/is-ndarray-like.js";import e from"./../../assert/is-array-like-object.js";import s from"./../../ndarray/base/assert/is-single-segment-compatible.js";import i from"./../../assert/is-float64array.js";import t from"./../../assert/is-float32array.js";import o from"./../../ndarray/memoized-ctor.js";import m from"./../../ndarray/base/buffer.js";import f from"./../../ndarray/base/shape2strides.js";import n from"./../../ndarray/base/iteration-order.js";import d from"./../../ndarray/base/singleton-dimensions.js";import p from"./../../ndarray/base/buffer-dtype.js";import b from"./../../ndarray/base/max-view-buffer-index.js";import y from"./../../ndarray/base/min-view-buffer-index.js";import j from"./../base/special/abs.js";import l from"./../strided/special/dabs.js";import u from"./../strided/special/sabs.js";import c from"./../strided/special/abs.js";var g=r.isPrimitive,v=a,h=e,k=s,w=i,x=t,z=o,E=m,M=f,P=n,T=d,V=p,q=b,A=y,B=j,C=l,D=u,F=c;function G(r){var a,e,s,i,t,o,m,f,n,d,p,b,y;if(g(r))return B(r);if(v(r)){if(n=r.length,i=r.ndims,t=r.shape,a=r.strides,e=r.offset,s=r.order,o=r.data,b="float64"===(f=r.dtype)?C:"float32"===f?D:F,p=z(f,i)(m=E(f,n),t,M(t,s),0,s),1===i)return b.ndarray(n,o,a[0],e,m,1,0),p;if(T(t)===i-1){for(y=0;y<i;y++)if(1!==t[y]){d=a[y];break}return b.ndarray(n,o,d,e,m,1,0),p}if(0!==(d=P(a))&&k(t,a,e))return e=1===d?A(t,a,e):q(t,a,e),b.ndarray(n,o,d,e,m,1,0),p;for(o=E(f,n),y=0;y<n;y++)o[y]=r.iget(y);return b(n,o,1,m,1),p}if(!h(r))throw new TypeError("invalid argument. Must provide either an ndarray, array-like object, or number. Value: `"+r+"`.");return n=r.length,f=V(r)||"generic",p=E(f,n),(b=w(r)?C:x(r)?D:F)(n,r,1,p,1),p}var H=G;export default H;
//# sourceMappingURL=abs.js.map