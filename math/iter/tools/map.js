// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./../../../utils/define-nonenumerable-read-only-property.js";import e from"./../../../assert/is-function.js";import n from"./../../../assert/is-iterator-like.js";import t from"./../../../assert/is-number.js";import i from"./../../../assert/has-own-property.js";import o from"./../../../symbol/iterator.js";import a from"./../../../assert/is-plain-object.js";var u=a,l=i;function s(r,e){return u(e)?(l(e,"invalid")&&(r.invalid=e.invalid),null):new TypeError("invalid argument. Options argument must be an object. Value: `"+e+"`.")}var m=r,v=e,d=n,f=t.isPrimitive,p=i,c=o,j=s;function b(r,e,n){var t,i,o,a;if(!d(r))throw new TypeError("invalid argument. First argument must be an iterator protocol-compliant object. Value: `"+r+"`.");if(!v(e))throw new TypeError("invalid argument. Second argument must be a function. Value: `"+e+"`.");if(t={invalid:NaN},arguments.length>2&&(o=j(t,n)))throw o;return m(i={},"next",u),m(i,"return",l),c&&v(r[c])&&m(i,c,s),i;function u(){var n,i;return a?{done:!0}:(i=r.next()).done?(a=!0,n={},p(i,"value")&&(n.value=f(i.value)?e(i.value):t.invalid),n.done=!0,n):{value:f(i.value)?e(i.value):t.invalid,done:!1}}function l(r){return a=!0,arguments.length?{value:r,done:!0}:{done:!0}}function s(){return b(r[c](),e,t)}}var g=b;export default g;
//# sourceMappingURL=map.js.map