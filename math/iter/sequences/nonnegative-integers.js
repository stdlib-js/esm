// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./../../../utils/define-nonenumerable-read-only-property.js";import e from"./../../../symbol/iterator.js";import t from"./../../../constants/math/float64-max-safe-integer.js";import n from"./../../../assert/is-plain-object.js";import o from"./../../../assert/has-own-property.js";import i from"./../../../assert/is-nonnegative-integer.js";var a=n,s=o,u=i.isPrimitive;function m(r,e){return a(e)?s(e,"iter")&&(r.iter=e.iter,!u(e.iter))?new TypeError("invalid option. `iter` option must be a nonnegative integer. Option: `"+e.iter+"`."):null:new TypeError("invalid argument. Options argument must be an object. Value: `"+e+"`.")}var p=r,f=e,l=t,v=m,d=l+1;function g(r){var e,t,n,o,i;if(e={iter:d},arguments.length&&(o=v(e,r)))throw o;return i=-1,p(t={},"next",a),p(t,"return",s),f&&p(t,f,u),t;function a(){return i+=1,n||i>=e.iter?{done:!0}:{value:i,done:!1}}function s(r){return n=!0,arguments.length?{value:r,done:!0}:{done:!0}}function u(){return g(e)}}var c=g;export default c;
//# sourceMappingURL=nonnegative-integers.js.map