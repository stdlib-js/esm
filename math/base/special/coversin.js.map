{"version":3,"sources":["@stdlib/math/base/special/coversin/lib/coversin.js","@stdlib/math/base/special/coversin/lib/index.js"],"names":["sin","__var_0__","coversin","x"],"mappings":"wBAsBA,IAAIA,EAAMC,EA2BV,SAASC,EAAUC,GAClB,OAAO,EAAMH,EAAKG,GCPhB,IAACD,EAAWD","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/sin';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar sin = __var_0__;\n\n\n// MAIN //\n\n/**\n* Computes the coversed sine.\n*\n* @param {number} x - input value (in radians)\n* @returns {number} coversed sine\n*\n* @example\n* var v = coversin( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = coversin( 3.141592653589793/2.0 );\n* // returns 0.0\n*\n* @example\n* var v = coversin( -3.141592653589793/6.0 );\n* // returns 1.5\n*\n* @example\n* var v = coversin( NaN );\n* // returns NaN\n*/\nfunction coversin( x ) {\n\treturn 1.0 - sin( x );\n}\n\n\n// EXPORTS //\nexport default coversin;\n","import __var_0__ from './coversin.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the coversed sine.\n*\n* @module @stdlib/math/base/special/coversin\n*\n* @example\n* var coversin = require( '@stdlib/math/base/special/coversin' );\n*\n* var v = coversin( 0.0 );\n* // returns 1.0\n*\n* v = coversin( 3.141592653589793/2.0 );\n* // returns 0.0\n*\n* v = coversin( -3.141592653589793/6.0 );\n* // returns 1.5\n*\n* v = coversin( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar coversin = __var_0__;\n\n\n// EXPORTS //\nexport default coversin;\n"]}