{"version":3,"sources":["@stdlib/math/base/special/acoversin/lib/acoversin.js","@stdlib/math/base/special/acoversin/lib/index.js"],"names":["asin","__var_0__","acoversin","x"],"mappings":"yBAsBA,IAAIA,EAAOC,EA2BX,SAASC,EAAWC,GACnB,OAAOH,EAAM,EAAMG,GCPjB,IAACD,EAAYD","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/asin';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar asin = __var_0__;\n\n\n// MAIN //\n\n/**\n* Computes the inverse coversed sine.\n*\n* @param {number} x - input value\n* @returns {number} inverse coversed sine\n*\n* @example\n* var v = acoversin( 0.0 );\n* // returns ~1.5708\n*\n* @example\n* var v = acoversin( 3.141592653589793/2.0 );\n* // returns ~-0.6075\n*\n* @example\n* var v = acoversin( 3.141592653589793/6.0 );\n* // returns ~0.4966\n*\n* @example\n* var v = acoversin( NaN );\n* // returns NaN\n*/\nfunction acoversin( x ) {\n\treturn asin( 1.0 - x );\n}\n\n\n// EXPORTS //\nexport default acoversin;\n","import __var_0__ from './acoversin.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the inverse coversed sine.\n*\n* @module @stdlib/math/base/special/acoversin\n*\n* @example\n* var acoversin = require( '@stdlib/math/base/special/acoversin' );\n*\n* var v = acoversin( 0.0 );\n* // returns ~1.5708\n*\n* v = acoversin( 3.141592653589793/2.0 );\n* // returns ~-0.6075\n*\n* v = acoversin( 3.141592653589793/6.0 );\n* // returns ~0.4966\n*\n* v = acoversin( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar acoversin = __var_0__;\n\n\n// EXPORTS //\nexport default acoversin;\n"]}