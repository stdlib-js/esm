{"version":3,"sources":["@stdlib/math/base/special/binet/lib/main.js","@stdlib/math/base/special/binet/lib/index.js"],"names":["isnan","__var_0__","cospi","__var_1__","pow","__var_2__","PHI","__var_3__","PINF","__var_4__","NINF","__var_5__","SQRT_5","binet","x","a","NaN"],"mappings":"iQA2BA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EACNC,EAAMC,EACNC,EAAOC,EACPC,EAAOC,EAKPC,EAAS,iBA2Db,SAASC,EAAOC,GACf,IAAIC,EAEJ,OACCf,EAAOc,IACPA,IAAMN,GACNM,IAAMJ,EAECM,MAERD,EAAIX,EAAKE,EAAKQ,IACVZ,EAAOY,GAAMC,GACEH,ECxDjB,IAACC,EAAQZ","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/cospi';\nimport __var_2__ from '@stdlib/math/base/special/pow';\nimport __var_3__ from '@stdlib/constants/math/float64-phi';\nimport __var_4__ from '@stdlib/constants/math/float64-pinf';\nimport __var_5__ from '@stdlib/constants/math/float64-ninf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar cospi = __var_1__;\nvar pow = __var_2__;\nvar PHI = __var_3__;\nvar PINF = __var_4__;\nvar NINF = __var_5__;\n\n\n// VARIABLES //\n\nvar SQRT_5 = 2.23606797749979;\n\n\n// MAIN //\n\n/**\n* Evaluates Binet's formula extended to real numbers.\n*\n* ## Notes\n*\n* -   [Non integer Fibonacci numbers][1]\n* -   [Interpolated Fibonacci numbers - real or complex][2]\n*\n* [1]: https://math.stackexchange.com/questions/798190/non-integer-fibonacci-numbers\n* [2]: https://math.stackexchange.com/questions/589841/interpolated-fibonacci-numbers-real-or-complex\n*\n* @param {number} x - input value\n* @returns {number} real-valued result\n*\n* @example\n* var y = binet( 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = binet( 1.0 );\n* // returns 1.0\n*\n* @example\n* var y = binet( 2.0 );\n* // returns 1.0\n*\n* @example\n* var y = binet( 3.0 );\n* // returns 2.0\n*\n* @example\n* var y = binet( 4.0 );\n* // returns 3.0\n*\n* @example\n* var y = binet( 5.0 );\n* // returns ~5.0\n*\n* @example\n* var y = binet( 6.0 );\n* // returns ~8.0\n*\n* @example\n* var y = binet( NaN );\n* // returns NaN\n*\n* @example\n* var y = binet( 3.14 );\n* // returns ~2.12\n*\n* @example\n* var y = binet( -1.0 );\n* // returns 1.0\n*/\nfunction binet( x ) {\n\tvar a;\n\tvar b;\n\tif (\n\t\tisnan( x ) ||\n\t\tx === PINF ||\n\t\tx === NINF\n\t) {\n\t\treturn NaN;\n\t}\n\ta = pow( PHI, x );\n\tb = cospi( x ) / a;\n\treturn ( a - b ) / SQRT_5;\n}\n\n\n// EXPORTS //\nexport default binet;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate Binet's formula extended to real numbers.\n*\n* @module @stdlib/math/base/special/binet\n*\n* @example\n* var binet = require( '@stdlib/math/base/special/binet' );\n*\n* var y = binet( 0.0 );\n* // returns 0.0\n*\n* y = binet( 1.0 );\n* // returns 1.0\n*\n* y = binet( 2.0 );\n* // returns 1.0\n*\n* y = binet( 3.0 );\n* // returns 2.0\n*\n* y = binet( 4.0 );\n* // returns 3.0\n*\n* y = binet( 5.0 );\n* // returns ~5.0\n*\n* y = binet( 6.0 );\n* // returns ~8.0\n*/\n\n// MODULES //\nvar binet = __var_0__;\n\n\n// EXPORTS //\nexport default binet;\n"]}