{"version":3,"sources":["@stdlib/math/base/special/powm1/lib/powm1.js","@stdlib/math/base/special/powm1/lib/index.js"],"names":["isnan","__var_0__","abs","__var_1__","expm1","__var_2__","ln","__var_3__","pow","__var_4__","trunc","__var_5__","powm1","b","x","y","NaN"],"mappings":"gKAwCA,IAAIA,EAAQC,EACRC,EAAMC,EACNC,EAAQC,EACRC,EAAKC,EACLC,EAAMC,EACNC,EAAQC,EA4CZ,SAASC,EAAOC,EAAGC,GAClB,IAAIC,EACJ,GACCf,EAAOa,IACPb,EAAOc,GAEP,OAAOE,IAER,GAAW,IAANF,EAEJ,OAAO,EAER,GAAW,IAAND,EAEJ,OAAQ,EAMT,GAJKA,EAAI,GAAOC,EAAE,GAAQ,IAEzBD,GAAKA,GAEDA,EAAI,GACR,IACCX,EAAKY,GAAGD,EAAE,IAAS,IACnBX,EAAKY,GAAM,MAGXC,EAAIT,EAAIO,GAAMC,GACL,GACR,OAAOV,EAAOW,QAGV,GAAKL,EAAOI,KAAQA,EAE1B,OAAOE,IAER,OAAOR,EAAKK,EAAGC,GAAM,ECrEnB,IAACF,EAAQX","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/abs';\nimport __var_2__ from '@stdlib/math/base/special/expm1';\nimport __var_3__ from '@stdlib/math/base/special/ln';\nimport __var_4__ from '@stdlib/math/base/special/pow';\nimport __var_5__ from '@stdlib/math/base/special/trunc';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_60_0/boost/math/special_functions/powm1.hpp}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar abs = __var_1__;\nvar expm1 = __var_2__;\nvar ln = __var_3__;\nvar pow = __var_4__;\nvar trunc = __var_5__;\n\n\n// MAIN //\n\n/**\n* Evaluates `bˣ - 1`.\n*\n* @param {number} b - base\n* @param {number} x - exponent\n* @returns {number} function value\n*\n* @example\n* var y = powm1( 2.0, 3.0 );\n* // returns 7.0\n*\n* @example\n* var y = powm1( 4.0, 0.5 );\n* // returns 1.0\n*\n* @example\n* var y = powm1( 0.0, 100.0 );\n* // returns -1.0\n*\n* @example\n* var y = powm1( 100.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = powm1( 0.0, 0.0 );\n* // returns 0.0\n*\n* @example\n* var y = powm1( 3.141592653589793, 5.0 );\n* // returns ~305.0197\n*\n* @example\n* var y = powm1( NaN, 3.0 );\n* // returns NaN\n*\n* @example\n* var y = powm1( 5.0, NaN );\n* // returns NaN\n*/\nfunction powm1( b, x ) {\n\tvar y;\n\tif (\n\t\tisnan( b ) ||\n\t\tisnan( x )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\t// Any number raised to zero (including 0) is always 1 => b^0 - 1 = 0\n\t\treturn 0.0;\n\t}\n\tif ( b === 0.0 ) {\n\t\t// Zero raised to any number (except 0) is always zero => 0^x - 1 = -1\n\t\treturn -1.0;\n\t}\n\tif ( b < 0.0 && x%2.0 === 0 ) {\n\t\t// If `x` is even, recognize that `(-b)**x == (b)**x`...\n\t\tb = -b;\n\t}\n\tif ( b > 0.0 ) {\n\t\tif (\n\t\t\tabs( x*(b-1.0) ) < 0.5 ||\n\t\t\tabs( x ) < 0.2\n\t\t) {\n\t\t\t// No good/quick approximation for ln(b)*x, so we have to evaluate...\n\t\t\ty = ln( b ) * x;\n\t\t\tif ( y < 0.5 ) {\n\t\t\t\treturn expm1( y );\n\t\t\t}\n\t\t}\n\t} else if ( trunc( x ) !== x ) {\n\t\t// Exponentiation would yield a complex result...\n\t\treturn NaN;\n\t}\n\treturn pow( b, x ) - 1.0;\n}\n\n\n// EXPORTS //\nexport default powm1;\n","import __var_0__ from './powm1.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate `bˣ - 1`.\n*\n* @module @stdlib/math/base/special/powm1\n*\n* @example\n* var powm1 = require( '@stdlib/math/base/special/powm1' );\n*\n* var y = powm1( 2.0, 3.0 );\n* // returns 7.0\n*\n* y = powm1( 4.0, 0.5 );\n* // returns 1.0\n*\n* y = powm1( 0.0, 100.0 );\n* // returns -1.0\n*\n* y = powm1( 100.0, 0.0 );\n* // returns 0.0\n*\n* y = powm1( 0.0, 0.0 );\n* // returns 0.0\n*\n* y = powm1( 3.141592653589793, 5.0 );\n* // returns ~305.0197\n*\n* y = powm1( NaN, 3.0 );\n* // returns NaN\n*\n* y = powm1( 5.0, NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar powm1 = __var_0__;\n\n\n// EXPORTS //\nexport default powm1;\n"]}