{"version":3,"sources":["@stdlib/math/base/special/ahavercos/lib/ahavercos.js","@stdlib/math/base/special/ahavercos/lib/index.js"],"names":["acos","__var_0__","sqrt","__var_1__","ahavercos","x"],"mappings":"kDAuBA,IAAIA,EAAOC,EACPC,EAAOC,EA2BX,SAASC,EAAWC,GACnB,OAAO,EAAML,EAAME,EAAMG,ICTvB,IAACD,EAAYH","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/acos';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar acos = __var_0__;\nvar sqrt = __var_1__;\n\n\n// MAIN //\n\n/**\n* Computes the inverse half-value versed cosine.\n*\n* @param {number} x - input value\n* @returns {number} inverse half-value versed cosine\n*\n* @example\n* var v = ahavercos( 0.0 );\n* // returns ~3.1416\n*\n* @example\n* var v = ahavercos( 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = ahavercos( 0.5 );\n* // returns ~1.5708\n*\n* @example\n* var v = ahavercos( NaN );\n* // returns NaN\n*/\nfunction ahavercos( x ) {\n\treturn 2.0 * acos( sqrt( x ) );\n}\n\n\n// EXPORTS //\nexport default ahavercos;\n","import __var_0__ from './ahavercos.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the inverse half-value versed cosine.\n*\n* @module @stdlib/math/base/special/ahavercos\n*\n* @example\n* var ahavercos = require( '@stdlib/math/base/special/ahavercos' );\n*\n* var v = ahavercos( 0.0 );\n* // returns ~3.1416\n*\n* v = ahavercos( 1.0 );\n* // returns 0.0\n*\n* v = ahavercos( 0.5 );\n* // returns ~1.5707\n*\n* v = ahavercos( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar ahavercos = __var_0__;\n\n\n// EXPORTS //\nexport default ahavercos;\n"]}