{"version":3,"sources":["@stdlib/math/base/special/factorial/lib/factorial.js","@stdlib/math/base/special/factorial/lib/index.js"],"names":["isnan","__var_0__","isInteger","__var_1__","gamma","__var_2__","PINF","__var_3__","FACTORIALS","__var_4__","MAX_FACTORIAL","factorial","x","NaN"],"mappings":"86GA0BIA,EAAQC,EACRC,EAAYC,EACZC,EAAQC,EACRC,EAAOC,EACPC,EAAaC,EAKbC,EAAgB,IAuCpB,SAASC,EAAWC,GACnB,OAAKZ,EAAOY,GACJC,IAEHX,EAAWU,GACVA,EAAI,EACDC,IAEHD,GAAKF,EACFF,EAAYI,GAEbN,EAEDF,EAAOQ,EAAI,GCnChB,IAACD,EAAYV","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/assert/is-integer';\nimport __var_2__ from '@stdlib/math/base/special/gamma';\nimport __var_3__ from '@stdlib/constants/math/float64-pinf';\nimport __var_4__ from './factorials.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar isInteger = __var_1__;\nvar gamma = __var_2__;\nvar PINF = __var_3__;\nvar FACTORIALS = __var_4__;\n\n\n// VARIABLES //\n\nvar MAX_FACTORIAL = 170; // TODO: consider extracting as a constant\n\n\n// MAIN //\n\n/**\n* Evaluates the factorial of `x`.\n*\n* @param {number} x - input value\n* @returns {number} factorial\n*\n* @example\n* var v = factorial( 3.0 );\n* // returns 6.0\n*\n* @example\n* var v = factorial( -1.5 );\n* // returns ~-3.545\n*\n* @example\n* var v = factorial( -0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = factorial( 0.5 );\n* // returns ~0.886\n*\n* @example\n* var v = factorial( -10.0 );\n* // returns NaN\n*\n* @example\n* var v = factorial( 171.0 );\n* // returns Infinity\n*\n* @example\n* var v = factorial( NaN );\n* // returns NaN\n*/\nfunction factorial( x ) {\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isInteger( x ) ) {\n\t\tif ( x < 0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= MAX_FACTORIAL ) {\n\t\t\treturn FACTORIALS[ x ];\n\t\t}\n\t\treturn PINF;\n\t}\n\treturn gamma( x + 1.0 );\n}\n\n\n// EXPORTS //\nexport default factorial;\n","import __var_0__ from './factorial.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the factorial function.\n*\n* @module @stdlib/math/base/special/factorial\n*\n* @example\n* var factorial = require( '@stdlib/math/base/special/factorial' );\n*\n* var v = factorial( 3.0 );\n* // returns 6.0\n*\n* v = factorial( -1.5 );\n* // returns ~-3.545\n*\n* v = factorial( -0.5 );\n* // returns ~1.772\n*\n* v = factorial( 0.5 );\n* // returns ~0.886\n*\n* v = factorial( -10.0 );\n* // returns NaN\n*\n* v = factorial( 171.0 );\n* // returns Infinity\n*\n* v = factorial( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar factorial = __var_0__;\n\n\n// EXPORTS //\nexport default factorial;\n"]}