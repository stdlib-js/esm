{"version":3,"sources":["@stdlib/math/base/special/floorf/lib/main.js","@stdlib/math/base/special/floorf/lib/index.js"],"names":["floorf","Math","floor","__var_0__"],"mappings":"AA6CA,IAAIA,EAASC,KAAKC,MCFdF,EAASG","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// TODO: implementation (?)\n\n/**\n* Rounds a single-precision floating-point number toward negative infinity.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = floorf( -4.2 );\n* // returns -5.0\n*\n* @example\n* var v = floorf( 9.99999 );\n* // returns 9.0\n*\n* @example\n* var v = floorf( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = floorf( NaN );\n* // returns NaN\n*/\nvar floorf = Math.floor; // eslint-disable-line stdlib/no-builtin-math\n\n\n// EXPORTS //\nexport default floorf;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a single-precision floating-point number toward negative infinity.\n*\n* @module @stdlib/math/base/special/floorf\n*\n* @example\n* var floorf = require( '@stdlib/math/base/special/floorf' );\n*\n* var v = floorf( -4.2 );\n* // returns -5.0\n*\n* v = floorf( 9.99999 );\n* // returns 9.0\n*\n* v = floorf( 0.0 );\n* // returns 0.0\n*\n* v = floorf( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar floorf = __var_0__;\n\n\n// EXPORTS //\nexport default floorf;\n"]}