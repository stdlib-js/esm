{"version":3,"sources":["@stdlib/math/base/special/dirichlet-eta/lib/eta.js","@stdlib/math/base/special/dirichlet-eta/lib/index.js"],"names":["isnan","__var_0__","powm1","__var_1__","zeta","__var_2__","LN2","__var_3__","eta","s","NaN"],"mappings":"2JAyBA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAOC,EACPC,EAAMC,EA+BV,SAASC,EAAKC,GACb,OAAKT,EAAOS,GACJC,IAEG,IAAND,EAEGH,GAEAJ,EAAO,EAAK,EAAIO,GAAML,EAAMK,GCrBlC,IAACD,EAAMP","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/powm1';\nimport __var_2__ from '@stdlib/math/base/special/riemann-zeta';\nimport __var_3__ from '@stdlib/constants/math/float64-ln-two';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar powm1 = __var_1__;\nvar zeta = __var_2__;\nvar LN2 = __var_3__;\n\n\n// MAIN //\n\n/**\n* Evaluates the Dirichlet eta function.\n*\n* @param {number} s - input value\n* @returns {number} function value\n*\n* @example\n* var v = eta( 0.0 );\n* // returns 0.5\n*\n* @example\n* var v = eta( -1.0 );\n* // returns 0.25\n*\n* @example\n* var v = eta( 1.0 ); // => ln(2)\n* // returns ~0.6931\n*\n* @example\n* var v = eta( 3.14 );\n* // returns ~0.9096\n*\n* @example\n* var v = eta( NaN );\n* // returns NaN\n*/\nfunction eta( s ) {\n\tif ( isnan( s ) ) {\n\t\treturn NaN;\n\t}\n\tif ( s === 1.0 ) {\n\t\t// Alternating harmonic series...\n\t\treturn LN2;\n\t}\n\treturn -powm1( 2.0, 1.0-s ) * zeta( s );\n}\n\n\n// EXPORTS //\nexport default eta;\n","import __var_0__ from './eta.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the Dirichlet eta function.\n*\n* @module @stdlib/math/base/special/dirichlet-eta\n*\n* @example\n* var eta = require( '@stdlib/math/base/special/dirichlet-eta' );\n*\n* var v = eta( 0.0 );\n* // returns 0.5\n*\n* v = eta( -1.0 );\n* // returns 0.25\n*\n* v = eta( 1.0 ); // => ln(2)\n* // returns ~0.6931\n*\n* v = eta( 3.14 );\n* // returns ~0.9096\n*\n* v = eta( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar eta = __var_0__;\n\n\n// EXPORTS //\nexport default eta;\n"]}