{"version":3,"sources":["@stdlib/math/base/special/lucas/lib/main.js","@stdlib/math/base/special/lucas/lib/index.js"],"names":["isnan","__var_0__","isInteger","__var_1__","MAX_LUCAS","__var_2__","LUCAS","__var_3__","lucas","n","NaN"],"mappings":"82BAyBIA,EAAQC,EACRC,EAAYC,EACZC,EAAYC,EACZC,EAAQC,EAmDZ,SAASC,EAAOC,GACf,OACCT,EAAOS,KACY,IAAnBP,EAAWO,IACXA,EAAI,GACJA,EAAIL,EAEGM,IAEDJ,EAAOG,GCpCZ,IAACD,EAAQP","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/assert/is-integer';\nimport __var_2__ from '@stdlib/constants/math/float64-max-safe-nth-lucas';\nimport __var_3__ from './lucas.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar isInteger = __var_1__;\nvar MAX_LUCAS = __var_2__;\nvar LUCAS = __var_3__;\n\n\n// MAIN //\n\n/**\n* Computes the nth Lucas number.\n*\n* @param {NonNegativeInteger} n - the Lucas number to compute\n* @returns {NonNegativeInteger} Lucas number\n*\n* @example\n* var y = lucas( 0 );\n* // returns 2\n*\n* @example\n* var y = lucas( 1 );\n* // returns 1\n*\n* @example\n* var y = lucas( 2 );\n* // returns 3\n*\n* @example\n* var y = lucas( 3 );\n* // returns 4\n*\n* @example\n* var y = lucas( 4 );\n* // returns 7\n*\n* @example\n* var y = lucas( 5 );\n* // returns 11\n*\n* @example\n* var y = lucas( 6 );\n* // returns 18\n*\n* @example\n* var y = lucas( NaN );\n* // returns NaN\n*\n* @example\n* var y = lucas( 3.14 );\n* // returns NaN\n*\n* @example\n* var y = lucas( -1.0 );\n* // returns NaN\n*/\nfunction lucas( n ) {\n\tif (\n\t\tisnan( n ) ||\n\t\tisInteger( n ) === false ||\n\t\tn < 0 ||\n\t\tn > MAX_LUCAS\n\t) {\n\t\treturn NaN;\n\t}\n\treturn LUCAS[ n ];\n}\n\n\n// EXPORTS //\nexport default lucas;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the nth Lucas number.\n*\n* @module @stdlib/math/base/special/lucas\n*\n* @example\n* var lucas = require( '@stdlib/math/base/special/lucas' );\n*\n* var y = lucas( 0 );\n* // returns 2\n*\n* y = lucas( 1 );\n* // returns 1\n*\n* y = lucas( 2 );\n* // returns 3\n*\n* y = lucas( 3 );\n* // returns 4\n*\n* y = lucas( 4 );\n* // returns 7\n*\n* y = lucas( 5 );\n* // returns 11\n*\n* y = lucas( 6 );\n* // returns 18\n*/\n\n// MODULES //\nvar lucas = __var_0__;\n\n\n// EXPORTS //\nexport default lucas;\n"]}