{"version":3,"sources":["@stdlib/math/base/special/tribonacci/lib/main.js","@stdlib/math/base/special/tribonacci/lib/index.js"],"names":["isnan","__var_0__","isInteger","__var_1__","TRIBONACCI","__var_2__","MAX_TRIBONACCI","tribonacci","n","NaN"],"mappings":"0pBAwBIA,EAAQC,EACRC,EAAYC,EACZC,EAAaC,EAKbC,EAAiB,GAmDrB,SAASC,EAAYC,GACpB,OACCR,EAAOQ,KACY,IAAnBN,EAAWM,IACXA,EAAI,GACJA,EAAIF,EAEGG,IAEDL,EAAYI,GCvCjB,IAACD,EAAaN","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/assert/is-integer';\nimport __var_2__ from './tribonacci.json';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar isInteger = __var_1__;\nvar TRIBONACCI = __var_2__;\n\n\n// VARIABLES //\n\nvar MAX_TRIBONACCI = 63;\n\n\n// MAIN //\n\n/**\n* Computes the nth Tribonacci number.\n*\n* @param {NonNegativeInteger} n - the Tribonacci number to compute\n* @returns {NonNegativeInteger} Tribonacci number\n*\n* @example\n* var y = tribonacci( 0 );\n* // returns 0\n*\n* @example\n* var y = tribonacci( 1 );\n* // returns 0\n*\n* @example\n* var y = tribonacci( 2 );\n* // returns 1\n*\n* @example\n* var y = tribonacci( 3 );\n* // returns 1\n*\n* @example\n* var y = tribonacci( 4 );\n* // returns 2\n*\n* @example\n* var y = tribonacci( 5 );\n* // returns 4\n*\n* @example\n* var y = tribonacci( 6 );\n* // returns 7\n*\n* @example\n* var y = tribonacci( NaN );\n* // returns NaN\n*\n* @example\n* var y = tribonacci( 3.14 );\n* // returns NaN\n*\n* @example\n* var y = tribonacci( -1.0 );\n* // returns NaN\n*/\nfunction tribonacci( n ) {\n\tif (\n\t\tisnan( n ) ||\n\t\tisInteger( n ) === false ||\n\t\tn < 0 ||\n\t\tn > MAX_TRIBONACCI\n\t) {\n\t\treturn NaN;\n\t}\n\treturn TRIBONACCI[ n ];\n}\n\n\n// EXPORTS //\nexport default tribonacci;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the nth Tribonacci number.\n*\n* @module @stdlib/math/base/special/tribonacci\n*\n* @example\n* var tribonacci = require( '@stdlib/math/base/special/tribonacci' );\n*\n* var y = tribonacci( 0 );\n* // returns 0\n*\n* y = tribonacci( 1 );\n* // returns 0\n*\n* y = tribonacci( 2 );\n* // returns 1\n*\n* y = tribonacci( 3 );\n* // returns 1\n*\n* y = tribonacci( 4 );\n* // returns 2\n*\n* y = tribonacci( 5 );\n* // returns 4\n*\n* y = tribonacci( 6 );\n* // returns 7\n*/\n\n// MODULES //\nvar tribonacci = __var_0__;\n\n\n// EXPORTS //\nexport default tribonacci;\n"]}