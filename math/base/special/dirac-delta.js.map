{"version":3,"sources":["@stdlib/math/base/special/dirac-delta/lib/dirac_delta.js","@stdlib/math/base/special/dirac-delta/lib/index.js"],"names":["isnan","__var_0__","PINF","__var_1__","diracDelta","x","NaN"],"mappings":"8FAuBA,IAAIA,EAAQC,EACRC,EAAOC,EAuBX,SAASC,EAAYC,GACpB,OAAKL,EAAOK,GACJC,IAEG,IAAND,EACGH,EAED,ECdL,IAACE,EAAaH","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar PINF = __var_1__;\n\n\n// MAIN //\n\n/**\n* Evaluates the Dirac delta function.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = diracDelta( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = diracDelta( 3.14 );\n* // returns 0.0\n*\n* @example\n* var v = diracDelta( NaN );\n* // returns NaN\n*/\nfunction diracDelta( x ) {\n\tif ( isnan( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\treturn PINF;\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\nexport default diracDelta;\n","import __var_0__ from './dirac_delta.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the Dirac delta function.\n*\n* @module @stdlib/math/base/special/dirac-delta\n*\n* @example\n* var diracDelta = require( '@stdlib/math/base/special/dirac-delta' );\n*\n* var v = diracDelta( 0.0 );\n* // returns Infinity\n*\n* v = diracDelta( 3.14 );\n* // returns 0.0\n*\n* v = diracDelta( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar diracDelta = __var_0__;\n\n\n// EXPORTS //\nexport default diracDelta;\n"]}