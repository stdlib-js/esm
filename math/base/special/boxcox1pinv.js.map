{"version":3,"sources":["@stdlib/math/base/special/boxcox1pinv/lib/main.js","@stdlib/math/base/special/boxcox1pinv/lib/index.js"],"names":["expm1","__var_0__","log1p","__var_1__","abs","__var_2__","isnan","__var_3__","boxcox1pinv","y","lambda","ly","NaN"],"mappings":"iHAyBA,IAAIA,EAAQC,EACRC,EAAQC,EACRC,EAAMC,EACNC,EAAQC,EA4CZ,SAASC,EAAaC,EAAGC,GACxB,IAAIC,EACJ,OAAKL,EAAOG,IAAOH,EAAOI,GAClBE,IAEQ,IAAXF,EACGV,EAAOS,GAGVL,EADLO,EAAKD,EAASD,GACG,OACTA,EAEDT,EAAOE,EAAOS,GAAOD,GC7B1B,IAACF,EAAcP","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/expm1';\nimport __var_1__ from '@stdlib/math/base/special/log1p';\nimport __var_2__ from '@stdlib/math/base/special/abs';\nimport __var_3__ from '@stdlib/math/base/assert/is-nan';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar expm1 = __var_0__;\nvar log1p = __var_1__;\nvar abs = __var_2__;\nvar isnan = __var_3__;\n\n\n// MAIN //\n\n/**\n* Computes the inverse of a one-parameter Box-Cox transformation for `1+x`.\n*\n* @param {number} y - input value\n* @param {number} lambda - power parameter\n* @returns {number} inverse of the Box-Cox transformation\n*\n* @example\n* var v = boxcox1pinv( 1.0, 2.5 );\n* // returns ~0.6505\n*\n* @example\n* var v = boxcox1pinv( 4.0, 2.5 );\n* // returns ~1.6095\n*\n* @example\n* var v = boxcox1pinv( 10.0, 2.5 );\n* // returns ~2.6812\n*\n* @example\n* var v = boxcox1pinv( 2.0, 0.0 );\n* // returns ~6.3891\n*\n* @example\n* var v = boxcox1pinv( -1.0, 2.5 );\n* // returns NaN\n*\n* @example\n* var v = boxcox1pinv( 0.0, -1.0 );\n* // returns 0.0\n*\n* @example\n* var v = boxcox1pinv( 1.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = boxcox1pinv( NaN, 3.1 );\n* // returns NaN\n*/\nfunction boxcox1pinv( y, lambda ) {\n\tvar ly;\n\tif ( isnan( y ) || isnan( lambda ) ) {\n\t\treturn NaN;\n\t}\n\tif ( lambda === 0.0 ) {\n\t\treturn expm1( y );\n\t}\n\tly = lambda * y;\n\tif ( abs( ly ) < 1.0e-154 ) {\n\t\treturn y;\n\t}\n\treturn expm1( log1p( ly ) / lambda );\n}\n\n\n// EXPORTS //\nexport default boxcox1pinv;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the inverse of a one-parameter Box-Cox transformation for `1+x`.\n*\n* @module @stdlib/math/base/special/boxcox1pinv\n*\n* @example\n* var boxcox1pinv = require( '@stdlib/math/base/special/boxcox1pinv' );\n*\n* var v = boxcox1pinv( 1.0, 2.5 );\n* // returns ~0.6505\n*\n* v = boxcox1pinv( 4.0, 2.5 );\n* // returns ~1.6095\n*\n* v = boxcox1pinv( 10.0, 2.5 );\n* // returns ~2.6812\n*\n* v = boxcox1pinv( 2.0, 0.0 );\n* // returns ~6.3891\n*\n* v = boxcox1pinv( -1.0, 2.5 );\n* // returns NaN\n*\n* v = boxcox1pinv( 0.0, -1.0 );\n* // returns 0.0\n*\n* v = boxcox1pinv( 1.0, NaN );\n* // returns NaN\n*\n* v = boxcox1pinv( NaN, 3.1 );\n* // returns NaN\n*/\n\n// MODULES //\nvar boxcox1pinv = __var_0__;\n\n\n// EXPORTS //\nexport default boxcox1pinv;\n"]}