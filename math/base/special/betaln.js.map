{"version":3,"sources":["@stdlib/math/base/special/betaln/lib/dceval.js","@stdlib/math/base/special/betaln/lib/gamma_correction.js","@stdlib/math/base/special/betaln/lib/betaln.js","@stdlib/math/base/special/betaln/lib/index.js"],"names":["ALGMCS","LEN","length","dcseval","x","twox","b2","b1","b0","i","NaN","pow","__var_0__","dceval","__var_1__","XBIG","XMAX","gammaCorrection","gammaln","log1p","gamma","__var_2__","max","__var_3__","min","__var_4__","ln","__var_5__","LN_SQRT_TWO_PI","__var_6__","NINF","__var_7__","PINF","__var_8__","correction","__var_9__","betaln","a","b","corr","p","q"],"mappings":"oWA8BA,IAAIA,EAAS,CACZ,sBACC,sBACD,sBACC,sBACD,uBACC,qBACD,uBACC,sBACD,sBACC,qBACD,sBACC,qBACD,qBACC,qBACD,oBAEGC,EAAMD,EAAOE,OAiBjB,SAASC,EAASC,GACjB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKL,GAAK,KAAOA,EAAI,IACpB,OAAOM,IAKR,IAHAH,EAAK,EACLC,EAAK,EACLH,EAAO,EAAMD,EACPK,EAAI,EAAGA,EAAIR,EAAKQ,IACrBH,EAAKC,EAELC,EAAMH,GADNE,EAAKC,GACYF,EAAKN,EAAQS,GAE/B,MAAmB,IAAVD,EAAGF,GCpDb,IAAIK,EAAMC,EACNC,EAASC,EAKTC,EAAO,kBACPC,EAAO,qBAgBX,SAASC,EAAiBb,GACzB,OAAKA,EAAI,GACDM,IAGHN,GAAKY,EACF,EAEHZ,EAAIW,EACDF,EAAS,EAAIF,EAAK,GAAKP,EAAG,GAAS,GAAQA,EAE5C,GAAW,GAAJA,GC1Bf,IAAIc,EAAUN,EACVO,EAAQL,EACRM,EAAQC,EACRC,EAAMC,EACNC,EAAMC,EACNC,EAAKC,EACLC,EAAiBC,EACjBC,EAAOC,EACPC,EAAOC,EACPC,EAAaC,EAoCjB,SAASC,EAAQC,EAAGC,GACnB,IAAIC,EACAC,EACAC,EAKJ,OAHAD,EAAIhB,EAAKa,EAAGC,GACZG,EAAInB,EAAKe,EAAGC,GAEPE,EAAI,EACD9B,IAEG,IAAN8B,EACGR,EAEHS,IAAMT,EACHF,EAGHU,GAAK,IACTD,EAAOL,EAAYM,GAAMN,EAAYO,GAAMP,EAAYM,EAAEC,IAC/C,GAAIf,EAAIe,GAAQb,EAAiBW,GAAUC,EAAE,IAAOd,EAAIc,GAAGA,EAAEC,IAAWA,EAAEtB,GAAQqB,GAAGA,EAAEC,KAG7FA,GAAK,IACTF,EAAOL,EAAYO,GAAMP,EAAYM,EAAEC,GAChCvB,EAASsB,GAAMD,EAAOC,EAAKA,EAAEd,EAAIc,EAAEC,IAAUA,EAAE,IAAKtB,GAAQqB,GAAGA,EAAEC,KAGlEf,EAAIN,EAAOoB,IAAQpB,EAAOqB,GAAMrB,EAAOoB,EAAEC,KC9D9C,IAACL,EAASxB","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar ALGMCS = [\n\t+0.1276642195630062933333333333333e-30,\n\t-0.3401102254316748799999999999999e-29,\n\t+0.1025680058010470912000000000000e-27,\n\t-0.3547598158101070547199999999999e-26,\n\t+0.1429227355942498147573333333333e-24,\n\t-0.6831888753985766870111999999999e-23,\n\t+0.3962837061046434803679306666666e-21,\n\t-0.2868042435334643284144622399999e-19,\n\t+0.2683181998482698748957538846666e-17,\n\t-0.3399615005417721944303330599666e-15,\n\t+0.6221098041892605227126015543416e-13,\n\t-0.1809129475572494194263306266719e-10,\n\t+0.9810825646924729426157171547487e-8,\n\t-0.1384948176067563840732986059135e-4,\n\t+0.1666389480451863247205729650822e+0\n];\nvar LEN = ALGMCS.length;\n\n\n// MAIN //\n\n/**\n* Evaluate the n-term Chebyshev series at `x`.\n*\n* ## References\n*\n* -   Broucke, Roger. 1973. \"Algorithm: Ten Subroutines for the Manipulation of Chebyshev Series.\" _Communications of the ACM_ 16 (4). New York, NY, USA: ACM: 254â€“56. doi:[10.1145/362003.362037](https://doi.org/10.1145/362003.362037).\n* -   Fox, Leslie, and Ian Bax Parker. 1968. _Chebyshev polynomials in numerical analysis_. Oxford Mathematical Handbooks. London, United Kingdom: Oxford University Press. <https://books.google.com/books?id=F8NzsEtJCD0C>.\n*\n* @private\n* @param {number} x - value at which the series is to be evaluated\n* @returns {number} series value\n*/\nfunction dcseval( x ) {\n\tvar twox;\n\tvar b2;\n\tvar b1;\n\tvar b0;\n\tvar i;\n\n\tif ( x < -1.1 || x > 1.1 ) {\n\t\treturn NaN;\n\t}\n\tb1 = 0.0;\n\tb0 = 0.0;\n\ttwox = 2.0 * x;\n\tfor ( i = 0; i < LEN; i++ ) {\n\t\tb2 = b1;\n\t\tb1 = b0;\n\t\tb0 = (twox*b1) - b2 + ALGMCS[ i ];\n\t}\n\treturn ( b0-b2 ) * 0.5;\n}\n\n\n// EXPORTS //\nexport default dcseval;\n","import __var_0__ from '@stdlib/math/base/special/pow';\nimport __var_1__ from './dceval.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/fn/d9lgmc.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\nvar pow = __var_0__;\nvar dceval = __var_1__;\n\n\n// VARIABLES //\n\nvar XBIG = 94906265.62425156;\nvar XMAX = 3.745194030963158e306;\n\n\n// MAIN //\n\n/**\n* Compute the log gamma correction factor for `x >= 10`.\n*\n* ```tex\n* \\log(\\gamma(x)) = \\log(\\sqrt{2*\\Pi}) + (x-0.5) \\cdot \\log(x) - x \\operatorname{R9LGMC}(x).\n* ```\n*\n* @private\n* @param {number} x - input value\n* @returns {number} correction value\n*/\nfunction gammaCorrection( x ) {\n\tif ( x < 10.0 ) {\n\t\treturn NaN;\n\t}\n\t// Check for underflow...\n\tif ( x >= XMAX ) {\n\t\treturn 0.0;\n\t}\n\tif ( x < XBIG ) {\n\t\treturn dceval( (2.0*pow( 10.0/x, 2.0 )) - 1.0 ) / x;\n\t}\n\treturn 1.0 / (x * 12.0);\n}\n\n\n// EXPORTS //\nexport default gammaCorrection;\n","import __var_0__ from '@stdlib/math/base/special/gammaln';\nimport __var_1__ from '@stdlib/math/base/special/log1p';\nimport __var_2__ from '@stdlib/math/base/special/gamma';\nimport __var_3__ from '@stdlib/math/base/special/max';\nimport __var_4__ from '@stdlib/math/base/special/min';\nimport __var_5__ from '@stdlib/math/base/special/ln';\nimport __var_6__ from '@stdlib/constants/math/float64-ln-sqrt-two-pi';\nimport __var_7__ from '@stdlib/constants/math/float64-ninf';\nimport __var_8__ from '@stdlib/constants/math/float64-pinf';\nimport __var_9__ from './gamma_correction.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/albeta.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\nvar gammaln = __var_0__;\nvar log1p = __var_1__;\nvar gamma = __var_2__;\nvar max = __var_3__;\nvar min = __var_4__;\nvar ln = __var_5__;\nvar LN_SQRT_TWO_PI = __var_6__;\nvar NINF = __var_7__;\nvar PINF = __var_8__;\nvar correction = __var_9__;\n\n\n// MAIN //\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @param {NonNegativeNumber} a - first input value\n* @param {NonNegativeNumber} b - second input value\n* @returns {number} natural logarithm of beta function\n*\n* @example\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* @example\n* var v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* @example\n* var v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\nfunction betaln( a, b ) {\n\tvar corr;\n\tvar p;\n\tvar q;\n\n\tp = min( a, b );\n\tq = max( a, b );\n\n\tif ( p < 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( p === 0.0 ) {\n\t\treturn PINF;\n\t}\n\tif ( q === PINF ) {\n\t\treturn NINF;\n\t}\n\t// Case: p and q are big\n\tif ( p >= 10.0 ) {\n\t\tcorr = correction( p ) + correction( q ) - correction( p+q );\n\t\treturn ( -0.5*ln( q ) ) + LN_SQRT_TWO_PI + corr + ( (p-0.5) * ln( p/(p+q) ) ) + ( q*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p is small, but q is big\n\tif ( q >= 10.0 ) {\n\t\tcorr = correction( q ) - correction( p+q );\n\t\treturn gammaln( p ) + corr + p - (p*ln( p+q )) + ( (q-0.5)*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p and q are small\n\treturn ln( gamma( p ) * ( gamma( q ) / gamma( p+q ) ) );\n}\n\n\n// EXPORTS //\nexport default betaln;\n","import __var_0__ from './betaln.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @module @stdlib/math/base/special/betaln\n*\n* @example\n* var betaln = require( '@stdlib/math/base/special/betaln' );\n*\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\n\n// MODULES //\nvar betaln = __var_0__;\n\n\n// EXPORTS //\nexport default betaln;\n"]}