{"version":3,"sources":["@stdlib/math/base/special/round2/lib/round2.js","@stdlib/math/base/special/round2/lib/index.js"],"names":["isnan","__var_0__","isInfinite","__var_1__","pow","__var_2__","floor","__var_3__","ceil","__var_4__","log2","__var_5__","MAX_EXP","__var_6__","MIN_EXP_SUBNORMAL","__var_7__","PINF","__var_8__","HUGE","HALF_HUGE","round2","x","sign","p1","p2","y1","y2","p"],"mappings":"oYA8BA,IAAIA,EAAQC,EACRC,EAAaC,EACbC,EAAMC,EACNC,EAAQC,EACRC,EAAOC,EACPC,EAAOC,EACPC,EAAUC,EACVC,EAAoBC,EACpBC,EAAOC,EAMPC,EAAOd,EAAK,EAAKQ,GACjBO,EAAYD,EAAO,EAuBvB,SAASE,EAAQC,GAChB,IAAIC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACJ,OACC3B,EAAOqB,IACPnB,EAAYmB,IACN,IAANA,EAEOA,GAEHA,EAAI,GACRA,GAAKA,EACLC,GAAQ,GAERA,EAAO,GAGRK,EAAIjB,EAAMW,MAGCP,EACHO,GAGRE,EAAKjB,EAAOqB,GACZH,EAAKhB,EAAMmB,GAGNJ,IAAOX,EACNS,EAAIH,GAAQC,EACTG,EAAON,EAERM,EAAOJ,GAGfO,EAAKrB,EAAK,EAAKmB,MACfG,EAAKtB,EAAK,EAAKoB,IAGDC,GAAO,EACNJ,EACPC,EAAOG,EAERH,EAAOI,IC5EZ,IAACN,EAASnB","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/assert/is-infinite';\nimport __var_2__ from '@stdlib/math/base/special/pow';\nimport __var_3__ from '@stdlib/math/base/special/floor';\nimport __var_4__ from '@stdlib/math/base/special/ceil';\nimport __var_5__ from '@stdlib/math/base/special/log2';\nimport __var_6__ from '@stdlib/constants/math/float64-max-base2-exponent';\nimport __var_7__ from '@stdlib/constants/math/float64-min-base2-exponent-subnormal';\nimport __var_8__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar isInfinite = __var_1__;\nvar pow = __var_2__;\nvar floor = __var_3__;\nvar ceil = __var_4__;\nvar log2 = __var_5__;\nvar MAX_EXP = __var_6__;\nvar MIN_EXP_SUBNORMAL = __var_7__;\nvar PINF = __var_8__;\n\n\n// VARIABLES //\n\n// 2^1023:\nvar HUGE = pow( 2.0, MAX_EXP );\nvar HALF_HUGE = HUGE / 2.0;\n\n\n// MAIN //\n\n/**\n* Rounds a numeric value to the nearest power of two on a linear scale.\n*\n* @param {number} x - input value\n* @returns {number} rounded value\n*\n* @example\n* var v = round2( 3.141592653589793 );\n* // returns 4.0\n*\n* @example\n* var v = round2( 13.0 );\n* // returns 16.0\n*\n* @example\n* var v = round2( -0.314 );\n* // returns -0.25\n*/\nfunction round2( x ) {\n\tvar sign;\n\tvar half;\n\tvar p1;\n\tvar p2;\n\tvar y1;\n\tvar y2;\n\tvar p;\n\tif (\n\t\tisnan( x ) ||\n\t\tisInfinite( x ) ||\n\t\tx === 0.0\n\t) {\n\t\treturn x;\n\t}\n\tif ( x < 0 ) {\n\t\tx = -x;\n\t\tsign = -1.0;\n\t} else {\n\t\tsign = 1.0;\n\t}\n\t// Solve the equation `2^p = x` for `p`:\n\tp = log2( x );\n\n\t// If provided the smallest subnormal, no rounding possible:\n\tif ( p === MIN_EXP_SUBNORMAL ) {\n\t\treturn x;\n\t}\n\t// Find the previous and next integer powers:\n\tp1 = floor( p );\n\tp2 = ceil( p );\n\n\t// Handle overflow:\n\tif ( p1 === MAX_EXP ) {\n\t\tif ( x - HUGE >= HALF_HUGE ) {\n\t\t\treturn sign * PINF; // sign-preserving\n\t\t}\n\t\treturn sign * HUGE;\n\t}\n\t// Compute previous and next powers of two:\n\ty1 = pow( 2.0, p1 );\n\ty2 = pow( 2.0, p2 );\n\n\t// Find the closest power of two:\n\thalf = ( y2 - y1 ) / 2.0;\n\tif ( y1+half > x ) {\n\t\treturn sign * y1;\n\t}\n\treturn sign * y2;\n}\n\n\n// EXPORTS //\nexport default round2;\n","import __var_0__ from './round2.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a numeric value to the nearest power of two on a linear scale.\n*\n* @module @stdlib/math/base/special/round2\n*\n* @example\n* var round2 = require( '@stdlib/math/base/special/round2' );\n*\n* var v = round2( 3.141592653589793 );\n* // returns 4.0\n*\n* v = round2( 13.0 );\n* // returns 16.0\n*\n* v = round2( -0.314 );\n* // returns -0.25\n*/\n\n// MODULES //\nvar round2 = __var_0__;\n\n\n// EXPORTS //\nexport default round2;\n"]}