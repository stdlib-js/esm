{"version":3,"sources":["@stdlib/math/base/special/betaincinv/lib/betaincinv.js","@stdlib/math/base/special/betaincinv/lib/index.js"],"names":["isnan","__var_0__","kernelBetaincinv","__var_1__","betaincinv","p","a","b","upper","NaN"],"mappings":"2EAuBA,IAAIA,EAAQC,EACRC,EAAmBC,EAkCvB,SAASC,EAAYC,EAAGC,EAAGC,EAAGC,GAC7B,OACCR,EAAOK,IACPL,EAAOM,IACPN,EAAOO,IAIHD,GAAK,GAAOC,GAAK,GAGjBF,EAAI,GAAOA,EAAI,EALZI,IAQHD,EACGN,EAAkBI,EAAGC,EAAG,EAAMF,EAAGA,GAAK,GAEvCH,EAAkBI,EAAGC,EAAGF,EAAG,EAAMA,GAAK,GC7B3C,IAACD,EAAaH","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/special/kernel-betaincinv';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar kernelBetaincinv = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns a value `p` such that `p = betainc(a, b, x)`.\n*\n* @param {Probability} p - function parameter\n* @param {PositiveNumber} a - function parameter\n* @param {PositiveNumber} b - function parameter\n* @param {boolean} [upper=false] - boolean indicating if the function should return the inverse of the upper tail of the incomplete beta function\n* @returns {number} function value\n*\n* @example\n* var y = betaincinv( 0.2, 3.0, 3.0 );\n* // returns ~0.327\n*\n* @example\n* var y = betaincinv( 0.4, 3.0, 3.0 );\n* // returns ~0.446\n*\n* @example\n* var y = betaincinv( 0.4, 3.0, 3.0, true );\n* // returns ~0.554\n*\n* @example\n* var y = betaincinv( 0.4, 1.0, 6.0 );\n* // returns ~0.082\n*\n* @example\n* var y = betaincinv( 0.8, 1.0, 6.0 );\n* // returns ~0.235\n*/\nfunction betaincinv( p, a, b, upper ) {\n\tif (\n\t\tisnan( p ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( a <= 0.0 || b <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( p < 0.0 || p > 1.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( upper ) {\n\t\treturn kernelBetaincinv( a, b, 1.0 - p, p )[ 0 ];\n\t}\n\treturn kernelBetaincinv( a, b, p, 1.0 - p )[ 0 ];\n}\n\n\n// EXPORTS //\nexport default betaincinv;\n","import __var_0__ from './betaincinv.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the inverse of the incomplete beta function.\n*\n* @module @stdlib/math/base/special/betaincinv\n*\n* @example\n* var betaincinv = require( '@stdlib/math/base/special/betaincinv' );\n*\n* var y = betaincinv( 0.2, 3.0, 3.0 );\n* // returns ~0.327\n*\n* y = betaincinv( 0.4, 3.0, 3.0 );\n* // returns ~0.446\n*\n* y = betaincinv( 0.4, 3.0, 3.0, true );\n* // returns ~0.554\n*\n* y = betaincinv( 0.4, 1.0, 6.0 );\n* // returns ~0.082\n*\n* y = betaincinv( 0.8, 1.0, 6.0 );\n* // returns ~0.235\n*/\n\n// MODULES //\nvar betaincinv = __var_0__;\n\n\n// EXPORTS //\nexport default betaincinv;\n"]}