{"version":3,"sources":["@stdlib/math/base/special/expm1rel/lib/main.js","@stdlib/math/base/special/expm1rel/lib/index.js"],"names":["expm1","__var_0__","abs","__var_1__","EPS","__var_2__","PINF","__var_3__","OVERFLOW_THRESHOLD","expm1rel","x"],"mappings":"mKAyBA,IAAIA,EAAQC,EACRC,EAAMC,EACNC,EAAMC,EACNC,EAAOC,EAKPC,EAAqB,iBA2BzB,SAASC,EAAUC,GAClB,OAAKR,EAAKQ,IAAON,EACT,EAEHM,GAAKF,EACFF,EAEDN,EAAOU,GAAMA,ECxBlB,IAACD,EAAWR","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/expm1';\nimport __var_1__ from '@stdlib/math/base/special/abs';\nimport __var_2__ from '@stdlib/constants/math/float64-eps';\nimport __var_3__ from '@stdlib/constants/math/float64-pinf';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar expm1 = __var_0__;\nvar abs = __var_1__;\nvar EPS = __var_2__;\nvar PINF = __var_3__;\n\n\n// VARIABLES //\n\nvar OVERFLOW_THRESHOLD = 7.09782712893383973096e+02; // 0x40862E42 0xFEFA39EF\n\n\n// MAIN //\n\n/**\n* Computes the relative error exponential.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = expm1rel( 0.0 );\n* // returns 1.0\n*\n* @example\n* var v = expm1rel( 1.0 );\n* // returns ~1.718\n*\n* @example\n* var v = expm1rel( -1.0 );\n* // returns ~0.632\n*\n* @example\n* var v = expm1rel( NaN );\n* // returns NaN\n*/\nfunction expm1rel( x ) {\n\tif ( abs( x ) <= EPS ) {\n\t\treturn 1.0; // L'Hopital's Rule\n\t}\n\tif ( x >= OVERFLOW_THRESHOLD ) {\n\t\treturn PINF; // L'Hopital's Rule\n\t}\n\treturn expm1( x ) / x;\n}\n\n\n// EXPORTS //\nexport default expm1rel;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Relative error exponential function.\n*\n* @module @stdlib/math/base/special/expm1rel\n*\n* @example\n* var expm1rel = require( '@stdlib/math/base/special/expm1rel' );\n*\n* var v = expm1rel( 0.0 );\n* // returns 1.0\n*\n* v = expm1rel( 1.0 );\n* // returns ~1.718\n*\n* v = expm1rel( -1.0 );\n* // returns ~0.632\n*\n* v = expm1rel( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar expm1rel = __var_0__;\n\n\n// EXPORTS //\nexport default expm1rel;\n"]}