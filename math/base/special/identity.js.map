{"version":3,"sources":["@stdlib/math/base/special/identity/lib/main.js","@stdlib/math/base/special/identity/lib/index.js"],"names":["identity","x","__var_0__"],"mappings":"AA+CA,SAASA,EAAUC,GAClB,OAAOA,ECFL,IAACD,EAAWE","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluates the identity function for a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} input value\n*\n* @example\n* var v = identity( -1.0 );\n* // returns -1.0\n*\n* @example\n* var v = identity( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = identity( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = identity( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = identity( NaN );\n* // returns NaN\n*/\nfunction identity( x ) {\n\treturn x;\n}\n\n\n// EXPORTS //\nexport default identity;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the identity function for a double-precision floating-point number.\n*\n* @module @stdlib/math/base/special/identity\n*\n* @example\n* var identity = require( '@stdlib/math/base/special/identity' );\n*\n* var v = identity( -1.0 );\n* // returns -1.0\n*\n* v = identity( 2.0 );\n* // returns 2.0\n*\n* v = identity( 0.0 );\n* // returns 0.0\n*\n* v = identity( -0.0 );\n* // returns -0.0\n*\n* v = identity( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar identity = __var_0__;\n\n\n// EXPORTS //\nexport default identity;\n"]}