{"version":3,"sources":["@stdlib/math/base/special/clamp/lib/main.js","@stdlib/math/base/special/clamp/lib/index.js"],"names":["isnan","__var_0__","isNegativeZero","__var_1__","clamp","v","min","max","NaN"],"mappings":"oFAuBA,IAAIA,EAAQC,EACRC,EAAiBC,EAsCrB,SAASC,EAAOC,EAAGC,EAAKC,GACvB,OACCP,EAAOK,IACPL,EAAOM,IACPN,EAAOO,GAEAC,IAGHH,EAAIC,EACDA,EAEHD,EAAIE,EACDA,EAGK,IAARD,GAAeJ,EAAgBG,GAC5BC,EAEG,IAAND,GAAaH,EAAgBK,GAC1BA,EAGDF,EC9BL,IAACD,EAAQH","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nan';\nimport __var_1__ from '@stdlib/math/base/assert/is-negative-zero';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = __var_0__;\nvar isNegativeZero = __var_1__;\n\n\n// MAIN //\n\n/**\n* Restricts a double-precision floating-point number to a specified range.\n*\n* @param {number} v - input value\n* @param {number} min - minimum value\n* @param {number} max - maximum value\n* @returns {number} value restricted to a specified range\n*\n* @example\n* var v = clamp( 3.14, 0.0, 5.0 );\n* // returns 3.14\n*\n* v = clamp( -3.14, 0.0, 5.0 );\n* // returns 0.0\n*\n* v = clamp( 10.0, 0.0, 5.0 );\n* // returns 5.0\n*\n* v = clamp( -0.0, 0.0, 5.0 );\n* // returns 0.0\n*\n* v = clamp( 0.0, -0.0, 5.0 );\n* // returns 0.0\n*\n* v = clamp( NaN, 0.0, 5.0 );\n* // returns NaN\n*\n* v = clamp( 0.0, NaN, 5.0 );\n* // returns NaN\n*\n* v = clamp( 3.14, 0.0, NaN );\n* // returns NaN\n*/\nfunction clamp( v, min, max ) {\n\tif (\n\t\tisnan( v ) ||\n\t\tisnan( min ) ||\n\t\tisnan( max )\n\t) {\n\t\treturn NaN;\n\t}\n\t// Simple cases...\n\tif ( v < min ) {\n\t\treturn min;\n\t}\n\tif ( v > max ) {\n\t\treturn max;\n\t}\n\t// Special cases for handling +-0.0...\n\tif ( min === 0.0 && isNegativeZero( v ) ) {\n\t\treturn min; // +-0.0\n\t}\n\tif ( v === 0.0 && isNegativeZero( max ) ) {\n\t\treturn max; // -0.0\n\t}\n\t// Case: min <= v <= max\n\treturn v;\n}\n\n\n// EXPORTS //\nexport default clamp;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Restrict a double-precision floating-point number to a specified range.\n*\n* @module @stdlib/math/base/special/clamp\n*\n* @example\n* var clamp = require( '@stdlib/math/base/special/clamp' );\n*\n* var v = clamp( 3.14, 0.0, 5.0 );\n* // returns 3.14\n*\n* v = clamp( -3.14, 0.0, 5.0 );\n* // returns 0.0\n*\n* v = clamp( 10.0, 0.0, 5.0 );\n* // returns 5.0\n*\n* v = clamp( -0.0, 0.0, 5.0 );\n* // returns 0.0\n*\n* v = clamp( 0.0, -0.0, 5.0 );\n* // returns 0.0\n*\n* v = clamp( NaN, 0.0, 5.0 );\n* // returns NaN\n*\n* v = clamp( 0.0, NaN, 5.0 );\n* // returns NaN\n*\n* v = clamp( 3.14, 0.0, NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar clamp = __var_0__;\n\n\n// EXPORTS //\nexport default clamp;\n"]}