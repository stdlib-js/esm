{"version":3,"sources":["@stdlib/math/base/special/bernoulli/lib/bernoulli.js","@stdlib/math/base/special/bernoulli/lib/index.js"],"names":["isNonNegativeInteger","__var_0__","isnan","__var_1__","isOdd","__var_2__","NINF","__var_3__","PINF","__var_4__","BERNOULLI","__var_5__","MAX_BERNOULLI","bernoulli","n","NaN"],"mappings":"s6FA2BIA,EAAuBC,EACvBC,EAAQC,EACRC,EAAQC,EACRC,EAAOC,EACPC,EAAOC,EACPC,EAAYC,EAKZC,EAAgB,IAmDpB,SAASC,EAAWC,GACnB,OAAKZ,EAAOY,KAAQd,EAAsBc,GAClCC,IAEHX,EAAOU,GACJ,EAEHA,EAAIF,EACEE,EAAE,EAAG,EAAMN,EAAOF,EAEtBI,EAAWI,EAAE,GC9ClB,IAACD,EAAYZ","sourcesContent":["import __var_0__ from '@stdlib/math/base/assert/is-nonnegative-integer';\nimport __var_1__ from '@stdlib/math/base/assert/is-nan';\nimport __var_2__ from '@stdlib/math/base/assert/is-odd';\nimport __var_3__ from '@stdlib/constants/math/float64-ninf';\nimport __var_4__ from '@stdlib/constants/math/float64-pinf';\nimport __var_5__ from './bernoulli.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isNonNegativeInteger = __var_0__;\nvar isnan = __var_1__;\nvar isOdd = __var_2__;\nvar NINF = __var_3__;\nvar PINF = __var_4__;\nvar BERNOULLI = __var_5__;\n\n\n// VARIABLES //\n\nvar MAX_BERNOULLI = 258|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes the nth Bernoulli number.\n*\n* @param {NonNegativeInteger} n - the Bernoulli number to compute\n* @returns {number} Bernoulli number\n*\n* @example\n* var y = bernoulli( 0 );\n* // returns 1.0\n*\n* @example\n* var y = bernoulli( 1 );\n* // returns 0.0\n*\n* @example\n* var y = bernoulli( 2 );\n* // returns ~0.167\n*\n* @example\n* var y = bernoulli( 3 );\n* // returns 0.0\n*\n* @example\n* var y = bernoulli( 4 );\n* // returns ~-0.033\n*\n* @example\n* var y = bernoulli( 5 );\n* // returns 0.0\n*\n* @example\n* var y = bernoulli( 20 );\n* // returns ~-529.124\n*\n* @example\n* var y = bernoulli( 260 );\n* // returns -Infinity\n*\n* @example\n* var y = bernoulli( 262 );\n* // returns Infinity\n*\n* @example\n* var y = bernoulli( NaN );\n* // returns NaN\n*/\nfunction bernoulli( n ) {\n\tif ( isnan( n ) || !isNonNegativeInteger( n ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isOdd( n ) ) {\n\t\treturn 0.0;\n\t}\n\tif ( n > MAX_BERNOULLI ) {\n\t\treturn ( (n/2)&1 ) ? PINF : NINF;\n\t}\n\treturn BERNOULLI[ n/2 ];\n}\n\n\n// EXPORTS //\nexport default bernoulli;\n","import __var_0__ from './bernoulli.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the nth Bernoulli number.\n*\n* @module @stdlib/math/base/special/bernoulli\n*\n* @example\n* var bernoulli = require( '@stdlib/math/base/special/bernoulli' );\n*\n* var y = bernoulli( 0 );\n* // returns 1.0\n*\n* y = bernoulli( 1 );\n* // returns 0.0\n*\n* y = bernoulli( 2 );\n* // returns ~0.166\n*\n* y = bernoulli( 3 );\n* // returns 0.0\n*\n* y = bernoulli( 4 );\n* // returns ~-0.033\n*\n* y = bernoulli( 5 );\n* // returns 0.0\n*\n* y = bernoulli( 20 );\n* // returns ~-529.124\n*/\n\n// MODULES //\nvar bernoulli = __var_0__;\n\n\n// EXPORTS //\nexport default bernoulli;\n"]}