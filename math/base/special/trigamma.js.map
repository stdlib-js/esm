{"version":3,"sources":["@stdlib/math/base/special/trigamma/lib/rational_p12q12.js","@stdlib/math/base/special/trigamma/lib/rational_p24q24.js","@stdlib/math/base/special/trigamma/lib/rational_p48q48.js","@stdlib/math/base/special/trigamma/lib/rational_p816q816.js","@stdlib/math/base/special/trigamma/lib/rational_p16infq16inf.js","@stdlib/math/base/special/trigamma/lib/trigamma.js","@stdlib/math/base/special/trigamma/lib/index.js"],"names":["evalrational","x","s1","s2","floor","__var_0__","sinpi","__var_1__","PI_SQUARED","__var_2__","rateval12","__var_3__","rateval24","__var_4__","rateval48","__var_5__","rateval816","__var_6__","rateval16INF","__var_7__","YOFFSET24","trigamma","result","s","NaN"],"mappings":"mHAuCA,SAASA,EAAcC,GACtB,IACIC,EACAC,EACJ,OAAW,IAANF,GACI,oBAEJA,EAAI,GACFA,EAEDA,IAEK,GACVC,EAA4BD,GAA2BA,GAA0BA,GAA2BA,GAA4BA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,kBAAsBA,GAAK,mBAAuBA,GAAK,oBAA4B,oBAAJA,OAAhK,mBAA3B,mBAA1B,kBAA3B,mBAA5B,kBACNE,EAAK,EAAOF,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,iBAAqBA,GAAK,mBAAuBA,GAAK,qBAA6B,sBAAJA,aAG9PC,EAAK,qBADLD,EAAI,EAAMA,IACwB,oBAAwBA,GAAK,mBAAuBA,GAAK,kBAAsBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAA4BA,GAA2BA,GAA0BA,IAAgC,kBAALA,EAArB,mBAA1B,kBAA3B,mBAA5B,wBAC7KE,EAAK,sBAA0BF,GAAK,qBAAyBA,GAAK,mBAAuBA,GAAK,iBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAyB,EAAJA,YAE3QC,EAAKC,GCpBb,SAASH,EAAcC,GACtB,IACIC,EACAC,EACJ,OAAW,IAANF,GACI,qBAEJA,EAAI,GACFA,EAEDA,IAEK,GACVC,EAA4BD,GAA4BA,GAA0BA,GAA4BA,GAA4BA,GAA2BA,GAA6BA,GAAK,kBAAsBA,GAAK,kBAAsBA,GAAK,mBAAuBA,GAAK,qBAA6B,EAAJA,MAAvI,oBAA3B,mBAA5B,oBAA5B,oBAA1B,kBAA5B,oBAA5B,mBACNE,EAAK,EAAOF,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,mBAAuBA,GAAK,oBAAwBA,GAAK,qBAAyBA,GAAK,uBAA+B,sBAALA,cAGjSC,EAAK,GADLD,EAAI,EAAMA,IACO,qBAAyBA,GAAK,mBAAuBA,GAAK,kBAAsBA,GAAK,kBAAsBA,GAA6BA,GAA2BA,GAA4BA,GAA4BA,GAA0BA,IAAiC,mBAALA,EAAtB,oBAA1B,kBAA5B,oBAA5B,oBAA3B,mBAA7B,wBAClIE,EAAgCF,GAAK,sBAA0BA,GAAK,qBAAyBA,GAAK,oBAAwBA,GAAK,mBAAuBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAyB,EAAJA,YAA/S,uBAEAC,EAAKC,GCpBb,SAASH,EAAcC,GACtB,IACIC,EACAC,EACJ,OAAW,IAANF,EACG,wBAEHA,EAAI,GACFA,EAEDA,IAEK,GACVC,EAAK,sBAA0BD,GAAK,kBAAsBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,iBAAoBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAA0B,mBAAJA,WAC5QE,EAAK,EAAOF,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAA0B,sBAAJA,aAG5PC,EAAK,oBADLD,EAAI,EAAMA,IACsB,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,iBAAoBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,kBAA0B,sBAAJA,WACxQE,EAAK,sBAA0BF,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAA0B,EAAJA,YAEzQC,EAAKC,GCpBb,SAASH,EAAcC,GACtB,IACIC,EACAC,EACJ,OAAW,IAANF,GACI,wBAEJA,EAAI,GACFA,EAEDA,IAEK,GACVC,EAA+BD,GAAK,GAAOA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,iBAAoBA,GAAK,kBAAqBA,GAAK,kBAAyB,kBAAJA,UAA5N,sBACNE,EAAK,EAAOF,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,iBAAoBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAyB,iBAALA,YAG5NC,EAAK,mBADLD,EAAI,EAAMA,IACqB,kBAAqBA,GAAK,kBAAqBA,GAAK,iBAAoBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,IAAY,sBAALA,UAC7NE,EAA2BF,GAAK,iBAAoBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,mBAAsBA,GAAK,iBAAoBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,kBAAyB,EAAJA,UAArO,kBAEAC,EAAKC,GCpBb,SAASH,EAAcC,GACtB,IACIC,EACAC,EACJ,OAAW,IAANF,EACG,IAEHA,EAAI,GACFA,EAEDA,IAEK,GACVC,EAAK,EAAOD,GAAK,GAAOA,GAAK,mBAAuBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,iBAAoBA,GAAK,mBAAsBA,GAAK,kBAAyB,EAAJA,WAC3OE,EAAK,EAAOF,GAAK,kBAAsBA,GAAK,mBAAsBA,GAAK,kBAAsBA,GAAK,kBAAqBA,GAA2BA,GAAK,mBAAsBA,GAA0BA,GAAK,mBAAsBA,GAAgC,kBAAJA,EAAtB,qBAArD,mBAAtD,yBAG7HC,EAAK,GADLD,EAAI,EAAMA,IACO,kBAAqBA,GAAK,mBAAsBA,GAAK,iBAAoBA,GAAK,kBAAqBA,GAAK,kBAAqBA,GAAK,mBAAsBA,GAAK,kBAAqBA,GAAK,mBAAuBA,GAAK,GAAW,EAAJA,WAC3OE,EAAK,kBAAqBF,GAA4BA,GAAK,mBAAsBA,GAA0BA,GAAK,mBAAsBA,GAA2BA,GAAK,kBAAqBA,GAAK,kBAAsBA,GAAK,mBAAsBA,GAAK,kBAA0B,EAAJA,MAAhI,oBAArD,mBAAvD,qBAE1BC,EAAKC,GCjBb,IAAIC,EAAQC,EACRC,EAAQC,EACRC,EAAaC,EACbC,EAAYC,EACZC,EAAYC,EACZC,EAAYC,EACZC,EAAaC,EACbC,EAAeC,EAKfC,EAAY,mBA+BhB,SAASC,EAAUpB,GAClB,IAAIqB,EACAC,EAOJ,OAHAD,EAAS,EAGJrB,GAAK,EACJG,EAAOH,KAAQA,EACZuB,KAERD,EAAIjB,EAAOL,IAEHoB,EADJ,EAAMpB,GACgBO,GAAee,EAAEA,KAEvCtB,EAAI,IACRqB,EAAS,GAAQrB,EAAEA,GACnBA,GAAK,GAGLqB,GADIrB,GAAK,GACG,EAAIS,EAAWT,KAAUA,EAAEA,GAE9BA,GAAK,GACFmB,EAAUR,EAAWX,KAAUA,EAAEA,GAEpCA,GAAK,GAEF,EAAIa,EADZ,EAAMb,IACyBA,EAE1BA,GAAK,IAEF,EAAIe,EADZ,EAAMf,IAC0BA,GAIxB,EAAIiB,EADZ,EAAMjB,IAC4BA,GC5ErC,IAACoB,EAAWhB","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -0.9999999999999991;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -0.9999999999999991 + (x * (-4.712373111208652 + (x * (-7.94125711970499 + (x * (-5.746577466976647 + (x * (-0.4042133494563989 + (x * (2.4787778117864288 + (x * (2.0771415170245513 + (x * (0.8588778991623601 + (x * (0.20499222604410033 + (x * (0.027210314034819473 + (x * 0.001576484902087695))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (4.712373111208634 + (x * (9.586191186553398 + (x * (11.094006726982938 + (x * (8.090754247493278 + (x * (3.877058901598914 + (x * (1.2275867870191448 + (x * (0.249092040606385 + (x * (0.02957504139006556 + (x * (0.0015764849020049815 + (x * 1.6126405034405948e-15))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.001576484902087695 + (x * (0.027210314034819473 + (x * (0.20499222604410033 + (x * (0.8588778991623601 + (x * (2.0771415170245513 + (x * (2.4787778117864288 + (x * (-0.4042133494563989 + (x * (-5.746577466976647 + (x * (-7.94125711970499 + (x * (-4.712373111208652 + (x * -0.9999999999999991))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.6126405034405948e-15 + (x * (0.0015764849020049815 + (x * (0.02957504139006556 + (x * (0.249092040606385 + (x * (1.2275867870191448 + (x * (3.877058901598914 + (x * (8.090754247493278 + (x * (11.094006726982938 + (x * (9.586191186553398 + (x * (4.712373111208634 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\nexport default evalrational;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -2.5584373473990794;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -2.5584373473990794 + (x * (-12.283020824054201 + (x * (-23.9195022162768 + (x * (-24.925643150482347 + (x * (-14.797912276547878 + (x * (-4.466544539286106 + (x * (-0.01914390334056497 + (x * (0.5154120525543513 + (x * (0.1953783487860643 + (x * (0.03347612826241743 + (x * (0.0023736652059422065 + (x * 0.0))))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (4.800985584544199 + (x * (9.992207278431701 + (x * (11.889614616763133 + (x * (8.966132566838091 + (x * (4.4725413614962415 + (x * (1.4860098202819654 + (x * (0.31957073576676426 + (x * (0.040735834578768094 + (x * (0.0023736652059327163 + (x * (2.3955488790352614e-16 + (x * -2.9474924474061867e-18))))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (0.0023736652059422065 + (x * (0.03347612826241743 + (x * (0.1953783487860643 + (x * (0.5154120525543513 + (x * (-0.01914390334056497 + (x * (-4.466544539286106 + (x * (-14.797912276547878 + (x * (-24.925643150482347 + (x * (-23.9195022162768 + (x * (-12.283020824054201 + (x * -2.5584373473990794))))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = -2.9474924474061867e-18 + (x * (2.3955488790352614e-16 + (x * (0.0023736652059327163 + (x * (0.040735834578768094 + (x * (0.31957073576676426 + (x * (1.4860098202819654 + (x * (4.4725413614962415 + (x * (8.966132566838091 + (x * (11.889614616763133 + (x * (9.992207278431701 + (x * (4.800985584544199 + (x * 1.0))))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\nexport default evalrational;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 1.6662611269702147e-17;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 1.6662611269702147e-17 + (x * (0.4999999999999977 + (x * (6.402709450190538 + (x * (41.38333741550006 + (x * (166.8033418545628 + (x * (453.39964786925367 + (x * (851.153712317697 + (x * (1097.7065756728507 + (x * (938.4312324784553 + (x * (487.26800160465194 + (x * 119.95344524233573))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (12.472085567047449 + (x * (78.60931297532986 + (x * (307.47024605031834 + (x * (805.1406861011516 + (x * (1439.1201976029215 + (x * (1735.6105285756048 + (x * (1348.3250071285634 + (x * (607.2259858605709 + (x * (119.95231785727705 + (x * 0.00014016591835503607))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 119.95344524233573 + (x * (487.26800160465194 + (x * (938.4312324784553 + (x * (1097.7065756728507 + (x * (851.153712317697 + (x * (453.39964786925367 + (x * (166.8033418545628 + (x * (41.38333741550006 + (x * (6.402709450190538 + (x * (0.4999999999999977 + (x * 1.6662611269702147e-17))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 0.00014016591835503607 + (x * (119.95231785727705 + (x * (607.2259858605709 + (x * (1348.3250071285634 + (x * (1735.6105285756048 + (x * (1439.1201976029215 + (x * (805.1406861011516 + (x * (307.47024605031834 + (x * (78.60931297532986 + (x * (12.472085567047449 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\nexport default evalrational;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -1.848283152741466e-20;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = -1.848283152741466e-20 + (x * (0.5 + (x * (3.0253386524731334 + (x * (13.599592751745737 + (x * (35.31322242830879 + (x * (67.16394245507142 + (x * (83.5767733658514 + (x * (71.07349121223571 + (x * (35.86215156147256 + (x * 8.721522316399835))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (5.717343971612935 + (x * (25.29340417962044 + (x * (62.26197679674682 + (x * (113.955048909239 + (x * (130.80713832893898 + (x * (102.42314690233765 + (x * (44.04247728052452 + (x * (8.89898032477904 + (x * -0.029662733687204))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 8.721522316399835 + (x * (35.86215156147256 + (x * (71.07349121223571 + (x * (83.5767733658514 + (x * (67.16394245507142 + (x * (35.31322242830879 + (x * (13.599592751745737 + (x * (3.0253386524731334 + (x * (0.5 + (x * -1.848283152741466e-20))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = -0.029662733687204 + (x * (8.89898032477904 + (x * (44.04247728052452 + (x * (102.42314690233765 + (x * (130.80713832893898 + (x * (113.955048909239 + (x * (62.26197679674682 + (x * (25.29340417962044 + (x * (5.717343971612935 + (x * 1.0))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\nexport default evalrational;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MAIN //\n\n/**\n* Evaluates a rational function, i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = 0.0 + (x * (0.5 + (x * (0.34562566988545623 + (x * (9.628954993608422 + (x * (3.5936085382439025 + (x * (49.45959911843888 + (x * (7.775192373218939 + (x * (74.4536074488178 + (x * (2.7520934039706906 + (x * (23.92923597114717 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 1.0 + (x * (0.3579180064375791 + (x * (19.138603985070986 + (x * (0.8743490814641436 + (x * (98.65160974348555 + (x * (-16.10519728333829 + (x * (154.31686021625373 + (x * (-40.2026880424379 + (x * (60.167913667426475 + (x * (-13.341484462225642 + (x * 2.537956362006499))))))))))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = 1.0 / x;\n\t\ts1 = 0.0 + (x * (23.92923597114717 + (x * (2.7520934039706906 + (x * (74.4536074488178 + (x * (7.775192373218939 + (x * (49.45959911843888 + (x * (3.5936085382439025 + (x * (9.628954993608422 + (x * (0.34562566988545623 + (x * (0.5 + (x * 0.0))))))))))))))))))); // eslint-disable-line max-len\n\t\ts2 = 2.537956362006499 + (x * (-13.341484462225642 + (x * (60.167913667426475 + (x * (-40.2026880424379 + (x * (154.31686021625373 + (x * (-16.10519728333829 + (x * (98.65160974348555 + (x * (0.8743490814641436 + (x * (19.138603985070986 + (x * (0.3579180064375791 + (x * 1.0))))))))))))))))))); // eslint-disable-line max-len\n\t}\n\treturn s1 / s2;\n}\n\n\n// EXPORTS //\nexport default evalrational;\n","import __var_0__ from '@stdlib/math/base/special/floor';\nimport __var_1__ from '@stdlib/math/base/special/sinpi';\nimport __var_2__ from '@stdlib/constants/math/float64-pi-squared';\nimport __var_3__ from './rational_p12q12.js';\nimport __var_4__ from './rational_p24q24.js';\nimport __var_5__ from './rational_p48q48.js';\nimport __var_6__ from './rational_p816q816.js';\nimport __var_7__ from './rational_p16infq16inf.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_65_0/boost/math/special_functions/trigamma.hpp}. The implementation follows the original but has been reformatted and modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\nvar floor = __var_0__;\nvar sinpi = __var_1__;\nvar PI_SQUARED = __var_2__;\nvar rateval12 = __var_3__;\nvar rateval24 = __var_4__;\nvar rateval48 = __var_5__;\nvar rateval816 = __var_6__;\nvar rateval16INF = __var_7__;\n\n\n// VARIABLES //\n\nvar YOFFSET24 = 3.558437347412109375;\n\n\n// MAIN //\n\n/**\n* Evaluates the trigamma function.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = trigamma( -2.5 );\n* // returns ~9.539\n*\n* @example\n* var v = trigamma( 1.0 );\n* // returns ~1.645\n*\n* @example\n* var v = trigamma( 10.0 );\n* // returns ~0.105\n*\n* @example\n* var v = trigamma( NaN );\n* // returns NaN\n*\n* @example\n* var v = trigamma( -1.0 );\n* // returns NaN\n*/\nfunction trigamma( x ) {\n\tvar result;\n\tvar s;\n\tvar y;\n\tvar z;\n\n\tresult = 0.0;\n\n\t// Check for negative arguments and use reflection:\n\tif ( x <= 0 ) {\n\t\tif ( floor( x ) === x ) {\n\t\t\treturn NaN;\n\t\t}\n\t\ts = sinpi( x );\n\t\tz = 1.0 - x;\n\t\treturn -trigamma( z ) + ( PI_SQUARED / ( s*s ) );\n\t}\n\tif ( x < 1.0 ) {\n\t\tresult = 1.0 / ( x*x );\n\t\tx += 1.0;\n\t}\n\tif ( x <= 2.0 ) {\n\t\tresult += ( 2.0+rateval12( x ) ) / ( x*x );\n\t}\n\telse if ( x <= 4.0 ) {\n\t\tresult += ( YOFFSET24+rateval24( x ) ) / ( x*x );\n\t}\n\telse if ( x <= 8.0 ) {\n\t\ty = 1.0 / x;\n\t\tresult += ( 1.0+rateval48( y ) ) / x;\n\t}\n\telse if ( x <= 16.0 ) {\n\t\ty = 1.0 / x;\n\t\tresult += ( 1.0+rateval816( y ) ) / x;\n\t}\n\telse {\n\t\ty = 1.0 / x;\n\t\tresult += ( 1.0+rateval16INF( y ) ) / x;\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\nexport default trigamma;\n","import __var_0__ from './trigamma.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the trigamma function.\n*\n* @module @stdlib/math/base/special/trigamma\n*\n* @example\n* var trigamma = require( '@stdlib/math/base/special/trigamma' );\n*\n* var v = trigamma( -2.5 );\n* // returns ~9.539\n*\n* v = trigamma( 1.0 );\n* // returns ~1.645\n*\n* v = trigamma( 10.0 );\n* // returns ~0.105\n*\n* v = trigamma( NaN );\n* // returns NaN\n*\n* v = trigamma( -1.0 );\n* // returns NaN\n*/\n\n// MODULES //\nvar trigamma = __var_0__;\n\n\n// EXPORTS //\nexport default trigamma;\n"]}