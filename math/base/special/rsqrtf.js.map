{"version":3,"sources":["@stdlib/math/base/special/rsqrtf/lib/main.js","@stdlib/math/base/special/rsqrtf/lib/index.js"],"names":["float64ToFloat32","__var_0__","sqrt","__var_1__","rsqrtf","x"],"mappings":"qFAuBA,IAAIA,EAAmBC,EACnBC,EAAOC,EA+BX,SAASC,EAAQC,GAChB,OAAOL,EAAkB,EAAME,EAAMF,EAAkBK,KCVrD,IAACD,EAASH","sourcesContent":["import __var_0__ from '@stdlib/number/float64/base/to-float32';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar float64ToFloat32 = __var_0__;\nvar sqrt = __var_1__;\n\n\n// MAIN //\n\n/**\n* Compute the reciprocal square root of a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} reciprocal square root\n*\n* @example\n* var v = rsqrtf( 4.0 );\n* // returns 0.5\n*\n* @example\n* var v = rsqrtf( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = rsqrtf( Infinity );\n* // returns 0.0\n*\n* @example\n* var v = rsqrtf( -4.0 );\n* // returns NaN\n*\n* @example\n* var v = rsqrtf( NaN );\n* // returns NaN\n*/\nfunction rsqrtf( x ) {\n\treturn float64ToFloat32( 1.0 / sqrt( float64ToFloat32( x ) ) );\n}\n\n\n// EXPORTS //\nexport default rsqrtf;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the reciprocal square root of a single-precision floating-point number.\n*\n* @module @stdlib/math/base/special/rsqrtf\n*\n* @example\n* var rsqrtf = require( '@stdlib/math/base/special/rsqrtf' );\n*\n* var v = rsqrtf( 4.0 );\n* // returns 0.5\n*\n* v = rsqrtf( 0.0 );\n* // returns 0.0\n*\n* v = rsqrtf( Infinity );\n* // returns 0.0\n*\n* v = rsqrtf( -4.0 );\n* // returns NaN\n*\n* v = rsqrtf( NaN );\n* // returns NaN\n*/\n\n// MODULES //\nvar rsqrtf = __var_0__;\n\n\n// EXPORTS //\nexport default rsqrtf;\n"]}