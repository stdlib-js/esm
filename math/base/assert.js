// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import s from"./../../utils/define-read-only-property.js";import e from"./assert/int32-is-even.js";export{default as isEvenInt32}from"@stdlib/math/base/assert/int32-is-even";import i from"./assert/int32-is-odd.js";export{default as isOddInt32}from"@stdlib/math/base/assert/int32-is-odd";import t from"./assert/is-composite.js";export{default as isComposite}from"@stdlib/math/base/assert/is-composite";import r from"./assert/is-coprime.js";export{default as isCoprime}from"@stdlib/math/base/assert/is-coprime";import a from"./assert/is-even.js";export{default as isEven}from"@stdlib/math/base/assert/is-even";import o from"./assert/is-finite.js";export{default as isFinite}from"@stdlib/math/base/assert/is-finite";import f from"./assert/is-finitef.js";export{default as isFinitef}from"@stdlib/math/base/assert/is-finitef";import m from"./assert/is-infinite.js";export{default as isInfinite}from"@stdlib/math/base/assert/is-infinite";import n from"./assert/is-infinitef.js";export{default as isInfinitef}from"@stdlib/math/base/assert/is-infinitef";import p from"./assert/is-integer.js";export{default as isInteger}from"@stdlib/math/base/assert/is-integer";import d from"./assert/is-nan.js";export{default as isnan}from"@stdlib/math/base/assert/is-nan";import b from"./assert/is-nanf.js";export{default as isnanf}from"@stdlib/math/base/assert/is-nanf";import l from"./assert/is-negative-integer.js";export{default as isNegativeInteger}from"@stdlib/math/base/assert/is-negative-integer";import v from"./assert/is-negative-zero.js";export{default as isNegativeZero}from"@stdlib/math/base/assert/is-negative-zero";import g from"./assert/is-negative-zerof.js";export{default as isNegativeZerof}from"@stdlib/math/base/assert/is-negative-zerof";import u from"./assert/is-nonnegative-integer.js";export{default as isNonNegativeInteger}from"@stdlib/math/base/assert/is-nonnegative-integer";import j from"./assert/is-nonpositive-integer.js";export{default as isNonPositiveInteger}from"@stdlib/math/base/assert/is-nonpositive-integer";import x from"./assert/is-odd.js";export{default as isOdd}from"@stdlib/math/base/assert/is-odd";import h from"./assert/is-positive-integer.js";export{default as isPositiveInteger}from"@stdlib/math/base/assert/is-positive-integer";import I from"./assert/is-positive-zero.js";export{default as isPositiveZero}from"@stdlib/math/base/assert/is-positive-zero";import P from"./assert/is-positive-zerof.js";export{default as isPositiveZerof}from"@stdlib/math/base/assert/is-positive-zerof";import N from"./assert/is-prime.js";export{default as isPrime}from"@stdlib/math/base/assert/is-prime";import z from"./assert/is-probability.js";export{default as isProbability}from"@stdlib/math/base/assert/is-probability";import Z from"./assert/is-safe-integer.js";export{default as isSafeInteger}from"@stdlib/math/base/assert/is-safe-integer";import y from"./assert/uint32-is-pow2.js";export{default as isPow2Uint32}from"@stdlib/math/base/assert/uint32-is-pow2";var c=s,w={};c(w,"isEvenInt32",e),c(w,"isOddInt32",i),c(w,"isComposite",t),c(w,"isCoprime",r),c(w,"isEven",a),c(w,"isFinite",o),c(w,"isFinitef",f),c(w,"isInfinite",m),c(w,"isInfinitef",n),c(w,"isInteger",p),c(w,"isnan",d),c(w,"isnanf",b),c(w,"isNegativeInteger",l),c(w,"isNegativeZero",v),c(w,"isNegativeZerof",g),c(w,"isNonNegativeInteger",u),c(w,"isNonPositiveInteger",j),c(w,"isOdd",x),c(w,"isPositiveInteger",h),c(w,"isPositiveZero",I),c(w,"isPositiveZerof",P),c(w,"isPrime",N),c(w,"isProbability",z),c(w,"isSafeInteger",Z),c(w,"isPow2Uint32",y);export default w;
//# sourceMappingURL=assert.js.map