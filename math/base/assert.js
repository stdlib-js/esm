// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import s from"./../../utils/define-read-only-property.js";import e from"./assert/int32-is-even.js";export{default as isEvenInt32}from"./assert/int32-is-even.js";import i from"./assert/int32-is-odd.js";export{default as isOddInt32}from"./assert/int32-is-odd.js";import t from"./assert/is-composite.js";export{default as isComposite}from"./assert/is-composite.js";import r from"./assert/is-coprime.js";export{default as isCoprime}from"./assert/is-coprime.js";import o from"./assert/is-even.js";export{default as isEven}from"./assert/is-even.js";import a from"./assert/is-finite.js";export{default as isFinite}from"./assert/is-finite.js";import f from"./assert/is-finitef.js";export{default as isFinitef}from"./assert/is-finitef.js";import n from"./assert/is-infinite.js";export{default as isInfinite}from"./assert/is-infinite.js";import m from"./assert/is-infinitef.js";export{default as isInfinitef}from"./assert/is-infinitef.js";import p from"./assert/is-integer.js";export{default as isInteger}from"./assert/is-integer.js";import j from"./assert/is-nan.js";export{default as isnan}from"./assert/is-nan.js";import d from"./assert/is-nanf.js";export{default as isnanf}from"./assert/is-nanf.js";import v from"./assert/is-negative-integer.js";export{default as isNegativeInteger}from"./assert/is-negative-integer.js";import g from"./assert/is-negative-zero.js";export{default as isNegativeZero}from"./assert/is-negative-zero.js";import l from"./assert/is-negative-zerof.js";export{default as isNegativeZerof}from"./assert/is-negative-zerof.js";import u from"./assert/is-nonnegative-integer.js";export{default as isNonNegativeInteger}from"./assert/is-nonnegative-integer.js";import x from"./assert/is-nonpositive-integer.js";export{default as isNonPositiveInteger}from"./assert/is-nonpositive-integer.js";import I from"./assert/is-odd.js";export{default as isOdd}from"./assert/is-odd.js";import P from"./assert/is-positive-integer.js";export{default as isPositiveInteger}from"./assert/is-positive-integer.js";import N from"./assert/is-positive-zero.js";export{default as isPositiveZero}from"./assert/is-positive-zero.js";import b from"./assert/is-positive-zerof.js";export{default as isPositiveZerof}from"./assert/is-positive-zerof.js";import z from"./assert/is-prime.js";export{default as isPrime}from"./assert/is-prime.js";import Z from"./assert/is-probability.js";export{default as isProbability}from"./assert/is-probability.js";import y from"./assert/is-safe-integer.js";export{default as isSafeInteger}from"./assert/is-safe-integer.js";import c from"./assert/uint32-is-pow2.js";export{default as isPow2Uint32}from"./assert/uint32-is-pow2.js";var w=s,C={};w(C,"isEvenInt32",e),w(C,"isOddInt32",i),w(C,"isComposite",t),w(C,"isCoprime",r),w(C,"isEven",o),w(C,"isFinite",a),w(C,"isFinitef",f),w(C,"isInfinite",n),w(C,"isInfinitef",m),w(C,"isInteger",p),w(C,"isnan",j),w(C,"isnanf",d),w(C,"isNegativeInteger",v),w(C,"isNegativeZero",g),w(C,"isNegativeZerof",l),w(C,"isNonNegativeInteger",u),w(C,"isNonPositiveInteger",x),w(C,"isOdd",I),w(C,"isPositiveInteger",P),w(C,"isPositiveZero",N),w(C,"isPositiveZerof",b),w(C,"isPrime",z),w(C,"isProbability",Z),w(C,"isSafeInteger",y),w(C,"isPow2Uint32",c);export default C;
//# sourceMappingURL=assert.js.map