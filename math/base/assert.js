// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import i from"./../../utils/define-read-only-property.js";import s from"./assert/int32-is-even.js";import e from"./assert/int32-is-odd.js";import r from"./assert/is-composite.js";import t from"./assert/is-coprime.js";import o from"./assert/is-even.js";import m from"./assert/is-finite.js";import n from"./assert/is-finitef.js";import f from"./assert/is-infinite.js";import a from"./assert/is-infinitef.js";import p from"./assert/is-integer.js";import j from"./assert/is-nan.js";import v from"./assert/is-nanf.js";import g from"./assert/is-negative-integer.js";import d from"./assert/is-negative-zero.js";import I from"./assert/is-negative-zerof.js";import P from"./assert/is-nonnegative-integer.js";import N from"./assert/is-nonpositive-integer.js";import l from"./assert/is-odd.js";import b from"./assert/is-positive-integer.js";import y from"./assert/is-positive-zero.js";import z from"./assert/is-positive-zerof.js";import Z from"./assert/is-prime.js";import u from"./assert/is-probability.js";import c from"./assert/is-safe-integer.js";import w from"./assert/uint32-is-pow2.js";var C=i,E={};C(E,"isEvenInt32",s),C(E,"isOddInt32",e),C(E,"isComposite",r),C(E,"isCoprime",t),C(E,"isEven",o),C(E,"isFinite",m),C(E,"isFinitef",n),C(E,"isInfinite",f),C(E,"isInfinitef",a),C(E,"isInteger",p),C(E,"isnan",j),C(E,"isnanf",v),C(E,"isNegativeInteger",g),C(E,"isNegativeZero",d),C(E,"isNegativeZerof",I),C(E,"isNonNegativeInteger",P),C(E,"isNonPositiveInteger",N),C(E,"isOdd",l),C(E,"isPositiveInteger",b),C(E,"isPositiveZero",y),C(E,"isPositiveZerof",z),C(E,"isPrime",Z),C(E,"isProbability",u),C(E,"isSafeInteger",c),C(E,"isPow2Uint32",w);export default E;
//# sourceMappingURL=assert.js.map