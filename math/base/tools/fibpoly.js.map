{"version":3,"sources":["@stdlib/math/base/tools/fibpoly/lib/cache.js","@stdlib/math/base/tools/fibpoly/lib/coefficients.js","@stdlib/math/base/tools/fibpoly/lib/main.js","@stdlib/math/base/tools/fibpoly/lib/factory.js","@stdlib/math/base/tools/fibpoly/lib/index.js"],"names":["cache","binomcoef","__var_0__","__var_1__","coefficients","n","coefs","i","Array","evalpoly","pow","abs","__var_2__","__var_3__","fibpoly","x","an","v","factory","f","s","setReadOnly"],"mappings":"uNAuBA,IAAIA,EAAQ,GCARC,EAAYC,EACZF,EAAQG,EAYZ,SAASC,EAAcC,GACtB,IAAIC,EACAC,EAGJ,QAAe,KADfD,EAAQN,EAAOK,IACS,CAEvB,IADAC,EAAQ,IAAIE,MAAOH,GACbE,EAAI,EAAGA,EAAIF,EAAGE,IACnBD,EAAOC,GAAM,EAEd,IAAMA,EAAIF,EAAE,EAAGE,GAAK,EAAGA,GAAK,EAC3BD,EAAOC,GAAMN,GAAYI,EAAEE,EAAE,GAAG,EAAGA,GAGpCP,EAAOK,GAAMC,EAEd,OAAOA,EC3BR,IAAIG,EAAWP,EACXQ,EAAMP,EACNQ,EAAMC,EACNR,EAAeS,EAgBnB,SAASC,EAAST,EAAGU,GACpB,IAAIT,EACAU,EACAC,EAMJ,OAJAD,EAAKL,EAAKN,GACVC,EAAQF,EAAcY,GAEtBC,EAAIR,EAAUH,EAAOS,GAChBV,GAAK,EACFY,EAEDP,GAAM,EAAKM,EAAG,GAAMC,EC/B5B,IAAIR,EAAWP,EAAUgB,QACrBR,EAAMP,EACNQ,EAAMC,EACNR,EAAeS,EAoBnB,SAASK,EAASb,GACjB,IAAIC,EACAU,EACAG,EACAC,EAOJ,OALAJ,EAAKL,EAAKN,GACVC,EAAQF,EAAcY,GAEtBG,EAAIV,EAAUH,GACdc,EAAIV,GAAM,EAAKM,EAAG,GACbX,GAAK,GAAW,IAANe,EACPD,EAWR,SAAkBJ,GACjB,OAAQ,EAAMI,EAAGJ,ICzBnB,IAAIM,EAAcnB,EACdY,EAAUX,EACVe,EAAUN,EAKdS,EAAaP,EAAS,UAAWI","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar cache = {};\n\n\n// EXPORTS //\nexport default cache;\n","import __var_0__ from '@stdlib/math/base/special/binomcoef';\nimport __var_1__ from './cache.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar binomcoef = __var_0__;\nvar cache = __var_1__;\n\n\n// MAIN //\n\n/**\n* Computes polynomial coefficients.\n*\n* @private\n* @param {NonNegativeInteger} n - Fibonacci polynomial for which to compute coefficients\n* @returns {NonNegativeIntegerArray} polynomial coefficients\n*/\nfunction coefficients( n ) {\n\tvar coefs;\n\tvar i;\n\n\tcoefs = cache[ n ];\n\tif ( coefs === void 0 ) {\n\t\tcoefs = new Array( n );\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tcoefs[ i ] = 0.0;\n\t\t}\n\t\tfor ( i = n-1; i >= 0; i -= 2 ) {\n\t\t\tcoefs[ i ] = binomcoef( (n+i-1)/2, i );\n\t\t}\n\t\t// Memoize the coefficients:\n\t\tcache[ n ] = coefs;\n\t}\n\treturn coefs;\n}\n\n\n// EXPORTS //\nexport default coefficients;\n","import __var_0__ from '@stdlib/math/base/tools/evalpoly';\nimport __var_1__ from '@stdlib/math/base/special/pow';\nimport __var_2__ from '@stdlib/math/base/special/abs';\nimport __var_3__ from './coefficients.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar evalpoly = __var_0__;\nvar pow = __var_1__;\nvar abs = __var_2__;\nvar coefficients = __var_3__;\n\n\n// MAIN //\n\n/**\n* Evaluates a Fibonacci polynomial.\n*\n* @param {integer} n - Fibonacci polynomial to evaluate\n* @param {number} x - value at which to evaluate a Fibonacci polynomial\n* @returns {number} result\n*\n* @example\n* var v = fibpoly( 5, 1.0 );\n* // returns 5.0\n*/\nfunction fibpoly( n, x ) {\n\tvar coefs;\n\tvar an;\n\tvar v;\n\n\tan = abs( n );\n\tcoefs = coefficients( an );\n\n\tv = evalpoly( coefs, x );\n\tif ( n >= 0 ) {\n\t\treturn v;\n\t}\n\treturn pow( -1.0, an-1 ) * v;\n}\n\n\n// EXPORTS //\nexport default fibpoly;\n","import __var_0__ from '@stdlib/math/base/tools/evalpoly';\nimport __var_1__ from '@stdlib/math/base/special/pow';\nimport __var_2__ from '@stdlib/math/base/special/abs';\nimport __var_3__ from './coefficients.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar evalpoly = __var_0__.factory;\nvar pow = __var_1__;\nvar abs = __var_2__;\nvar coefficients = __var_3__;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating a Fibonacci polynomial.\n*\n* @param {integer} n - Fibonacci polynomial to evaluate\n* @returns {Function} function for evaluating a Fibonacci polynomial\n*\n* @example\n* var fibpolyval = factory( 5 );\n*\n* var v = fibpolyval( 1.0 );\n* // returns 5.0\n*\n* v = fibpolyval( 2.0 );\n* // returns 29.0\n*/\nfunction factory( n ) {\n\tvar coefs;\n\tvar an;\n\tvar f;\n\tvar s;\n\n\tan = abs( n );\n\tcoefs = coefficients( an );\n\n\tf = evalpoly( coefs );\n\ts = pow( -1.0, an-1 );\n\tif ( n >= 0 || s === 1.0 ) {\n\t\treturn f;\n\t}\n\treturn polyval;\n\n\t/**\n\t* Evaluates a Fibonacci polynomial.\n\t*\n\t* @private\n\t* @param {number} x - value at which to evaluate a Fibonacci polynomial\n\t* @returns {number} result\n\t*/\n\tfunction polyval( x ) {\n\t\treturn -1.0 * f( x );\n\t}\n}\n\n\n// EXPORTS //\nexport default factory;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './factory.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate a Fibonacci polynomial.\n*\n* @module @stdlib/math/base/tools/fibpoly\n*\n* @example\n* var fibpoly = require( '@stdlib/math/base/tools/fibpoly' );\n*\n* var v = fibpoly( 5, 1.0 );\n* // returns 5.0\n*\n* @example\n* var factory = require( '@stdlib/math/base/tools/fibpoly' ).factory;\n*\n* var fibpolyval = factory( 5 );\n*\n* var v = fibpolyval( 1.0 );\n* // returns 5.0\n*\n* v = fibpolyval( 2.0 );\n* // returns 29.0\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar fibpoly = __var_1__;\nvar factory = __var_2__;\n\n\n// MAIN //\n\nsetReadOnly( fibpoly, 'factory', factory );\n\n\n// EXPORTS //\nexport default fibpoly;\n"]}