{"version":3,"sources":["@stdlib/math/base/tools/lib/index.js"],"names":["setReadOnly","__var_0__","tools","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__"],"mappings":"86BAkCA,IAAIA,EAAcC,EAUdC,EAAQ,GASZF,EAAaE,EAAO,oBAAqBC,GASzCH,EAAaE,EAAO,WAAYE,GAShCJ,EAAaE,EAAO,eAAgBG,GASpCL,EAAaE,EAAO,UAAWI,GAS/BN,EAAaE,EAAO,cAAeK,GASnCP,EAAaE,EAAO,YAAaM,GASjCR,EAAaE,EAAO,kBAAmBO,GASvCT,EAAaE,EAAO,YAAaQ","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/math/base/tools/continued-fraction';\nimport __var_2__ from '@stdlib/math/base/tools/evalpoly';\nimport __var_3__ from '@stdlib/math/base/tools/evalrational';\nimport __var_4__ from '@stdlib/math/base/tools/fibpoly';\nimport __var_5__ from '@stdlib/math/base/tools/hermitepoly';\nimport __var_6__ from '@stdlib/math/base/tools/lucaspoly';\nimport __var_7__ from '@stdlib/math/base/tools/normhermitepoly';\nimport __var_8__ from '@stdlib/math/base/tools/sum-series';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace tools\n*/\nvar tools = {};\n\n/**\n* @name continuedFraction\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/continued-fraction}\n*/\nsetReadOnly( tools, 'continuedFraction', __var_1__);\n\n/**\n* @name evalpoly\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/evalpoly}\n*/\nsetReadOnly( tools, 'evalpoly', __var_2__);\n\n/**\n* @name evalrational\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/evalrational}\n*/\nsetReadOnly( tools, 'evalrational', __var_3__);\n\n/**\n* @name fibpoly\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/fibpoly}\n*/\nsetReadOnly( tools, 'fibpoly', __var_4__);\n\n/**\n* @name hermitepoly\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/hermitepoly}\n*/\nsetReadOnly( tools, 'hermitepoly', __var_5__);\n\n/**\n* @name lucaspoly\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/lucaspoly}\n*/\nsetReadOnly( tools, 'lucaspoly', __var_6__);\n\n/**\n* @name normhermitepoly\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/normhermitepoly}\n*/\nsetReadOnly( tools, 'normhermitepoly', __var_7__);\n\n/**\n* @name sumSeries\n* @memberof tools\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/tools/sum-series}\n*/\nsetReadOnly( tools, 'sumSeries', __var_8__);\n\n\n// EXPORTS //\nexport default tools;\n\nexport { __var_1__ as continuedFraction, __var_2__ as evalpoly, __var_3__ as evalrational, __var_4__ as fibpoly, __var_5__ as hermitepoly, __var_6__ as lucaspoly, __var_7__ as normhermitepoly, __var_8__ as sumSeries};"]}