{"version":3,"sources":["@stdlib/math/base/assert/is-nonpositive-integer/lib/is_nonpositive_integer.js","@stdlib/math/base/assert/is-nonpositive-integer/lib/index.js"],"names":["floor","__var_0__","isNonPositiveInteger","x"],"mappings":"qCAsBA,IAAIA,EAAQC,EAuBZ,SAASC,EAAsBC,GAC9B,OAAQH,EAAMG,KAAOA,GAAKA,GAAK,ECN7B,IAACD,EAAuBD","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/floor';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar floor = __var_0__;\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is a nonpositive integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a nonpositive integer\n*\n* @example\n* var bool = isNonPositiveInteger( -1.0 );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveInteger( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveInteger( 10.0 );\n* // returns false\n*/\nfunction isNonPositiveInteger( x ) {\n\treturn (floor(x) === x && x <= 0);\n}\n\n\n// EXPORTS //\nexport default isNonPositiveInteger;\n","import __var_0__ from './is_nonpositive_integer.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is a nonpositive integer.\n*\n* @module @stdlib/math/base/assert/is-nonpositive-integer\n*\n* @example\n* var isNonPositiveInteger = require( '@stdlib/math/base/assert/is-nonpositive-integer' );\n*\n* var bool = isNonPositiveInteger( -1.0 );\n* // returns true\n*\n* bool = isNonPositiveInteger( 0.0 );\n* // returns true\n*\n* bool = isNonPositiveInteger( 10.0 );\n* // returns false\n*/\n\n// MODULES //\nvar isNonPositiveInteger = __var_0__;\n\n\n// EXPORTS //\nexport default isNonPositiveInteger;\n"]}