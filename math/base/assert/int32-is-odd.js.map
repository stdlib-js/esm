{"version":3,"sources":["@stdlib/math/base/assert/int32-is-odd/lib/is_odd.js","@stdlib/math/base/assert/int32-is-odd/lib/index.js"],"names":["isOdd","x","__var_0__"],"mappings":"AAyCA,SAASA,EAAOC,GACf,OAAmB,IAAP,EAAJA,GCFN,IAACD,EAAQE","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a 32-bit integer is odd.\n*\n* @param {integer32} x - value to test\n* @returns {boolean} boolean indicating whether the value is odd\n*\n* @example\n* var bool = isOdd( 5 );\n* // returns true\n*\n* @example\n* var bool = isOdd( -2 );\n* // returns false\n*\n* @example\n* var bool = isOdd( 0 );\n* // returns false\n*/\nfunction isOdd( x ) {\n\treturn (x & 1) === 1;\n}\n\n\n// EXPORTS //\nexport default isOdd;\n","import __var_0__ from './is_odd.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a 32-bit integer is odd.\n*\n* @module @stdlib/math/base/assert/int32-is-odd\n*\n* @example\n* var isOdd = require( '@stdlib/math/base/assert/int32-is-odd' );\n*\n* var bool = isOdd( 5 );\n* // returns true\n*\n* bool = isOdd( -2 );\n* // returns false\n*\n* bool = isOdd( 0 );\n* // returns false\n*/\n\n// MODULES //\nvar isOdd = __var_0__;\n\n\n// EXPORTS //\nexport default isOdd;\n"]}