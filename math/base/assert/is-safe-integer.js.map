{"version":3,"sources":["@stdlib/math/base/assert/is-safe-integer/lib/is_safe_integer.js","@stdlib/math/base/assert/is-safe-integer/lib/index.js"],"names":["MAX_SAFE_INTEGER","__var_0__","MIN_SAFE_INTEGER","__var_1__","isInteger","__var_2__","isSafeInteger","x"],"mappings":"yKAwBA,IAAIA,EAAmBC,EACnBC,EAAmBC,EACnBC,EAAYC,EAuBhB,SAASC,EAAeC,GACvB,OACCA,GAAKL,GACLK,GAAKP,GACLI,EAAWG,GCbV,IAACD,EAAgBL","sourcesContent":["import __var_0__ from '@stdlib/constants/math/float64-max-safe-integer';\nimport __var_1__ from '@stdlib/constants/math/float64-min-safe-integer';\nimport __var_2__ from '@stdlib/math/base/assert/is-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar MAX_SAFE_INTEGER = __var_0__;\nvar MIN_SAFE_INTEGER = __var_1__;\nvar isInteger = __var_2__;\n\n\n// MAIN //\n\n/**\n* Tests if a finite double-precision floating-point number is a safe integer.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is a safe integer\n*\n* @example\n* var bool = isSafeInteger( 1.0 );\n* // returns true\n*\n* @example\n* var bool = isSafeInteger( 2.0e200 );\n* // returns false\n*\n* @example\n* var bool = isSafeInteger( 3.14 );\n* // returns false\n*/\nfunction isSafeInteger( x ) {\n\treturn (\n\t\tx >= MIN_SAFE_INTEGER &&\n\t\tx <= MAX_SAFE_INTEGER &&\n\t\tisInteger( x )\n\t);\n}\n\n\n// EXPORTS //\nexport default isSafeInteger;\n","import __var_0__ from './is_safe_integer.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a finite double-precision floating-point number is a safe integer.\n*\n* @module @stdlib/math/base/assert/is-safe-integer\n*\n* @example\n* var isSafeInteger = require( '@stdlib/math/base/assert/is-safe-integer' );\n*\n* var bool = isSafeInteger( 1.0 );\n* // returns true\n*\n* bool = isSafeInteger( 2.0e200 );\n* // returns false\n*\n* bool = isSafeInteger( 3.14 );\n* // returns false\n*/\n\n// MODULES //\nvar isSafeInteger = __var_0__;\n\n\n// EXPORTS //\nexport default isSafeInteger;\n"]}