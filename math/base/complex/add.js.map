{"version":3,"sources":["@stdlib/math/base/complex/add/lib/cadd.js","@stdlib/math/base/complex/add/lib/main.js","@stdlib/math/base/complex/add/lib/index.js"],"names":["cadd","out","re1","im1","re2","im2","add","__var_0__","arguments","length"],"mappings":"AAuCA,SAASA,EAAMC,EAAKC,EAAKC,EAAKC,EAAKC,GAGlC,OAFAJ,EAAK,GAAMC,EAAME,EACjBH,EAAK,GAAME,EAAME,EACVJ,ECpBR,IAAIK,EAAMC,EAqBV,SAASP,EAAMC,EAAKC,EAAKC,EAAKC,EAAKC,GAClC,OAA0B,IAArBG,UAAUC,OACPH,EAAK,CAAE,EAAK,GAAOL,EAAKC,EAAKC,EAAKC,GAEnCE,EAAKL,EAAKC,EAAKC,EAAKC,EAAKC,GCF9B,IAACL,EAAOO","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Adds two complex numbers.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} re1 - real component\n* @param {number} im1 - imaginary component\n* @param {number} re2 - real component\n* @param {number} im2 - imaginary component\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var out = new Float64Array( 2 );\n* var v = cadd( out, 5.0, 3.0, -2.0, 1.0 );\n* // returns <Float64Array>[ 3.0, 4.0 ]\n*/\nfunction cadd( out, re1, im1, re2, im2 ) {\n\tout[ 0 ] = re1 + re2;\n\tout[ 1 ] = im1 + im2;\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default cadd;\n","import __var_0__ from './cadd.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar add = __var_0__;\n\n\n// MAIN //\n\n/**\n* Adds two complex numbers.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} re1 - real component\n* @param {number} im1 - imaginary component\n* @param {number} re2 - real component\n* @param {number} im2 - imaginary component\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var out = new Float64Array( 2 );\n* var v = cadd( out, 5.0, 3.0, -2.0, 1.0 );\n* // returns <Float64Array>[ 3.0, 4.0 ]\n*/\nfunction cadd( out, re1, im1, re2, im2 ) {\n\tif ( arguments.length === 4 ) {\n\t\treturn add( [ 0.0, 0.0 ], out, re1, im1, re2 );\n\t}\n\treturn add( out, re1, im1, re2, im2 );\n}\n\n\n// EXPORTS //\nexport default cadd;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Add two complex numbers.\n*\n* @module @stdlib/math/base/complex/add\n*\n* @example\n* var cadd = require( '@stdlib/math/base/complex/add' );\n*\n* var v = cadd( 5.0, 3.0, -2.0, 1.0 );\n* // returns [ 3.0, 4.0 ]\n*\n* @example\n* var cadd = require( '@stdlib/math/base/complex/add' );\n*\n* var out = new Float32Array( 2 );\n*\n* var v = cadd( out, 5.0, 3.0, -2.0, 1.0 );\n* // returns <Float32Array>[ 3.0, 4.0 ]\n*\n* var bool = ( out === v );\n* // returns true\n*/\n\n// MODULES //\nvar cadd = __var_0__;\n\n\n// EXPORTS //\nexport default cadd;\n"]}