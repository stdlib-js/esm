{"version":3,"sources":["@stdlib/math/base/complex/abs/lib/cabs.js","@stdlib/math/base/complex/abs/lib/index.js"],"names":["hypot","__var_0__","cabs","re","im"],"mappings":"qCAsBA,IAAIA,EAAQC,EAgBZ,SAASC,EAAMC,EAAIC,GAClB,OAAOJ,EAAOG,EAAIC,GCLhB,IAACF,EAAOD","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/hypot';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar hypot = __var_0__;\n\n\n// MAIN //\n\n/**\n* Computes the absolute value of a complex number.\n*\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @returns {number} absolute value\n*\n* @example\n* var v = cabs( 5.0, 3.0 );\n* // returns ~5.83\n*/\nfunction cabs( re, im ) {\n\treturn hypot( re, im );\n}\n\n\n// EXPORTS //\nexport default cabs;\n","import __var_0__ from './cabs.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an absolute value of a complex number.\n*\n* @module @stdlib/math/base/complex/abs\n*\n* @example\n* var cabs = require( '@stdlib/math/base/complex/abs' );\n*\n* var v = cabs( 5.0, 3.0 );\n* // returns ~5.83\n*/\n\n// MODULES //\nvar cabs = __var_0__;\n\n\n// EXPORTS //\nexport default cabs;\n"]}