{"version":3,"sources":["@stdlib/math/base/complex/negate/lib/cnegate.js","@stdlib/math/base/complex/negate/lib/main.js","@stdlib/math/base/complex/negate/lib/index.js"],"names":["cnegate","out","re","im","negate","__var_0__","cneg","arguments","length"],"mappings":"AAmDA,SAASA,EAASC,EAAKC,EAAIC,GAG1B,OAFAF,EAAK,IAAOC,EACZD,EAAK,IAAOE,EACLF,EChCR,IAAIG,EAASC,EAkCb,SAASC,EAAML,EAAKC,EAAIC,GACvB,OAA0B,IAArBI,UAAUC,OACPJ,EAAQ,CAAE,EAAK,GAAOH,EAAKC,GAE5BE,EAAQH,EAAKC,EAAIC,GCTtB,IAACG,EAAOD","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Negates a complex number.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @returns {(Array|TypedArray|Object)} negated components\n*\n* @example\n* var out = new Array( 2 );\n*\n* var v = cnegate( out, -4.2, 5.5 );\n* // returns [ 4.2, -5.5 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = new Array( 2 );\n* var v = cnegate( out, 0.0, 0.0 );\n* // returns [ -0.0, -0.0 ]\n*\n* @example\n* var out = new Array( 2 );\n* var v = cnegate( out, NaN, NaN );\n* // returns [ NaN, NaN ]\n*/\nfunction cnegate( out, re, im ) {\n\tout[ 0 ] = -re;\n\tout[ 1 ] = -im;\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default cnegate;\n","import __var_0__ from './cnegate.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar negate = __var_0__;\n\n\n// MAIN //\n\n/**\n* Negates a complex number.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @returns {(Array|TypedArray|Object)} negated components\n*\n* @example\n* var v = cneg( -4.2, 5.5 );\n* // returns [ 4.2, -5.5 ]\n*\n* @example\n* var out = new Array( 2 );\n*\n* var v = cneg( out, -4.2, 5.5 );\n* // returns [ 4.2, -5.5 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var v = cneg( 0.0, 0.0 );\n* // returns [ -0.0, -0.0 ]\n*\n* @example\n* var v = cneg( NaN, NaN );\n* // returns [ NaN, NaN ]\n*/\nfunction cneg( out, re, im ) {\n\tif ( arguments.length === 2 ) {\n\t\treturn negate( [ 0.0, 0.0 ], out, re );\n\t}\n\treturn negate( out, re, im );\n}\n\n\n// EXPORTS //\nexport default cneg;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Negate a complex number.\n*\n* @module @stdlib/math/base/complex/negate\n*\n* @example\n* var cneg = require( '@stdlib/math/base/complex/negate' );\n*\n* var v = cneg( -4.2, 5.5 );\n* // returns [ 4.2, -5.5 ]\n*\n* v = cneg( 0.0, 0.0 );\n* // returns [ -0.0, -0.0 ]\n*\n* v = cneg( NaN, NaN );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var cneg = require( '@stdlib/math/base/complex/negate' );\n*\n* var out = new Array( 2 );\n*\n* var v = cneg( out, -4.2, 5.5 );\n* // returns [ 4.2, -5.5 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\nvar cneg = __var_0__;\n\n\n// EXPORTS //\nexport default cneg;\n"]}