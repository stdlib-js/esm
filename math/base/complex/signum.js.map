{"version":3,"sources":["@stdlib/math/base/complex/signum/lib/csignum.js","@stdlib/math/base/complex/signum/lib/main.js","@stdlib/math/base/complex/signum/lib/index.js"],"names":["cabs","__var_0__","csignum","out","re","im","az","signum","arguments","length"],"mappings":"wBAsBA,IAAIA,EAAOC,EAiCX,SAASC,EAASC,EAAKC,EAAIC,GAC1B,IAAIC,EAAKN,EAAMI,EAAIC,GACnB,OAAY,IAAPC,GACJH,EAAK,GAAMC,EACXD,EAAK,GAAME,EACJF,IAERA,EAAK,GAAMC,EAAKE,EAChBH,EAAK,GAAME,EAAKC,EACTH,GC1CR,IAAII,EAASN,EAkCb,SAASC,EAASC,EAAKC,EAAIC,GAC1B,OAA0B,IAArBG,UAAUC,OACPF,EAAQ,CAAE,EAAK,GAAOJ,EAAKC,GAE5BG,EAAQJ,EAAKC,EAAIC,GCTtB,IAACH,EAAUD","sourcesContent":["import __var_0__ from '@stdlib/math/base/complex/abs';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar cabs = __var_0__;\n\n\n// MAIN //\n\n/**\n* Evaluates the signum function of a complex number.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @returns {(Array|TypedArray|Object)} function result\n*\n* @example\n* var out = new Array( 2 );\n*\n* var v = csignum( out, -4.2, 5.5 );\n* // returns [ -0.6069136033622302, 0.79476781392673 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = new Array( 2 );\n* var v = csignum( out, 0.0, 0.0 );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var out = new Array( 2 );\n* var v = csignum( out, NaN, NaN );\n* // returns [ NaN, NaN ]\n*/\nfunction csignum( out, re, im ) {\n\tvar az = cabs( re, im );\n\tif ( az === 0.0 ) {\n\t\tout[ 0 ] = re;\n\t\tout[ 1 ] = im;\n\t\treturn out;\n\t}\n\tout[ 0 ] = re / az;\n\tout[ 1 ] = im / az;\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default csignum;\n","import __var_0__ from './csignum.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar signum = __var_0__;\n\n\n// MAIN //\n\n/**\n* Evaluates the signum function of a complex number.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @returns {(Array|TypedArray|Object)} function result\n*\n* @example\n* var v = csignum( -4.2, 5.5 );\n* // returns [ -0.6069136033622302, 0.79476781392673 ]\n*\n* @example\n* var out = new Array( 2 );\n*\n* var v = csignum( out, -4.2, 5.5 );\n* // returns [ -0.6069136033622302, 0.79476781392673 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var v = csignum( 0.0, 0.0 );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var v = csignum( NaN, NaN );\n* // returns [ NaN, NaN ]\n*/\nfunction csignum( out, re, im ) {\n\tif ( arguments.length === 2 ) {\n\t\treturn signum( [ 0.0, 0.0 ], out, re );\n\t}\n\treturn signum( out, re, im );\n}\n\n\n// EXPORTS //\nexport default csignum;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the signum function of a complex number.\n*\n* @module @stdlib/math/base/complex/signum\n*\n* @example\n* var csignum = require( '@stdlib/math/base/complex/signum' );\n*\n* var v = csignum( -4.2, 5.5 );\n* // returns [ -0.6069136033622302, 0.79476781392673 ]\n*\n* v = csignum( 0.0, 0.0 );\n* // returns [ 0.0, 0.0 ]\n*\n* v = csignum( NaN, NaN );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var csignum = require( '@stdlib/math/base/complex/signum' );\n*\n* var out = new Array( 2 );\n*\n* var v = csignum( out, -4.2, 5.5 );\n* // returns [ -0.6069136033622302, 0.79476781392673 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\nvar csignum = __var_0__;\n\n\n// EXPORTS //\nexport default csignum;\n"]}