{"version":3,"sources":["@stdlib/math/base/complex/ceiln/lib/cceiln.js","@stdlib/math/base/complex/ceiln/lib/main.js","@stdlib/math/base/complex/ceiln/lib/index.js"],"names":["ceiln","__var_0__","cceiln","out","re","im","n","arguments","length"],"mappings":"qCAsBA,IAAIA,EAAQC,EAmCZ,SAASC,EAAQC,EAAKC,EAAIC,EAAIC,GAG7B,OAFAH,EAAK,GAAMH,EAAOI,EAAIE,GACtBH,EAAK,GAAMH,EAAOK,EAAIC,GACfH,ECtCR,IAAIH,EAAQC,EAmCZ,SAASC,EAAQC,EAAKC,EAAIC,EAAIC,GAC7B,OAA0B,IAArBC,UAAUC,OACPR,EAAO,CAAE,EAAK,GAAOG,EAAKC,EAAIC,GAE/BL,EAAOG,EAAKC,EAAIC,EAAIC,GCJzB,IAACJ,EAASD","sourcesContent":["import __var_0__ from '@stdlib/math/base/special/ceiln';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar ceiln = __var_0__;\n\n\n// MAIN //\n\n/**\n* Rounds a complex number to the nearest multiple of `10^n` toward positive infinity.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @param {integer} n - integer power of 10\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var out = new Array( 2 );\n* var v = cceiln( out, -3.141592653589793, 3.141592653589793, -2 );\n* // returns [ -3.14, 3.15 ]\n*\n* @example\n* var out = new Array( 2 );\n* var v = cceiln( out, 9.99999, 0.1, 0 );\n* // returns [ 10.0, 1.0 ]\n*\n* @example\n* var out = new Array( 2 );\n* var v = cceiln( out, 0.0, 0.0, -2 );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var out = new Array( 2 );\n* var v = cceiln( out, NaN, NaN, -2 );\n* // returns [ NaN, NaN ]\n*/\nfunction cceiln( out, re, im, n ) {\n\tout[ 0 ] = ceiln( re, n );\n\tout[ 1 ] = ceiln( im, n );\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default cceiln;\n","import __var_0__ from './cceiln.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar ceiln = __var_0__;\n\n\n// MAIN //\n\n/**\n* Rounds a complex number to the nearest multiple of `10^n` toward positive infinity.\n*\n* @param {(Array|TypedArray|Object)} [out] - output array\n* @param {number} re - real component\n* @param {number} im - imaginary component\n* @param {integer} n - integer power of 10\n* @returns {(Array|TypedArray|Object)} output array\n*\n* @example\n* var v = cceiln( -3.141592653589793, 3.141592653589793, -2 );\n* // returns [ -3.14, 3.15 ]\n*\n* @example\n* var out = new Array( 2 );\n*\n* var v = cceiln( out, 9.99999, 0.1, 0 );\n* // returns [ 10.0, 1.0 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var v = cceiln( 0.0, 0.0, -2 );\n* // returns [ 0.0, 0.0 ]\n*\n* @example\n* var v = cceiln( NaN, NaN, -2 );\n* // returns [ NaN, NaN ]\n*/\nfunction cceiln( out, re, im, n ) {\n\tif ( arguments.length === 3 ) {\n\t\treturn ceiln( [ 0.0, 0.0 ], out, re, im );\n\t}\n\treturn ceiln( out, re, im, n );\n}\n\n\n// EXPORTS //\nexport default cceiln;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a complex number to the nearest multiple of `10^n` toward positive infinity.\n*\n* @module @stdlib/math/base/complex/ceiln\n*\n* @example\n* var cceiln = require( '@stdlib/math/base/complex/ceiln' );\n*\n* // Round components to 2 decimal places:\n* var v = cceiln( -3.141592653589793, 3.141592653589793, -2 );\n* // returns [ -3.14, 3.15 ]\n*\n* // If n = 0, `cceiln` behaves like `cceil`:\n* v = cceiln( 9.99999, 0.1, 0 );\n* // returns [ 10.0, 1.0 ]\n*\n* // Round components to the nearest thousand:\n* v = cceiln( 12368.0, -12368.0, 3 );\n* // returns [ 13000.0, -12000.0 ]\n*\n* v = cceiln( NaN, NaN, 2 );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var cceiln = require( '@stdlib/math/base/complex/ceiln' );\n*\n* var out = new Array( 2 );\n*\n* var v = cceiln( out, -3.141592653589793, 3.141592653589793, -2 );\n* // returns [ -3.14, 3.15 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n\n// MODULES //\nvar cceiln = __var_0__;\n\n\n// EXPORTS //\nexport default cceiln;\n"]}