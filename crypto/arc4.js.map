{"version":3,"sources":["@stdlib/crypto/arc4/lib/swap.js","@stdlib/crypto/arc4/lib/ksa.js","@stdlib/crypto/arc4/lib/prga.js","@stdlib/crypto/arc4/lib/arc4.js","@stdlib/crypto/arc4/lib/index.js"],"names":["swap","arr","i","j","tmp","Uint8Array","__var_0__","__var_1__","NUM_BYTES","ksa","key","len","S","k","length","charCodeAt","prga","isString","isPrimitive","fromCodePoint","__var_2__","__var_3__","arc4","getByte","state","TypeError","str","out","b1","b2"],"mappings":"yHAoCA,SAASA,EAAMC,EAAKC,EAAGC,GACtB,IAAIC,EAAMH,EAAKC,GAGf,OAFAD,EAAKC,GAAMD,EAAKE,GAChBF,EAAKE,GAAMC,EACJH,ECjBR,IAAII,EAAaC,EACbN,EAAOO,EAKPC,EAAY,IA4BhB,SAASC,EAAKC,GACb,IAAIC,EACAC,EACAV,EACAC,EACAU,EAKJ,IAHAD,EAAI,IAAIP,EAAYG,GAGdN,EAAI,EAAGA,EAAIM,EAAWN,IAC3BU,EAAGV,GAAMA,EAKV,IAFAS,EAAMD,EAAII,OACVX,EAAI,EACED,EAAI,EAAGA,EAAIM,EAAWN,IAE3BW,EAAIH,EAAIK,WAAYb,EAAIS,GAGxBR,GAAKA,EAAIS,EAAEV,GAAKW,GAAKL,EAGrBR,EAAMY,EAAGV,EAAGC,GAEb,OAAOS,EC7DR,IAAIZ,EAAOM,EAYX,SAASU,EAAMJ,GACd,IAAID,EAAMC,EAAEE,OACRZ,EAAI,EACJC,EAAI,EAER,OAaA,WACC,IAAIU,EAUJ,OANAV,GAAKA,EAAIS,EADTV,GAAKA,EAAI,GAAKS,IACGA,EACjBX,EAAMY,EAAGV,EAAGC,GAGZU,GAAKD,EAAEV,GAAKU,EAAET,IAAMQ,EAEbC,EAAGC,ICtCZ,IAAII,EAAWX,EAAUY,YACrBC,EAAgBZ,EAChBE,EAAMW,EACNJ,EAAOK,EAsBX,SAASC,EAAMZ,GACd,IAAIa,EACAC,EACJ,IAAMP,EAAUP,GACf,MAAM,IAAIe,UAAW,8DAAgEf,EAAM,MAQ5F,OALAc,EAAQf,EAAKC,GAGba,EAAUP,EAAMQ,GAgBhB,SAAiBE,GAChB,IAAIC,EACAC,EACAC,EAEA3B,EACJ,IAAMe,EAAUS,GACf,MAAM,IAAID,UAAW,8DAAgEC,EAAM,MAG5F,IADAC,EAAM,GACAzB,EAAI,EAAGA,EAAIwB,EAAIZ,OAAQZ,IAE5B0B,EAAKF,EAAIX,WAAYb,GAGrB2B,EAAKN,IAMLI,GAAOR,EAHDS,EAAKC,GAKZ,OAAOF,GC5DN,IAACL,EAAOhB","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Swaps array elements. Note that elements are swapped in-place; i.e., the input array is mutated.\n*\n* @private\n* @param {(Array|TypedArray)} arr - input array\n* @param {uinteger32} i - element index\n* @param {uinteger32} j - element index\n* @returns {(Array|TypedArray)} input array\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n*\n* var out = swap( arr, 1, 2 );\n* // returns [ 1, 3, 2 ]\n*/\nfunction swap( arr, i, j ) {\n\tvar tmp = arr[ i ];\n\tarr[ i ] = arr[ j ];\n\tarr[ j ] = tmp;\n\treturn arr;\n}\n\n\n// EXPORTS //\nexport default swap;\n","import __var_0__ from '@stdlib/array/uint8';\nimport __var_1__ from './swap.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar Uint8Array = __var_0__;\nvar swap = __var_1__;\n\n\n// VARIABLES //\n\nvar NUM_BYTES = 256; // 2^8\n\n\n// MAIN //\n\n/**\n* Key-scheduling algorithm to initialize a permutation vector.\n*\n* ## Method\n*\n* 1.  Initialize a byte array `S` to the identity permutation.\n* 2.  Using a provided `key`, process `S` for `N` iterations, where `N` is the number of all possible bytes, to generate a vector permutation.\n*\n*\n* ## References\n*\n* -   See [Wikipedia][rc4].\n*\n* [rc4]: https://en.wikipedia.org/wiki/RC4\n*\n* @private\n* @param {string} key - key used to permute a byte array\n* @returns {Uint8Array} permuted byte array\n*\n* @example\n* var S = ksa( 'pwd12' );\n* // returns <Uint8Array>\n*/\nfunction ksa( key ) {\n\tvar len;\n\tvar S;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tS = new Uint8Array( NUM_BYTES );\n\n\t// Initialize a byte array to the identity permutation...\n\tfor ( i = 0; i < NUM_BYTES; i++ ) {\n\t\tS[ i ] = i;\n\t}\n\t// Generate a permutation using the provided key...\n\tlen = key.length;\n\tj = 0;\n\tfor ( i = 0; i < NUM_BYTES; i++ ) {\n\t\t// Get a value on the interval [0,255]:\n\t\tk = key.charCodeAt( i % len );\n\n\t\t// Compute the next index to swap:\n\t\tj = (j + S[i] + k) % NUM_BYTES;\n\n\t\t// Permute the byte array:\n\t\tswap( S, i, j );\n\t}\n\treturn S;\n}\n\n\n// EXPORTS //\nexport default ksa;\n","import __var_0__ from './swap.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar swap = __var_0__;\n\n\n// MAIN //\n\n/**\n* Returns a pseudorandom generation function (PRGA).\n*\n* @private\n* @param {Uint8Array} S - byte array\n* @returns {Function} pseudo-random generation function\n*/\nfunction prga( S ) {\n\tvar len = S.length;\n\tvar i = 0;\n\tvar j = 0;\n\n\treturn prga;\n\n\t/**\n\t* Returns a pseudorandom element from a permutation vector.\n\t*\n\t* ## Notes\n\t*\n\t* -   Each element of `S` is swapped with another element at least once every `N` iterations, where `N` is the length of `S`.\n\t*\n\t*\n\t* @private\n\t* @returns {uinteger8} pseudorandom element\n\t*/\n\tfunction prga() {\n\t\tvar k;\n\n\t\t// Modify the permutation vector state:\n\t\ti = (i + 1) % len;\n\t\tj = (j + S[i]) % len;\n\t\tswap( S, i, j );\n\n\t\t// Compute the index of the element to return:\n\t\tk = (S[i] + S[j]) % len;\n\n\t\treturn S[ k ];\n\t}\n}\n\n\n// EXPORTS //\nexport default prga;\n","import __var_0__ from '@stdlib/assert/is-string';\nimport __var_1__ from '@stdlib/string/from-code-point';\nimport __var_2__ from './ksa.js';\nimport __var_3__ from './prga.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\nvar fromCodePoint = __var_1__;\nvar ksa = __var_2__;\nvar prga = __var_3__;\n\n\n// MAIN //\n\n/**\n* Returns an (alleged) RC4 stream cipher.\n*\n*\n* @param {string} key - cipher key\n* @throws {TypeError} must provide a string primitive\n* @returns {Function} stream cipher\n*\n* @example\n* var encrypt = arc4( 'pwd12' );\n* var out = encrypt( 'beep boop bop' );\n* // returns '...'\n*\n* var decrypt = arc4( 'pwd12' );\n* var str = decrypt( out );\n* // returns 'beep boop bop'\n*/\nfunction arc4( key ) {\n\tvar getByte;\n\tvar state;\n\tif ( !isString( key ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a string primitive. Value: `' + key + '`.' );\n\t}\n\t// Initialize the cipher state:\n\tstate = ksa( key );\n\n\t// Generate a pseudorandom generation function:\n\tgetByte = prga( state );\n\n\treturn cipher;\n\n\t/**\n\t* Encrypts a provided string.\n\t*\n\t* @private\n\t* @param {string} str - string to encrypt\n\t* @throws {TypeError} must provide a string primitive\n\t* @returns {string} encrypted string\n\t*\n\t* @example\n\t* var out = cipher( 'beep boop bop' );\n\t* // returns '...'\n\t*/\n\tfunction cipher( str ) {\n\t\tvar out;\n\t\tvar b1;\n\t\tvar b2;\n\t\tvar ch;\n\t\tvar i;\n\t\tif ( !isString( str ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Must provide a string primitive. Value: `' + str + '`.' );\n\t\t}\n\t\tout = '';\n\t\tfor ( i = 0; i < str.length; i++ ) {\n\t\t\t// Get a Unicode code point from the provided string:\n\t\t\tb1 = str.charCodeAt( i );\n\n\t\t\t// Generate a pseudorandom byte:\n\t\t\tb2 = getByte();\n\n\t\t\t// Generate a new character code point:\n\t\t\tch = (b1 ^ b2); // bitwise XOR\n\n\t\t\t// Update the cipher text:\n\t\t\tout += fromCodePoint( ch );\n\t\t}\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\nexport default arc4;\n","import __var_0__ from './arc4.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an (alleged) RC4 stream cipher.\n*\n* @module @stdlib/crypto/arc4\n*\n* @example\n* var arc4 = require( '@stdlib/crypto/arc4' );\n*\n* var encrypt = arc4( 'pwd12' );\n* var out = encrypt( 'beep boop bop' );\n* // returns '...'\n*\n* var decrypt = arc4( 'pwd12' );\n* var str = decrypt( out );\n* // returns 'beep boop bop'\n*/\n\n// MODULES //\nvar arc4 = __var_0__;\n\n\n// EXPORTS //\nexport default arc4;\n"]}