{"version":3,"sources":["@stdlib/constants/math/float16-ninf/lib/index.js"],"names":["Number","__var_0__","FLOAT16_NINF","NEGATIVE_INFINITY"],"mappings":"sCAiCA,IAAIA,EAASC,EAuBTC,EAAeF,EAAOG","sourcesContent":["import __var_0__ from '@stdlib/number/ctor';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Half-precision floating-point negative infinity.\n*\n* @module @stdlib/constants/math/float16-ninf\n* @type {number}\n*\n* @example\n* var FLOAT16_NINF = require( '@stdlib/constants/math/float16-ninf' );\n* // returns -infinity\n*/\n\n// MODULES //\nvar Number = __var_0__;\n\n\n// MAIN //\n\n/**\n* Half-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Half-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111 0000000000\n* ```\n*\n* This bit sequence corresponds to the unsigned 16-bit integer `64512` and to the HEX value `0xfc00`.\n*\n* @constant\n* @type {number}\n* @default -infinity\n* @see [half-precision floating-point format]{@link https://en.wikipedia.org/wiki/Half-precision_floating-point_format}\n*/\nvar FLOAT16_NINF = Number.NEGATIVE_INFINITY; // TODO: if, and when, float16 is natively available, assign the true constant; otherwise, fall back to float64\n\n\n// EXPORTS //\nexport default FLOAT16_NINF;\n"]}