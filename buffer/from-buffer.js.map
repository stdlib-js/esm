{"version":3,"sources":["@stdlib/buffer/from-buffer/lib/has_from.js","@stdlib/buffer/from-buffer/lib/main.js","@stdlib/buffer/from-buffer/lib/polyfill.js","@stdlib/buffer/from-buffer/lib/index.js"],"names":["isFunction","__var_0__","Buffer","__var_1__","bool","from","isBuffer","fromBuffer","buffer","TypeError","copyBuffer","hasFrom","main","polyfill","__var_2__","copyBuffer$1"],"mappings":"2GAuBA,IAAIA,EAAaC,EACbC,EAASC,EAKTC,EAAOJ,EAAYE,EAAOG,MCN1BC,EAAWL,EACXC,EAASC,EAqBb,SAASI,EAAYC,GACpB,IAAMF,EAAUE,GACf,MAAM,IAAIC,UAAW,oDAAsDD,EAAS,KAErF,OAAON,EAAOG,KAAMG,GC1BrB,IAAIF,EAAWL,EACXC,EAASC,EAqBb,SAASI,EAAYC,GACpB,IAAMF,EAAUE,GACf,MAAM,IAAIC,UAAW,oDAAsDD,EAAS,KAErF,OAAO,IAAIN,EAAQM,GCTpB,IAOIE,EAPAC,EAAUV,EACVW,EAAOT,EACPU,EAAWC,EAcfC,EAPCL,EADIC,EACSC,EAEAC","sourcesContent":["import __var_0__ from '@stdlib/assert/is-function';\nimport __var_1__ from '@stdlib/buffer/ctor';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\nvar Buffer = __var_1__;\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.from );\n\n\n// EXPORTS //\nexport default bool;\n","import __var_0__ from '@stdlib/assert/is-buffer';\nimport __var_1__ from '@stdlib/buffer/ctor';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isBuffer = __var_0__;\nvar Buffer = __var_1__;\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a Buffer. Value: `' + buffer + '`' );\n\t}\n\treturn Buffer.from( buffer );\n}\n\n\n// EXPORTS //\nexport default fromBuffer;\n","import __var_0__ from '@stdlib/assert/is-buffer';\nimport __var_1__ from '@stdlib/buffer/ctor';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isBuffer = __var_0__;\nvar Buffer = __var_1__;\n\n\n// MAIN //\n\n/**\n* Copies buffer data to a new `Buffer` instance.\n*\n* @param {Buffer} buffer - buffer from which to copy\n* @throws {TypeError} must provide a `Buffer` instance\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = fromBuffer( b1 );\n* // returns <Buffer>\n*/\nfunction fromBuffer( buffer ) {\n\tif ( !isBuffer( buffer ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a Buffer. Value: `' + buffer + '`' );\n\t}\n\treturn new Buffer( buffer ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\nexport default fromBuffer;\n","import __var_0__ from './has_from.js';\nimport __var_1__ from './main.js';\nimport __var_2__ from './polyfill.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Copy buffer data to a new `Buffer` instance.\n*\n* @module @stdlib/buffer/from-buffer\n*\n* @example\n* var fromArray = require( '@stdlib/buffer/from-array' );\n* var copyBuffer = require( '@stdlib/buffer/from-buffer' );\n*\n* var b1 = fromArray( [ 1, 2, 3, 4 ] );\n* // returns <Buffer>\n*\n* var b2 = copyBuffer( b1 );\n* // returns <Buffer>\n*/\n\n// MODULES //\nvar hasFrom = __var_0__;\nvar main = __var_1__;\nvar polyfill = __var_2__;\n\n\n// MAIN //\n\nvar copyBuffer;\nif ( hasFrom ) {\n\tcopyBuffer = main;\n} else {\n\tcopyBuffer = polyfill;\n}\n\n\n// EXPORTS //\nexport default copyBuffer;\n"]}