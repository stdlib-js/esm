{"version":3,"sources":["@stdlib/string/reverse/lib/main.js","@stdlib/string/reverse/lib/index.js"],"names":["isString","__var_0__","isPrimitive","replace","__var_1__","RE_COMBINING_MARKS","RE_SURROGATE_PAIR","onCombiningMark","match","p1","p2","reverse","str","out","i","TypeError","length","push","charAt","join","reverseString"],"mappings":"oEAuBA,IAAIA,EAAWC,EAAUC,YACrBC,EAAUC,EAKVC,EAAqB,6QACrBC,EAAoB,sCAcxB,SAASC,EAAiBC,EAAOC,EAAIC,GAEpC,OAAOC,EAASD,GAAOD,EA6BxB,SAASE,EAASC,GACjB,IAAIC,EACAC,EACJ,IAAMd,EAAUY,GACf,MAAM,IAAIG,UAAW,wEAA0EH,EAAM,MAEtG,GAAa,KAARA,EACJ,MAAO,GAUR,IAPAA,EAAMT,EAASS,EAAKP,EAAoBE,GAMxCM,EAAM,GACAC,GAJNF,EAAMT,EAASS,EAAKN,EAAmB,SAIzBU,OAAO,EAAGF,GAAK,EAAGA,IAC/BD,EAAII,KAAML,EAAIM,OAAQJ,IAEvB,OAAOD,EAAIM,KAAM,IC1Df,IAACC,EAAgBnB","sourcesContent":["import __var_0__ from '@stdlib/assert/is-string';\nimport __var_1__ from '@stdlib/string/replace';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\nvar replace = __var_1__;\n\n\n// VARIABLES //\n\nvar RE_COMBINING_MARKS = /([\\0-\\u02FF\\u0370-\\u1AAF\\u1B00-\\u1DBF\\u1E00-\\u20CF\\u2100-\\uD7FF\\uE000-\\uFE1F\\uFE30-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])([\\u0300-\\u036F\\u1AB0-\\u1AFF\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F]+)/g; // eslint-disable-line no-misleading-character-class\nvar RE_SURROGATE_PAIR = /([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Callback invoked for swapping symbols with their combining marks.\n*\n* @private\n* @param {string} match - match\n* @param {string} p1 - first capture group\n* @param {string} p2 - second capture group\n* @returns {string} updated string\n*/\nfunction onCombiningMark( match, p1, p2 ) {\n\t// Reverse combined marks in order for the marks to be in the same order after subsequent reversing...\n\treturn reverse( p2 ) + p1;\n}\n\n\n// MAIN //\n\n/**\n* Reverses a string.\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} reversed string\n*\n* @example\n* var out = reverse( 'last man standing' );\n* // returns 'gnidnats nam tsal'\n*\n* @example\n* var out = reverse( 'presidential election' );\n* // returns 'noitcele laitnediserp'\n*\n* @example\n* var out = reverse( 'javaScript' );\n* // returns 'tpircSavaj'\n*\n* @example\n* var out = reverse( 'Hidden Treasures' );\n* // returns 'serusaerT neddiH'\n*/\nfunction reverse( str ) {\n\tvar out;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be a string primitive. Value: `' + str + '`.' );\n\t}\n\tif ( str === '' ) {\n\t\treturn '';\n\t}\n\t// Swap symbols with their combing marks:\n\tstr = replace( str, RE_COMBINING_MARKS, onCombiningMark );\n\n\t// Swap high and low surrogates so that low surrogates appear first:\n\tstr = replace( str, RE_SURROGATE_PAIR, '$2$1' );\n\n\t// Reverse the string code units...\n\tout = [];\n\tfor ( i = str.length-1; i >= 0; i-- ) {\n\t\tout.push( str.charAt( i ) );\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\nexport default reverse;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reverse a string.\n*\n* @module @stdlib/string/reverse\n*\n* @example\n* var reverseString = require( '@stdlib/string/reverse' );\n*\n* var out = reverseString( 'last man standing' );\n* // returns 'gnidnats nam tsal'\n*\n* out = reverseString( 'Hidden Treasures' );\n* // returns 'serusaerT neddiH';\n*/\n\n// MODULES //\nvar reverseString = __var_0__;\n\n\n// EXPORTS //\nexport default reverseString;\n"]}