{"version":3,"sources":["@stdlib/string/remove-words/lib/remove_words.js","@stdlib/string/remove-words/lib/index.js"],"names":["isStringArray","__var_0__","uppercase","__var_1__","isBoolean","__var_2__","isPrimitive","isString","__var_3__","tokenize","__var_4__","removeWords","str","words","ignoreCase","tokens","token","list","flg","out","N","i","j","TypeError","arguments","length","slice","push","join"],"mappings":"iMA0BA,IAAIA,EAAgBC,EAChBC,EAAYC,EACZC,EAAYC,EAAUC,YACtBC,EAAWC,EAAUF,YACrBG,EAAWC,EA0Bf,SAASC,EAAaC,EAAKC,EAAOC,GACjC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAMf,EAAUK,GACf,MAAM,IAAIW,UAAW,wEAA0EX,EAAM,MAEtG,IAAMZ,EAAea,GACpB,MAAM,IAAIU,UAAW,0EAA4EV,EAAQ,MAE1G,GAAKW,UAAUC,OAAS,IACjBrB,EAAWU,GAChB,MAAM,IAAIS,UAAW,yEAA2ET,EAAa,MAM/G,GAHAC,EAASN,EAAUG,GAAK,GACxBQ,EAAIP,EAAMY,OACVN,EAAM,GACDL,EAAa,CAEjB,IADAG,EAAOJ,EAAMa,QACPL,EAAI,EAAGA,EAAID,EAAGC,IACnBJ,EAAMI,GAAMnB,EAAWe,EAAMI,IAE9B,IAAMA,EAAI,EAAGA,EAAIN,EAAOU,OAAQJ,IAAM,CAGrC,IAFAH,GAAM,EACNF,EAAQd,EAAWa,EAAQM,IACrBC,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAKL,EAAMK,KAAQN,EAAQ,CAC1BE,GAAM,EACN,MAGGA,GACJC,EAAIQ,KAAMZ,EAAQM,IAGpB,OAAOF,EAAIS,KAAM,IAGlB,IAAMP,EAAI,EAAGA,EAAIN,EAAOU,OAAQJ,IAAM,CAGrC,IAFAL,EAAQD,EAAQM,GAChBH,GAAM,EACAI,EAAI,EAAGA,EAAIF,EAAGE,IACnB,GAAKT,EAAOS,KAAQN,EAAQ,CAC3BE,GAAM,EACN,MAGGA,GACJC,EAAIQ,KAAMX,GAGZ,OAAOG,EAAIS,KAAM,ICzEf,IAACjB,EAAcV","sourcesContent":["import __var_0__ from '@stdlib/assert/is-string-array';\nimport __var_1__ from '@stdlib/string/uppercase';\nimport __var_2__ from '@stdlib/assert/is-boolean';\nimport __var_3__ from '@stdlib/assert/is-string';\nimport __var_4__ from '@stdlib/nlp/tokenize';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isStringArray = __var_0__;\nvar uppercase = __var_1__;\nvar isBoolean = __var_2__.isPrimitive;\nvar isString = __var_3__.isPrimitive;\nvar tokenize = __var_4__;\n\n\n// MAIN //\n\n/**\n* Removes a list of words from a string.\n*\n* @param {string} str - input string\n* @param {StringArray} words - array of words to be removed\n* @param {boolean} [ignoreCase=false] - boolean indicating whether to perform a case-insensitive operation\n* @throws {TypeError} first argument must be a string primitive\n* @throws {TypeError} second argument must be an array of strings\n* @throws {TypeError} third argument must be a boolean primitive\n* @returns {string} output string\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ] );\n* // returns 'beep  Foo bar'\n*\n* @example\n* var str = 'beep boop Foo bar';\n* var out = removeWords( str, [ 'boop', 'foo' ], true );\n* // returns 'beep   bar'\n*/\nfunction removeWords( str, words, ignoreCase ) {\n\tvar tokens;\n\tvar token;\n\tvar list;\n\tvar flg;\n\tvar out;\n\tvar N;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be a string primitive. Value: `' + str + '`.' );\n\t}\n\tif ( !isStringArray( words ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be an array of strings. Value: `' + words + '`.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isBoolean( ignoreCase ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Third argument must be a boolean primitive. Value: `' + ignoreCase + '`.' );\n\t\t}\n\t}\n\ttokens = tokenize( str, true );\n\tN = words.length;\n\tout = [];\n\tif ( ignoreCase ) {\n\t\tlist = words.slice();\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tlist[ i ] = uppercase( list[ i ] );\n\t\t}\n\t\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\t\tflg = true;\n\t\t\ttoken = uppercase( tokens[ i ] );\n\t\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\t\tif ( list[ j ] === token ) {\n\t\t\t\t\tflg = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( flg ) {\n\t\t\t\tout.push( tokens[ i ] );\n\t\t\t}\n\t\t}\n\t\treturn out.join( '' );\n\t}\n\t// Case: case-sensitive\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tflg = true;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( words[ j ] === token ) {\n\t\t\t\tflg = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( flg ) {\n\t\t\tout.push( token );\n\t\t}\n\t}\n\treturn out.join( '' );\n}\n\n\n// EXPORTS //\nexport default removeWords;\n","import __var_0__ from './remove_words.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove a list of words from a string.\n*\n* @module @stdlib/string/remove-words\n*\n* @example\n* var removeWords = require( '@stdlib/string/remove-words' );\n*\n* var str = 'beep boop Foo bar';\n* var words = [ 'boop', 'foo' ];\n*\n* var out = removeWords( str, words );\n* // returns 'beep  Foo bar'\n*\n* // Case-insensitive:\n* out = removeWords( str, words, true )\n* //returns 'beep   bar'\n*/\n\n// MODULES //\nvar removeWords = __var_0__;\n\n\n// EXPORTS //\nexport default removeWords;\n"]}