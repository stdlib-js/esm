{"version":3,"sources":["@stdlib/string/remove-utf8-bom/lib/remove_utf_8_bom.js","@stdlib/string/remove-utf8-bom/lib/index.js"],"names":["isString","__var_0__","isPrimitive","BOM","removeUTF8BOM","str","TypeError","charCodeAt","slice"],"mappings":"wCAsBA,IAAIA,EAAWC,EAAUC,YAMrBC,EAAM,MAyBV,SAASC,EAAeC,GACvB,IAAML,EAAUK,GACf,MAAM,IAAIC,UAAW,8DAAgED,EAAM,MAE5F,OAAKA,EAAIE,WAAY,KAAQJ,EACrBE,EAAIG,MAAO,GAEZH,EC1BL,IAACD,EAAgBH","sourcesContent":["import __var_0__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\n\n\n// VARIABLES //\n\n// '\\ufeff' => 1111111011111111 => 0xFEFF => 65279\nvar BOM = 65279;\n\n\n// MAIN //\n\n/**\n* Removes a UTF-8 byte order mark (BOM) from the beginning of a string.\n*\n* ## Notes\n*\n* -   A UTF-8 byte order mark ([BOM][1]) is the byte sequence `0xEF,0xBB,0xBF`.\n* -   To convert a UTF-8 encoded `Buffer` to a `string`, the `Buffer` must be converted to [UTF-16][2]. The BOM thus gets converted to the single 16-bit code point `'\\ufeff'` (UTF-16 BOM).\n*\n* [1]: https://en.wikipedia.org/wiki/Byte_order_mark#UTF-8\n* [2]: http://es5.github.io/#x4.3.16\n*\n*\n* @param {string} str - input string\n* @throws {TypeError} must provide a string primitive\n* @returns {string} string with BOM removed\n*\n* @example\n* var str = removeUTF8BOM( '\\ufeffbeep' );\n* // returns 'beep'\n*/\nfunction removeUTF8BOM( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a string primitive. Value: `' + str + '`.' );\n\t}\n\tif ( str.charCodeAt( 0 ) === BOM ) {\n\t\treturn str.slice( 1 );\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\nexport default removeUTF8BOM;\n","import __var_0__ from './remove_utf_8_bom.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Remove a UTF-8 byte order mark (BOM) from the beginning of a string.\n*\n* @module @stdlib/string/remove-utf8-bom\n*\n* @example\n* var removeUTF8BOM = require( '@stdlib/string/remove-utf8-bom' );\n*\n* var str = removeUTF8BOM( '\\ufeffbeep' );\n* // returns 'beep'\n*/\n\n// MODULES //\nvar removeUTF8BOM = __var_0__;\n\n\n// EXPORTS //\nexport default removeUTF8BOM;\n"]}