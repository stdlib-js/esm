{"version":3,"sources":["@stdlib/iter/map/lib/main.js","@stdlib/iter/map/lib/index.js"],"names":["setReadOnly","__var_0__","isFunction","__var_1__","isIteratorLike","__var_2__","hasOwnProp","__var_3__","iteratorSymbol","__var_4__","iterMap","iterator","fcn","thisArg","iter","FLG","i","TypeError","out","v","done","next","value","call","arguments","length"],"mappings":"oPA0BA,IAAIA,EAAcC,EACdC,EAAaC,EACbC,EAAiBC,EACjBC,EAAaC,EACbC,EAAiBC,EAmCrB,SAASC,EAASC,EAAUC,EAAKC,GAChC,IAAIC,EACAC,EACAC,EACJ,IAAMZ,EAAgBO,GACrB,MAAM,IAAIM,UAAW,2FAA6FN,EAAW,MAE9H,IAAMT,EAAYU,GACjB,MAAM,IAAIK,UAAW,iEAAmEL,EAAM,MAa/F,OAXAI,GAAK,EAILhB,EADAc,EAAO,GACY,QAenB,WACC,IAAII,EACAC,EACJ,GAAKJ,EACJ,MAAO,CACNK,MAAQ,GAKV,GAFAD,EAAIR,EAASU,OACbL,GAAK,EACAG,EAAEC,KAON,OANAL,GAAM,EACNG,EAAM,GACDZ,EAAYa,EAAG,WACnBD,EAAII,MAAQV,EAAIW,KAAMV,EAASM,EAAEG,MAAON,IAEzCE,EAAIE,MAAO,EACJF,EAER,MAAO,CACNI,MAASV,EAAIW,KAAMV,EAASM,EAAEG,MAAON,GACrCI,MAAQ,MAnCVpB,EAAac,EAAM,UA8CnB,SAAcQ,GAEb,GADAP,GAAM,EACDS,UAAUC,OACd,MAAO,CACNH,MAASA,EACTF,MAAQ,GAGV,MAAO,CACNA,MAAQ,MApDLZ,GAAkBN,EAAYS,EAAUH,KAC5CR,EAAac,EAAMN,GA6DpB,WACC,OAAOE,EAASC,EAAUH,KAAoBI,EAAKC,MA5D7CC,ECrCL,IAACJ,EAAUT","sourcesContent":["import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/assert/is-function';\nimport __var_2__ from '@stdlib/assert/is-iterator-like';\nimport __var_3__ from '@stdlib/assert/has-own-property';\nimport __var_4__ from '@stdlib/symbol/iterator';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar isFunction = __var_1__;\nvar isIteratorLike = __var_2__;\nvar hasOwnProp = __var_3__;\nvar iteratorSymbol = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* function transform( v ) {\n*     return v * 10.0;\n* }\n*\n* var iter = iterMap( randu(), transform );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterMap( iterator, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `' + iterator + '`.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `' + fcn + '`.' );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\ti += 1;\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\tout = {};\n\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\tout.value = fcn.call( thisArg, v.value, i );\n\t\t\t}\n\t\t\tout.done = true;\n\t\t\treturn out;\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, v.value, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterMap( iterator[ iteratorSymbol ](), fcn, thisArg );\n\t}\n}\n\n\n// EXPORTS //\nexport default iterMap;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which invokes a function for each iterated value.\n*\n* @module @stdlib/iter/map\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterMap = require( '@stdlib/iter/map' );\n*\n* function transform( v ) {\n*     return v * 10.0;\n* }\n*\n* var iter = iterMap( randu(), transform );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\nvar iterMap = __var_0__;\n\n\n// EXPORTS //\nexport default iterMap;\n"]}