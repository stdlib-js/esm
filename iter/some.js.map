{"version":3,"sources":["@stdlib/iter/some/lib/main.js","@stdlib/iter/some/lib/index.js"],"names":["isIteratorLike","__var_0__","isPositiveInteger","__var_1__","isPrimitive","iterSome","iterator","n","count","v","TypeError","next","value","done"],"mappings":"iGAuBA,IAAIA,EAAiBC,EACjBC,EAAoBC,EAAUC,YAsBlC,SAASC,EAAUC,EAAUC,GAC5B,IAAIC,EACAC,EACJ,IAAMT,EAAgBM,GACrB,MAAM,IAAII,UAAW,iEAAiEJ,EAAS,MAEhG,IAAMJ,EAAmBK,GACxB,MAAM,IAAIG,UAAW,yEAAyEH,EAAE,MAGjG,IADAC,EAAQ,IACO,CAEd,IADAC,EAAIH,EAASK,QACNC,QACNJ,GAAS,KACMD,EACd,OAAO,EAGT,GAAKE,EAAEI,KACN,MAGF,OAAO,EC/BL,IAACR,EAAWJ","sourcesContent":["import __var_0__ from '@stdlib/assert/is-iterator-like';\nimport __var_1__ from '@stdlib/assert/is-positive-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isIteratorLike = __var_0__;\nvar isPositiveInteger = __var_1__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests whether at least `n` iterated values are truthy.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - minimum number of truthy elements\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a positive integer\n* @returns {boolean} boolean indicating whether at least `n` iterated values are truthy\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var bool = iterSome( it, 3 );\n* // returns true\n*/\nfunction iterSome( iterator, n ) {\n\tvar count;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an iterator. Value: `'+iterator+'`.' );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a positive integer. Value: `'+n+'`.' );\n\t}\n\tcount = 0;\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.value ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\nexport default iterSome;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether at least `n` iterated values are truthy.\n*\n* @module @stdlib/iter/some\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterSome = require( '@stdlib/iter/some' );\n*\n* var it = array2iterator( [ 0, 0, 1, 1, 1 ] );\n*\n* var bool = iterSome( it, 3 );\n* // returns true\n*/\n\n// MODULES //\nvar iterSome = __var_0__;\n\n\n// EXPORTS //\nexport default iterSome;\n"]}