{"version":3,"sources":["@stdlib/iter/last/lib/main.js","@stdlib/iter/last/lib/index.js"],"names":["isIteratorLike","__var_0__","hasOwnProp","__var_1__","iterLast","iterator","last","v","TypeError","next","done","value"],"mappings":"8FAuBA,IAAIA,EAAiBC,EACjBC,EAAaC,EAoBjB,SAASC,EAAUC,GAClB,IAAIC,EACAC,EACJ,IAAMP,EAAgBK,GACrB,MAAM,IAAIG,UAAW,uDAAuDH,EAAS,MAEtF,OAAe,CAEd,IADAE,EAAIF,EAASI,QACNC,KAAO,CACb,GAAKR,EAAYK,EAAG,SACnB,OAAOA,EAAEI,MAEV,MAEDL,EAAOC,EAAEI,MAEV,OAAOL,ECvBL,IAACF,EAAWH","sourcesContent":["import __var_0__ from '@stdlib/assert/is-iterator-like';\nimport __var_1__ from '@stdlib/assert/has-own-property';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isIteratorLike = __var_0__;\nvar hasOwnProp = __var_1__;\n\n\n// MAIN //\n\n/**\n* Consumes an iterator and returns the last iterated value.\n*\n* @param {Iterator} iterator - input iterator\n* @throws {TypeError} must provide an iterator\n* @returns {*} last iterated value\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLast( it );\n* // returns 1\n*/\nfunction iterLast( iterator ) {\n\tvar last;\n\tvar v;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide an iterator. Value: `'+iterator+'`.' );\n\t}\n\twhile ( true ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\treturn v.value;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tlast = v.value;\n\t}\n\treturn last;\n}\n\n\n// EXPORTS //\nexport default iterLast;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Consume an iterator and return the last iterated value.\n*\n* @module @stdlib/iter/last\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterLast = require( '@stdlib/iter/last' );\n*\n* var it = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var v = iterLast( it );\n* // returns 1\n*/\n\n// MODULES //\nvar iterLast = __var_0__;\n\n\n// EXPORTS //\nexport default iterLast;\n"]}