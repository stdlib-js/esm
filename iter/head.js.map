{"version":3,"sources":["@stdlib/iter/head/lib/main.js","@stdlib/iter/head/lib/index.js"],"names":["setReadOnly","__var_0__","isPositiveInteger","__var_1__","isPrimitive","isFunction","__var_2__","isIteratorLike","__var_3__","hasOwnProp","__var_4__","iteratorSymbol","__var_5__","iterHead","iterator","n","iter","FLG","i","TypeError","out","v","done","next","value","arguments","length"],"mappings":"sSA2BA,IAAIA,EAAcC,EACdC,EAAoBC,EAAUC,YAC9BC,EAAaC,EACbC,EAAiBC,EACjBC,EAAaC,EACbC,EAAiBC,EA8BrB,SAASC,EAAUC,EAAUC,GAC5B,IAAIC,EACAC,EACAC,EACJ,IAAMX,EAAgBO,GACrB,MAAM,IAAIK,UAAW,2FAA6FL,EAAW,MAE9H,IAAMZ,EAAmBa,GACxB,MAAM,IAAII,UAAW,yEAA2EJ,EAAI,MAarG,OAXAG,EAAI,EAIJlB,EADAgB,EAAO,GACY,QAenB,WACC,IAAII,EACAC,EAEJ,GADAH,GAAK,EACAD,GAAOC,EAAIH,EACf,MAAO,CACNO,MAAQ,GAIV,IADAD,EAAIP,EAASS,QACND,KAON,OANAL,GAAM,EACNG,EAAM,GACDX,EAAYY,EAAG,WACnBD,EAAII,MAAQH,EAAEG,OAEfJ,EAAIE,MAAO,EACJF,EAER,MAAO,CACNI,MAASH,EAAEG,MACXF,MAAQ,MAnCVtB,EAAagB,EAAM,UA8CnB,SAAcQ,GAEb,GADAP,GAAM,EACDQ,UAAUC,OACd,MAAO,CACNF,MAASA,EACTF,MAAQ,GAGV,MAAO,CACNA,MAAQ,MApDLX,GAAkBN,EAAYS,EAAUH,KAC5CX,EAAagB,EAAML,GA6DpB,WACC,OAAOE,EAAUC,EAAUH,KAAoBI,MA5DzCC,ECtCL,IAACH,EAAWZ","sourcesContent":["import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/assert/is-positive-integer';\nimport __var_2__ from '@stdlib/assert/is-function';\nimport __var_3__ from '@stdlib/assert/is-iterator-like';\nimport __var_4__ from '@stdlib/assert/has-own-property';\nimport __var_5__ from '@stdlib/symbol/iterator';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar isPositiveInteger = __var_1__.isPrimitive;\nvar isFunction = __var_2__;\nvar isIteratorLike = __var_3__;\nvar hasOwnProp = __var_4__;\nvar iteratorSymbol = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the first `n` values of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of values\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterHead( iterator, n ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `' + iterator + '`.' );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( 'invalid argument. Second argument must be a positive integer. Value: `' + n + '`.' );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\tout = {};\n\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\tout.value = v.value;\n\t\t\t}\n\t\t\tout.done = true;\n\t\t\treturn out;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterHead( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\nexport default iterHead;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the first `n` values of a provided iterator.\n*\n* @module @stdlib/iter/head\n*\n* @example\n* var randu = require( '@stdlib/random/iter/randu' );\n* var iterHead = require( '@stdlib/iter/head' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\nvar iterHead = __var_0__;\n\n\n// EXPORTS //\nexport default iterHead;\n"]}