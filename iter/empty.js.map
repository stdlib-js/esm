{"version":3,"sources":["@stdlib/iter/empty/lib/main.js","@stdlib/iter/empty/lib/index.js"],"names":["setReadOnly","__var_0__","iteratorSymbol","__var_1__","iterEmpty","iter","done","value","arguments","length","iterator"],"mappings":"4GAuBA,IAAIA,EAAcC,EACdC,EAAiBC,EAgBrB,SAASC,IACR,IAAIC,EAWJ,OAPAL,EADAK,EAAO,GACY,QAenB,WACC,MAAO,CACNC,MAAQ,MAhBVN,EAAaK,EAAM,UA2BnB,SAAcE,GACb,GAAKC,UAAUC,OACd,MAAO,CACNF,MAASA,EACTD,MAAQ,GAGV,MAAO,CACNA,MAAQ,MAhCLJ,GACJF,EAAaK,EAAMH,GAyCpB,WACC,OAAOE,OAxCDC,EChBL,IAACK,EAAWT","sourcesContent":["import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/symbol/iterator';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar iteratorSymbol = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns an empty iterator.\n*\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = iterEmpty();\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterEmpty() {\n\tvar iter;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterEmpty();\n\t}\n}\n\n\n// EXPORTS //\nexport default iterEmpty;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an empty iterator.\n*\n* @module @stdlib/iter/empty\n*\n* @example\n* var iterEmpty = require( '@stdlib/iter/empty' );\n*\n* var iter = iterEmpty();\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\nvar iterator = __var_0__;\n\n\n// EXPORTS //\nexport default iterator;\n"]}