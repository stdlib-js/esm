{"version":3,"sources":["@stdlib/iter/pop/lib/main.js","@stdlib/iter/pop/lib/index.js"],"names":["setReadOnly","__var_0__","isFunction","__var_1__","isIteratorLike","__var_2__","hasOwnProp","__var_3__","iteratorSymbol","__var_4__","noop","__var_5__","iterPop","iterator","clbk","thisArg","last","iter","FLG","cb","i","TypeError","arguments","length","next","end","factory","out","v","done","call","value"],"mappings":"sRA2BA,IAAIA,EAAcC,EACdC,EAAaC,EACbC,EAAiBC,EACjBC,EAAaC,EACbC,EAAiBC,EACjBC,EAAOC,EA0BX,SAASC,EAASC,EAAUC,EAAMC,GACjC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMhB,EAAgBS,GACrB,MAAM,IAAIQ,UAAW,2FAA6FR,EAAW,MAE9H,GAAKS,UAAUC,OAAS,EAAI,CAC3B,IAAMrB,EAAYY,GACjB,MAAM,IAAIO,UAAW,iEAAmEP,EAAO,MAEhGK,EAAKL,OAELK,EAAKT,EAaN,OAXAU,EAAI,EAIJpB,EADAiB,EAAO,GACY,OAAQO,GAC3BxB,EAAaiB,EAAM,SAAUQ,GAGxBjB,GAAkBN,EAAYW,EAAUL,KAC5CR,EAAaiB,EAAMT,EAAgBkB,GAE7BT,EAQP,SAASO,IACR,IAAIG,EACAC,EACJ,OAAKV,EACG,CACNW,MAAQ,IAGVD,EAAIf,EAASW,OACF,IAANJ,GACJA,GAAK,EACAQ,EAAEC,MACNX,GAAM,EACDZ,EAAYsB,EAAG,UACnBT,EAAGW,KAAMf,EAASa,EAAEG,OAEd,CACNF,MAAQ,KAGVb,EAAOY,EAAEG,MACFP,MAEHI,EAAEC,MACNX,GAAM,EACNS,EAAM,GACDrB,EAAYsB,EAAG,UACnBT,EAAGW,KAAMf,EAASa,EAAEG,OACpBJ,EAAII,MAAQf,EACZW,EAAIE,MAAO,IAEXV,EAAGW,KAAMf,EAASC,GAClBW,EAAIE,MAAO,GAELF,IAERA,EAAM,CACLI,MAASf,EACTa,MAAQ,GAETb,EAAOY,EAAEG,MACFJ,IAUR,SAASF,EAAKM,GAEb,OADAb,GAAM,EACDI,UAAUC,OACP,CACNQ,MAASA,EACTF,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASH,IACR,OAAOd,EAASC,EAAUL,KAAoBW,EAAIJ,IC7HjD,IAACH,EAAUX","sourcesContent":["import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/assert/is-function';\nimport __var_2__ from '@stdlib/assert/is-iterator-like';\nimport __var_3__ from '@stdlib/assert/has-own-property';\nimport __var_4__ from '@stdlib/symbol/iterator';\nimport __var_5__ from '@stdlib/utils/noop';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar isFunction = __var_1__;\nvar isIteratorLike = __var_2__;\nvar hasOwnProp = __var_3__;\nvar iteratorSymbol = __var_4__;\nvar noop = __var_5__;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which skips the last value of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} [clbk] - callback to invoke with the skipped value\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var iter = iterPop( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\nfunction iterPop( iterator, clbk, thisArg ) {\n\tvar last;\n\tvar iter;\n\tvar FLG;\n\tvar cb;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `' + iterator + '`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t\tcb = clbk;\n\t} else {\n\t\tcb = noop;\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator` and the provided iterator is iterable, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar out;\n\t\tvar v;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( i === 0 ) {\n\t\t\ti += 1;\n\t\t\tif ( v.done ) {\n\t\t\t\tFLG = true;\n\t\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\t\tcb.call( thisArg, v.value );\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\t\t\tlast = v.value;\n\t\t\treturn next();\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\tout = {};\n\t\t\tif ( hasOwnProp( v, 'value' ) ) {\n\t\t\t\tcb.call( thisArg, v.value );\n\t\t\t\tout.value = last;\n\t\t\t\tout.done = false;\n\t\t\t} else {\n\t\t\t\tcb.call( thisArg, last );\n\t\t\t\tout.done = true;\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\tout = {\n\t\t\t'value': last,\n\t\t\t'done': false\n\t\t};\n\t\tlast = v.value;\n\t\treturn out;\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterPop( iterator[ iteratorSymbol ](), cb, thisArg );\n\t}\n}\n\n\n// EXPORTS //\nexport default iterPop;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which skips the last value of a provided iterator.\n*\n* @module @stdlib/iter/pop\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterPop = require( '@stdlib/iter/pop' );\n*\n* var iter = iterPop( array2iterator( [ 1, 2 ] ) );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* var bool = iter.next().done;\n* // returns true\n*/\n\n// MODULES //\nvar iterPop = __var_0__;\n\n\n// EXPORTS //\nexport default iterPop;\n"]}