{"version":3,"sources":["@stdlib/iter/advance/lib/main.js","@stdlib/iter/advance/lib/index.js"],"names":["isIteratorLike","__var_0__","isNonNegativeInteger","__var_1__","isPrimitive","iterAdvance","iterator","n","N","i","TypeError","arguments","length","next","done"],"mappings":"oGAuBA,IAAIA,EAAiBC,EACjBC,EAAuBC,EAAUC,YA2BrC,SAASC,EAAaC,EAAUC,GAC/B,IAAIC,EAEAC,EACJ,IAAMT,EAAgBM,GACrB,MAAM,IAAII,UAAW,iEAAiEJ,EAAS,MAEhG,GAAKK,UAAUC,OAAS,EAAI,CAC3B,IAAMV,EAAsBK,GAC3B,MAAM,IAAIG,UAAW,4EAA8EH,EAAI,MAExGC,EAAID,OAEJC,EAAI,MAGL,IADAC,EAAI,EACIA,EAAID,IACPF,EAASO,OACNC,MAGPL,GAAK,EAEN,OAAOH,EChCL,IAACD,EAAcJ","sourcesContent":["import __var_0__ from '@stdlib/assert/is-iterator-like';\nimport __var_1__ from '@stdlib/assert/is-nonnegative-integer';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isIteratorLike = __var_0__;\nvar isNonNegativeInteger = __var_1__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Advances an iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {NonNegativeInteger} [n=1e308] - number of iterations\n* @throws {TypeError} first argument must be an iterator\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Iterator} input iterator\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n*\n* var it1 = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var it2 = iterAdvance( it1, 4 );\n*\n* var v = it2.next().value;\n* // returns 1\n*\n* var bool = it2.next().done;\n* // returns true\n*/\nfunction iterAdvance( iterator, n ) {\n\tvar N;\n\tvar v;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an iterator. Value: `'+iterator+'`.' );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( n ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be a nonnegative integer. Value: `' + n + '`.' );\n\t\t}\n\t\tN = n;\n\t} else {\n\t\tN = 1e308;\n\t}\n\ti = 0;\n\twhile ( i < N ) {\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t}\n\treturn iterator;\n}\n\n\n// EXPORTS //\nexport default iterAdvance;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Advance an iterator.\n*\n* @module @stdlib/iter/advance\n*\n* @example\n* var array2iterator = require( '@stdlib/array/to-iterator' );\n* var iterAdvance = require( '@stdlib/iter/advance' );\n*\n* var it1 = array2iterator( [ 0, 0, 0, 0, 1 ] );\n*\n* var it2 = iterAdvance( it1, 4 );\n*\n* var v = it2.next().value;\n* // returns 1\n*\n* var bool = it2.next().done;\n* // returns true\n*/\n\n// MODULES //\nvar iterAdvance = __var_0__;\n\n\n// EXPORTS //\nexport default iterAdvance;\n"]}