{"version":3,"sources":["@stdlib/fastmath/special/lib/index.js"],"names":["setReadOnly","__var_0__","ns","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__","__var_11__"],"mappings":"ucAqCA,IAAIA,EAAcC,EAUdC,EAAK,GASTF,EAAaE,EAAI,MAAOC,GASxBH,EAAaE,EAAI,QAASE,GAS1BJ,EAAaE,EAAI,QAASG,GAS1BL,EAAaE,EAAI,QAASI,GAS1BN,EAAaE,EAAI,QAASK,GAS1BP,EAAaE,EAAI,QAASM,GAS1BR,EAAaE,EAAI,MAAOO,GASxBT,EAAaE,EAAI,MAAOQ,GASxBV,EAAaE,EAAI,SAAUS,GAS3BX,EAAaE,EAAI,aAAcU,GAS/BZ,EAAaE,EAAI,aAAcW","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/fastmath/special/abs';\nimport __var_2__ from '@stdlib/fastmath/special/acosh';\nimport __var_3__ from '@stdlib/fastmath/special/alpha-max-plus-beta-min';\nimport __var_4__ from '@stdlib/fastmath/special/asinh';\nimport __var_5__ from '@stdlib/fastmath/special/atanh';\nimport __var_6__ from '@stdlib/fastmath/special/hypot';\nimport __var_7__ from '@stdlib/fastmath/special/max';\nimport __var_8__ from '@stdlib/fastmath/special/min';\nimport __var_9__ from '@stdlib/fastmath/special/pow-int';\nimport __var_10__ from '@stdlib/fastmath/special/uint32-log2';\nimport __var_11__ from '@stdlib/fastmath/special/uint32-sqrt';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace fast.special\n*/\nvar ns = {};\n\n/**\n* @name abs\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/abs}\n*/\nsetReadOnly( ns, 'abs', __var_1__);\n\n/**\n* @name acosh\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/acosh}\n*/\nsetReadOnly( ns, 'acosh', __var_2__);\n\n/**\n* @name ampbm\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/alpha-max-plus-beta-min}\n*/\nsetReadOnly( ns, 'ampbm', __var_3__);\n\n/**\n* @name asinh\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/asinh}\n*/\nsetReadOnly( ns, 'asinh', __var_4__);\n\n/**\n* @name atanh\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/atanh}\n*/\nsetReadOnly( ns, 'atanh', __var_5__);\n\n/**\n* @name hypot\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/hypot}\n*/\nsetReadOnly( ns, 'hypot', __var_6__);\n\n/**\n* @name max\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/max}\n*/\nsetReadOnly( ns, 'max', __var_7__);\n\n/**\n* @name min\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/min}\n*/\nsetReadOnly( ns, 'min', __var_8__);\n\n/**\n* @name powint\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/pow-int}\n*/\nsetReadOnly( ns, 'powint', __var_9__);\n\n/**\n* @name log2Uint32\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/uint32-log2}\n*/\nsetReadOnly( ns, 'log2Uint32', __var_10__);\n\n/**\n* @name sqrtUint32\n* @memberof fast.special\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/fastmath/special/uint32-sqrt}\n*/\nsetReadOnly( ns, 'sqrtUint32', __var_11__);\n\n\n// EXPORTS //\nexport default ns;\n"]}