{"version":3,"sources":["@stdlib/nlp/lib/index.js"],"names":["setReadOnly","__var_0__","nlp","__var_1__","__var_2__","__var_3__","__var_4__"],"mappings":"saA6BA,IAAAA,EAAAC,EAUAC,EAAA,GASAF,EAAAE,EAAA,qBAAAC,GASAH,EAAAE,EAAA,MAAAE,GASAJ,EAAAE,EAAA,gBAAAG,GASAL,EAAAE,EAAA,WAAAI","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/nlp/expand-contractions';\nimport __var_2__ from '@stdlib/nlp/lda';\nimport __var_3__ from '@stdlib/nlp/porter-stemmer';\nimport __var_4__ from '@stdlib/nlp/tokenize';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace nlp\n*/\nvar nlp = {};\n\n/**\n* @name expandContractions\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/expand-contractions}\n*/\nsetReadOnly( nlp, 'expandContractions', __var_1__);\n\n/**\n* @name lda\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/lda}\n*/\nsetReadOnly( nlp, 'lda', __var_2__);\n\n/**\n* @name porterStemmer\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/porter-stemmer}\n*/\nsetReadOnly( nlp, 'porterStemmer', __var_3__);\n\n/**\n* @name tokenize\n* @memberof nlp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/nlp/tokenize}\n*/\nsetReadOnly( nlp, 'tokenize', __var_4__);\n\n\n// EXPORTS //\nexport default nlp;\n\nexport { __var_1__ as expandContractions, __var_2__ as lda, __var_3__ as porterStemmer, __var_4__ as tokenize};"]}