{"version":3,"sources":["@stdlib/complex/lib/index.js"],"names":["setReadOnly","__var_0__","ns","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__"],"mappings":"k8BAmCA,IAAAA,EAAAC,EAUAC,EAAA,GASAF,EAAAE,EAAA,UAAAC,GASAH,EAAAE,EAAA,OAAAE,GASAJ,EAAAE,EAAA,YAAAG,GASAL,EAAAE,EAAA,aAAAI,GASAN,EAAAE,EAAA,OAAAK,GASAP,EAAAE,EAAA,OAAAM,GASAR,EAAAE,EAAA,OAAAO,GASAT,EAAAE,EAAA,gBAAAQ,GASAV,EAAAE,EAAA,kBAAAS,GASAX,EAAAE,EAAA,mBAAAU","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/complex/cmplx';\nimport __var_2__ from '@stdlib/complex/conj';\nimport __var_3__ from '@stdlib/complex/float32';\nimport __var_4__ from '@stdlib/complex/float64';\nimport __var_5__ from '@stdlib/complex/imag';\nimport __var_6__ from '@stdlib/complex/real';\nimport __var_7__ from '@stdlib/complex/reim';\nimport __var_8__ from '@stdlib/complex/reviver';\nimport __var_9__ from '@stdlib/complex/reviver-float32';\nimport __var_10__ from '@stdlib/complex/reviver-float64';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name complex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/cmplx}\n*/\nsetReadOnly( ns, 'complex', __var_1__);\n\n/**\n* @name conj\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/conj}\n*/\nsetReadOnly( ns, 'conj', __var_2__);\n\n/**\n* @name Complex64\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/complex/float32}\n*/\nsetReadOnly( ns, 'Complex64', __var_3__);\n\n/**\n* @name Complex128\n* @memberof ns\n* @readonly\n* @constructor\n* @see {@link module:@stdlib/complex/float64}\n*/\nsetReadOnly( ns, 'Complex128', __var_4__);\n\n/**\n* @name imag\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/imag}\n*/\nsetReadOnly( ns, 'imag', __var_5__);\n\n/**\n* @name real\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/real}\n*/\nsetReadOnly( ns, 'real', __var_6__);\n\n/**\n* @name reim\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/reim}\n*/\nsetReadOnly( ns, 'reim', __var_7__);\n\n/**\n* @name reviveComplex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/reviver}\n*/\nsetReadOnly( ns, 'reviveComplex', __var_8__);\n\n/**\n* @name reviveComplex64\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/reviver-float32}\n*/\nsetReadOnly( ns, 'reviveComplex64', __var_9__);\n\n/**\n* @name reviveComplex128\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/reviver-float64}\n*/\nsetReadOnly( ns, 'reviveComplex128', __var_10__);\n\n\n// EXPORTS //\nexport default ns;\n\nexport { __var_1__ as complex, __var_2__ as conj, __var_3__ as Complex64, __var_4__ as Complex128, __var_5__ as imag, __var_6__ as real, __var_7__ as reim, __var_8__ as reviveComplex, __var_9__ as reviveComplex64, __var_10__ as reviveComplex128};"]}