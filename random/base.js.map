{"version":3,"sources":["@stdlib/random/base/lib/index.js"],"names":["setReadOnly","__var_0__","random","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__","__var_11__","__var_12__","__var_13__","__var_14__","__var_15__","__var_16__","__var_17__","__var_18__","__var_19__","__var_20__","__var_21__","__var_22__","__var_23__","__var_24__","__var_25__","__var_26__","__var_27__","__var_28__","__var_29__","__var_30__","__var_31__","__var_32__","__var_33__","__var_34__","__var_35__","__var_36__","__var_37__","__var_38__","__var_39__","__var_40__","__var_41__","__var_42__"],"mappings":"8+HAoEA,IAAIA,EAAcC,EAUdC,EAAS,GASbF,EAAaE,EAAQ,UAAWC,GAShCH,EAAaE,EAAQ,YAAaE,GASlCJ,EAAaE,EAAQ,OAAQG,GAS7BL,EAAaE,EAAQ,YAAaI,GASlCN,EAAaE,EAAQ,WAAYK,GASjCP,EAAaE,EAAQ,YAAaM,GASlCR,EAAaE,EAAQ,SAAUO,GAS/BT,EAAaE,EAAQ,MAAOQ,GAS5BV,EAAaE,EAAQ,YAAaS,GASlCX,EAAaE,EAAQ,SAAUU,GAS/BZ,EAAaE,EAAQ,kBAAmBW,GASxCb,EAAaE,EAAQ,SAAUY,GAS/Bd,EAAaE,EAAQ,cAAea,GASpCf,EAAaE,EAAQ,IAAKc,GAS1BhB,EAAaE,EAAQ,UAAWe,GAShCjB,EAAaE,EAAQ,QAASgB,GAS9BlB,EAAaE,EAAQ,YAAaiB,GASlCnB,EAAaE,EAAQ,SAAUkB,GAU/BpB,EAAaE,EAAQ,iBAAkBmB,GASvCrB,EAAaE,EAAQ,mBAAoBoB,GASzCtB,EAAaE,EAAQ,WAAYqB,GASjCvB,EAAaE,EAAQ,cAAesB,GASpCxB,EAAaE,EAAQ,UAAWuB,GAShCzB,EAAaE,EAAQ,OAAQwB,GAS7B1B,EAAaE,EAAQ,WAAYyB,GASjC3B,EAAaE,EAAQ,YAAa0B,GASlC5B,EAAaE,EAAQ,SAAU2B,GAS/B7B,EAAaE,EAAQ,gBAAiB4B,GAStC9B,EAAaE,EAAQ,UAAW6B,GAShC/B,EAAaE,EAAQ,mBAAoB8B,GASzChC,EAAaE,EAAQ,SAAU+B,GAS/BjC,EAAaE,EAAQ,UAAWgC,GAShClC,EAAaE,EAAQ,UAAWiC,GAShCnC,EAAaE,EAAQ,QAASkC,GAS9BpC,EAAaE,EAAQ,QAASmC,GAS9BrC,EAAaE,EAAQ,QAASoC,GAS9BtC,EAAaE,EAAQ,WAAYqC,GASjCvC,EAAaE,EAAQ,iBAAkBsC,GASvCxC,EAAaE,EAAQ,IAAKuC,GAS1BzC,EAAaE,EAAQ,aAAcwC,GASnC1C,EAAaE,EAAQ,UAAWyC,GAShC3C,EAAaE,EAAQ,UAAW0C","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/random/base/arcsine';\nimport __var_2__ from '@stdlib/random/base/bernoulli';\nimport __var_3__ from '@stdlib/random/base/beta';\nimport __var_4__ from '@stdlib/random/base/betaprime';\nimport __var_5__ from '@stdlib/random/base/binomial';\nimport __var_6__ from '@stdlib/random/base/box-muller';\nimport __var_7__ from '@stdlib/random/base/cauchy';\nimport __var_8__ from '@stdlib/random/base/chi';\nimport __var_9__ from '@stdlib/random/base/chisquare';\nimport __var_10__ from '@stdlib/random/base/cosine';\nimport __var_11__ from '@stdlib/random/base/discrete-uniform';\nimport __var_12__ from '@stdlib/random/base/erlang';\nimport __var_13__ from '@stdlib/random/base/exponential';\nimport __var_14__ from '@stdlib/random/base/f';\nimport __var_15__ from '@stdlib/random/base/frechet';\nimport __var_16__ from '@stdlib/random/base/gamma';\nimport __var_17__ from '@stdlib/random/base/geometric';\nimport __var_18__ from '@stdlib/random/base/gumbel';\nimport __var_19__ from '@stdlib/random/base/hypergeometric';\nimport __var_20__ from '@stdlib/random/base/improved-ziggurat';\nimport __var_21__ from '@stdlib/random/base/invgamma';\nimport __var_22__ from '@stdlib/random/base/kumaraswamy';\nimport __var_23__ from '@stdlib/random/base/laplace';\nimport __var_24__ from '@stdlib/random/base/levy';\nimport __var_25__ from '@stdlib/random/base/logistic';\nimport __var_26__ from '@stdlib/random/base/lognormal';\nimport __var_27__ from '@stdlib/random/base/minstd';\nimport __var_28__ from '@stdlib/random/base/minstd-shuffle';\nimport __var_29__ from '@stdlib/random/base/mt19937';\nimport __var_30__ from '@stdlib/random/base/negative-binomial';\nimport __var_31__ from '@stdlib/random/base/normal';\nimport __var_32__ from '@stdlib/random/base/pareto-type1';\nimport __var_33__ from '@stdlib/random/base/poisson';\nimport __var_34__ from '@stdlib/random/base/randi';\nimport __var_35__ from '@stdlib/random/base/randn';\nimport __var_36__ from '@stdlib/random/base/randu';\nimport __var_37__ from '@stdlib/random/base/rayleigh';\nimport __var_38__ from '@stdlib/random/base/reviver';\nimport __var_39__ from '@stdlib/random/base/t';\nimport __var_40__ from '@stdlib/random/base/triangular';\nimport __var_41__ from '@stdlib/random/base/uniform';\nimport __var_42__ from '@stdlib/random/base/weibull';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace random\n*/\nvar random = {};\n\n/**\n* @name arcsine\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/arcsine}\n*/\nsetReadOnly( random, 'arcsine', __var_1__);\n\n/**\n* @name bernoulli\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/bernoulli}\n*/\nsetReadOnly( random, 'bernoulli', __var_2__);\n\n/**\n* @name beta\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/beta}\n*/\nsetReadOnly( random, 'beta', __var_3__);\n\n/**\n* @name betaprime\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/betaprime}\n*/\nsetReadOnly( random, 'betaprime', __var_4__);\n\n/**\n* @name binomial\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/binomial}\n*/\nsetReadOnly( random, 'binomial', __var_5__);\n\n/**\n* @name boxMuller\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/box-muller}\n*/\nsetReadOnly( random, 'boxMuller', __var_6__);\n\n/**\n* @name cauchy\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/cauchy}\n*/\nsetReadOnly( random, 'cauchy', __var_7__);\n\n/**\n* @name chi\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/chi}\n*/\nsetReadOnly( random, 'chi', __var_8__);\n\n/**\n* @name chisquare\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/chisquare}\n*/\nsetReadOnly( random, 'chisquare', __var_9__);\n\n/**\n* @name cosine\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/cosine}\n*/\nsetReadOnly( random, 'cosine', __var_10__);\n\n/**\n* @name discreteUniform\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/discrete-uniform}\n*/\nsetReadOnly( random, 'discreteUniform', __var_11__);\n\n/**\n* @name erlang\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/erlang}\n*/\nsetReadOnly( random, 'erlang', __var_12__);\n\n/**\n* @name exponential\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/exponential}\n*/\nsetReadOnly( random, 'exponential', __var_13__);\n\n/**\n* @name f\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/f}\n*/\nsetReadOnly( random, 'f', __var_14__);\n\n/**\n* @name frechet\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/frechet}\n*/\nsetReadOnly( random, 'frechet', __var_15__);\n\n/**\n* @name gamma\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/gamma}\n*/\nsetReadOnly( random, 'gamma', __var_16__);\n\n/**\n* @name geometric\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/geometric}\n*/\nsetReadOnly( random, 'geometric', __var_17__);\n\n/**\n* @name gumbel\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/gumbel}\n*/\nsetReadOnly( random, 'gumbel', __var_18__);\n\n/**\n* @name hypergeometric\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/hypergeometric}\n*/\n\nsetReadOnly( random, 'hypergeometric', __var_19__);\n\n/**\n* @name improvedZiggurat\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/improved-ziggurat}\n*/\nsetReadOnly( random, 'improvedZiggurat', __var_20__);\n\n/**\n* @name invgamma\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/invgamma}\n*/\nsetReadOnly( random, 'invgamma', __var_21__);\n\n/**\n* @name kumaraswamy\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/kumaraswamy}\n*/\nsetReadOnly( random, 'kumaraswamy', __var_22__);\n\n/**\n* @name laplace\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/laplace}\n*/\nsetReadOnly( random, 'laplace', __var_23__);\n\n/**\n* @name levy\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/levy}\n*/\nsetReadOnly( random, 'levy', __var_24__);\n\n/**\n* @name logistic\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/logistic}\n*/\nsetReadOnly( random, 'logistic', __var_25__);\n\n/**\n* @name lognormal\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/lognormal}\n*/\nsetReadOnly( random, 'lognormal', __var_26__);\n\n/**\n* @name minstd\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/minstd}\n*/\nsetReadOnly( random, 'minstd', __var_27__);\n\n/**\n* @name minstdShuffle\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/minstd-shuffle}\n*/\nsetReadOnly( random, 'minstdShuffle', __var_28__);\n\n/**\n* @name mt19937\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/mt19937}\n*/\nsetReadOnly( random, 'mt19937', __var_29__);\n\n/**\n* @name negativeBinomial\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/negative-binomial}\n*/\nsetReadOnly( random, 'negativeBinomial', __var_30__);\n\n/**\n* @name normal\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/normal}\n*/\nsetReadOnly( random, 'normal', __var_31__);\n\n/**\n* @name pareto1\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/pareto-type1}\n*/\nsetReadOnly( random, 'pareto1', __var_32__);\n\n/**\n* @name poisson\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/poisson}\n*/\nsetReadOnly( random, 'poisson', __var_33__);\n\n/**\n* @name randi\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/randi}\n*/\nsetReadOnly( random, 'randi', __var_34__);\n\n/**\n* @name randn\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/randn}\n*/\nsetReadOnly( random, 'randn', __var_35__);\n\n/**\n* @name randu\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/randu}\n*/\nsetReadOnly( random, 'randu', __var_36__);\n\n/**\n* @name rayleigh\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/rayleigh}\n*/\nsetReadOnly( random, 'rayleigh', __var_37__);\n\n/**\n* @name reviveBasePRNG\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/reviver}\n*/\nsetReadOnly( random, 'reviveBasePRNG', __var_38__);\n\n/**\n* @name t\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/t}\n*/\nsetReadOnly( random, 't', __var_39__);\n\n/**\n* @name triangular\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/triangular}\n*/\nsetReadOnly( random, 'triangular', __var_40__);\n\n/**\n* @name uniform\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/uniform}\n*/\nsetReadOnly( random, 'uniform', __var_41__);\n\n/**\n* @name weibull\n* @memberof random\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/random/base/weibull}\n*/\nsetReadOnly( random, 'weibull', __var_42__);\n\n\n// EXPORTS //\nexport default random;\n\nexport { __var_1__ as arcsine, __var_2__ as bernoulli, __var_3__ as beta, __var_4__ as betaprime, __var_5__ as binomial, __var_6__ as boxMuller, __var_7__ as cauchy, __var_8__ as chi, __var_9__ as chisquare, __var_10__ as cosine, __var_11__ as discreteUniform, __var_12__ as erlang, __var_13__ as exponential, __var_14__ as f, __var_15__ as frechet, __var_16__ as gamma, __var_17__ as geometric, __var_18__ as gumbel, __var_19__ as hypergeometric, __var_20__ as improvedZiggurat, __var_21__ as invgamma, __var_22__ as kumaraswamy, __var_23__ as laplace, __var_24__ as levy, __var_25__ as logistic, __var_26__ as lognormal, __var_27__ as minstd, __var_28__ as minstdShuffle, __var_29__ as mt19937, __var_30__ as negativeBinomial, __var_31__ as normal, __var_32__ as pareto1, __var_33__ as poisson, __var_34__ as randi, __var_35__ as randn, __var_36__ as randu, __var_37__ as rayleigh, __var_38__ as reviveBasePRNG, __var_39__ as t, __var_40__ as triangular, __var_41__ as uniform, __var_42__ as weibull};"]}