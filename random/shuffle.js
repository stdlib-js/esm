// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./../utils/define-nonenumerable-read-only-property.js";import o from"./../assert/is-array-like.js";import e from"./../assert/is-string.js";import t from"./../utils/copy.js";import i from"./../math/base/special/floor.js";import n from"./base/mt19937.js";import p from"./../assert/has-own-property.js";import s from"./../assert/is-plain-object.js";var a="shallow",l={copy:a},m=p,y=e.isPrimitive,u=s;function c(r,o){if(!u(o))return new TypeError("invalid argument. Options argument must be an object. Value: `"+o+"`.");if(m(o,"copy")){if(r.copy=o.copy,!y(r.copy))return new TypeError("invalid option. `copy` option must be a string primitive. Option: `"+r.copy+"`.");if("deep"!==r.copy&&"shallow"!==r.copy&&"none"!==r.copy)return new TypeError("invalid option. `copy` option must be `deep`, `shallow` or `none`. Value: `"+r.copy+"`.")}return null}var f=r,d=o,h=e.isPrimitive,v=t,w=i,j=n.factory,b=l,g=c;function E(r){var o,e,t;if(o=v(b),arguments.length&&(t=g(o,r)))throw t;return e=r&&r.seed?j({seed:r.seed}):j(),f(i,"seed",e.seed),f(i,"PRNG",e),e=e.normalized,i;function i(r,t){var i,n,p,s,a,l,m,y,u,c;if(!d(r))throw new TypeError("invalid argument. First argument must be array-like. Value: `"+r+"`.");if(arguments.length>1&&(a=g(s={},t)))throw a;for(p=s&&s.copy?s.copy:o.copy,(i=h(r))&&(r=r.split(""),p="none"),n=0,"shallow"===p?n+=1:"deep"===p&&(n+=2),y=r.length,l=v(r,n),u=y-1;u>0;u--)c=w(e()*(u+1)),m=l[u],l[u]=l[c],l[c]=m;return i&&(l=r.join("")),l}}var T=E,P=T(),V=r,k=P,O=E;V(k,"factory",O);export default k;
//# sourceMappingURL=shuffle.js.map