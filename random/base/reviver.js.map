{"version":3,"sources":["@stdlib/random/base/reviver/lib/prngs.js","@stdlib/random/base/reviver/lib/main.js","@stdlib/random/base/reviver/lib/index.js"],"names":["prng0","__var_0__","prng1","__var_1__","prng2","__var_2__","prng3","__var_3__","prng4","__var_4__","prng5","__var_5__","prng6","__var_6__","prng7","__var_7__","prng8","__var_8__","prng9","__var_9__","prng10","__var_10__","prng11","__var_11__","prng12","__var_12__","prng13","__var_13__","prng14","__var_14__","prng15","__var_15__","prng16","__var_16__","prng17","__var_17__","prng18","__var_18__","prng19","__var_19__","prng20","__var_20__","prng21","__var_21__","prng22","__var_22__","prng23","__var_23__","prng24","__var_24__","prng25","__var_25__","prng26","__var_26__","prng27","__var_27__","prng28","__var_28__","prng29","__var_29__","prng30","__var_30__","prng31","__var_31__","prng32","__var_32__","prng33","__var_33__","prng34","__var_34__","prng35","__var_35__","prng36","__var_36__","prng37","__var_37__","prng38","__var_38__","prng39","__var_39__","prng40","__var_40__","prngs","factory","isString","isPrimitive","isObject","isArray","contains","Int32Array","Uint32Array","table","TYPED_ARRAY_CTORS","PRNG_WRAPPERS","reviver","key","value","opts","args","ctor","tmp","type","name","state","params","data","split","slice","join","push","apply","error"],"mappings":"i6CAggB,QAAKlF,EAAMmF,QAC3BD,GAAkB,UAAKhF,EAAMiF,QAC7BD,GAAa,KAAK9E,EAAM+E,QACxBD,GAAkB,UAAK5E,EAAM6E,QAC7BD,GAAiB,SAAK1E,EAAM2E,QAC5BD,GAAO,cAAiBxE,EAAMyE,QAC9BD,GAAe,OAAKtE,EAAMuE,QAC1BD,GAAY,IAAKpE,GAAMqE,QACvBD,GAAkB,UAAKlE,GAAMmE,QAC7BD,GAAe,OAAKhE,GAAMiE,QAC1BD,GAAO,oBAAuB9D,GAAO+D,QACrCD,GAAe,OAAK5D,GAAO6D,QAC3BD,GAAoB,YAAK1D,GAAO2D,QAChCD,GAAU,EAAKxD,GAAOyD,QACtBD,GAAgB,QAAKtD,GAAOuD,QAC5BD,GAAc,MAAKpD,GAAOqD,QAC1BD,GAAkB,UAAKlD,GAAOmD,QAC9BD,GAAe,OAAKhD,GAAOiD,QAC3BD,GAAuB,eAAK9C,GAAO+C,QACnCD,GAAO,qBAAwB5C,GAAO6C,QACtCD,GAAiB,SAAK1C,GAAO2C,QAC7BD,GAAoB,YAAKxC,GAAOyC,QAChCD,GAAgB,QAAKtC,GAAOuC,QAC5BD,GAAa,KAAKpC,GAAOqC,QACzBD,GAAiB,SAAKlC,GAAOmC,QAC7BD,GAAkB,UAAKhC,GAAOiC,QAC9BD,GAAe,OAAK9B,GAAO+B,QAC3BD,GAAO,kBAAqB5B,GAAO6B,QACnCD,GAAgB,QAAK1B,GAAO2B,QAC5BD,GAAO,qBAAwBxB,GAAOyB,QACtCD,GAAe,OAAKtB,GAAOuB,QAC3BD,GAAO,gBAAmBpB,GAAOqB,QACjCD,GAAgB,QAAKlB,GAAOmB,QAC5BD,GAAc,MAAKhB,GAAOiB,QAC1BD,GAAc,MAAKd,GAAOe,QAC1BD,GAAc,MAAKZ,GAAOa,QAC1BD,GAAiB,SAAKV,GAAOW,QAC7BD,GAAU,EAAKR,GAAOS,QACtBD,GAAmB,WAAKN,GAAOO,QAC/BD,GAAgB,QAAKJ,GAAOK,QAC5BD,GAAgB,QAAKF,GAAOG,QC1H5B,IAAIC,GAAWnF,EAAUoF,YACrBC,GAAWnF,EACXoF,GAAUlF,EACVmF,GAAWjF,EACXkF,GAAahF,EACbiF,GAAc/E,EACdgF,GAAQ9E,GAKR+E,GAAoB,CACvBH,WAAcA,GACdC,YAAeA,IAEZG,GAAgB,CAAE,QAAS,QAAS,SAoBxC,SAASC,GAASC,EAAKC,GACtB,IAAIb,EACAc,EACAC,EACAC,EACAC,EACJ,GACCJ,GACe,SAAfA,EAAMK,MACNjB,GAAUY,EAAMM,OAChBhB,GAAUU,EAAMO,QAChBhB,GAASS,EAAMQ,SACfpB,GAAUY,EAAMO,MAAMF,OACtBd,GAASS,EAAMO,MAAME,QAErBR,EAAO,QAEU,KADjBd,EAAUQ,GAAOK,EAAMM,SAEtBF,EAAMJ,EAAMM,KAAKI,MAAO,KACnBlB,GAAUK,GAAeO,EAAK,MAClCjB,EAAUQ,GAAOS,EAAK,IACtBH,EAAKK,KAAOF,EAAIO,MAAO,GAAIC,KAAM,OAG9BzB,IACJgB,EAAOP,GAAmBI,EAAMO,MAAMF,QAC1B,CACXJ,EAAKM,MAAQ,IAAIJ,EAAMH,EAAMO,MAAME,OAEnCP,EAAOF,EAAMQ,OAAOG,SACfE,KAAMZ,GAEX,IACC,OAAOd,EAAQ2B,MAAO,KAAMZ,GAC3B,MAAQa,KAMb,OAAOf,ECnEL,IAACF,GAAU7F","sourcesContent":["import __var_0__ from '@stdlib/random/base/arcsine';\nimport __var_1__ from '@stdlib/random/base/bernoulli';\nimport __var_2__ from '@stdlib/random/base/beta';\nimport __var_3__ from '@stdlib/random/base/betaprime';\nimport __var_4__ from '@stdlib/random/base/binomial';\nimport __var_5__ from '@stdlib/random/base/box-muller';\nimport __var_6__ from '@stdlib/random/base/cauchy';\nimport __var_7__ from '@stdlib/random/base/chi';\nimport __var_8__ from '@stdlib/random/base/chisquare';\nimport __var_9__ from '@stdlib/random/base/cosine';\nimport __var_10__ from '@stdlib/random/base/discrete-uniform';\nimport __var_11__ from '@stdlib/random/base/erlang';\nimport __var_12__ from '@stdlib/random/base/exponential';\nimport __var_13__ from '@stdlib/random/base/f';\nimport __var_14__ from '@stdlib/random/base/frechet';\nimport __var_15__ from '@stdlib/random/base/gamma';\nimport __var_16__ from '@stdlib/random/base/geometric';\nimport __var_17__ from '@stdlib/random/base/gumbel';\nimport __var_18__ from '@stdlib/random/base/hypergeometric';\nimport __var_19__ from '@stdlib/random/base/improved-ziggurat';\nimport __var_20__ from '@stdlib/random/base/invgamma';\nimport __var_21__ from '@stdlib/random/base/kumaraswamy';\nimport __var_22__ from '@stdlib/random/base/laplace';\nimport __var_23__ from '@stdlib/random/base/levy';\nimport __var_24__ from '@stdlib/random/base/logistic';\nimport __var_25__ from '@stdlib/random/base/lognormal';\nimport __var_26__ from '@stdlib/random/base/minstd';\nimport __var_27__ from '@stdlib/random/base/minstd-shuffle';\nimport __var_28__ from '@stdlib/random/base/mt19937';\nimport __var_29__ from '@stdlib/random/base/negative-binomial';\nimport __var_30__ from '@stdlib/random/base/normal';\nimport __var_31__ from '@stdlib/random/base/pareto-type1';\nimport __var_32__ from '@stdlib/random/base/poisson';\nimport __var_33__ from '@stdlib/random/base/randi';\nimport __var_34__ from '@stdlib/random/base/randn';\nimport __var_35__ from '@stdlib/random/base/randu';\nimport __var_36__ from '@stdlib/random/base/rayleigh';\nimport __var_37__ from '@stdlib/random/base/t';\nimport __var_38__ from '@stdlib/random/base/triangular';\nimport __var_39__ from '@stdlib/random/base/uniform';\nimport __var_40__ from '@stdlib/random/base/weibull';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n// This file is generated using `scripts/build.js`.\n\n'use strict';\n\n// MODULES //\nvar prng0 = __var_0__;\nvar prng1 = __var_1__;\nvar prng2 = __var_2__;\nvar prng3 = __var_3__;\nvar prng4 = __var_4__;\nvar prng5 = __var_5__;\nvar prng6 = __var_6__;\nvar prng7 = __var_7__;\nvar prng8 = __var_8__;\nvar prng9 = __var_9__;\nvar prng10 = __var_10__;\nvar prng11 = __var_11__;\nvar prng12 = __var_12__;\nvar prng13 = __var_13__;\nvar prng14 = __var_14__;\nvar prng15 = __var_15__;\nvar prng16 = __var_16__;\nvar prng17 = __var_17__;\nvar prng18 = __var_18__;\nvar prng19 = __var_19__;\nvar prng20 = __var_20__;\nvar prng21 = __var_21__;\nvar prng22 = __var_22__;\nvar prng23 = __var_23__;\nvar prng24 = __var_24__;\nvar prng25 = __var_25__;\nvar prng26 = __var_26__;\nvar prng27 = __var_27__;\nvar prng28 = __var_28__;\nvar prng29 = __var_29__;\nvar prng30 = __var_30__;\nvar prng31 = __var_31__;\nvar prng32 = __var_32__;\nvar prng33 = __var_33__;\nvar prng34 = __var_34__;\nvar prng35 = __var_35__;\nvar prng36 = __var_36__;\nvar prng37 = __var_37__;\nvar prng38 = __var_38__;\nvar prng39 = __var_39__;\nvar prng40 = __var_40__;\n\n\n// MAIN //\n\nvar prngs = {};\nprngs[ 'arcsine' ] = prng0.factory;\nprngs[ 'bernoulli' ] = prng1.factory;\nprngs[ 'beta' ] = prng2.factory;\nprngs[ 'betaprime' ] = prng3.factory;\nprngs[ 'binomial' ] = prng4.factory;\nprngs[ 'box-muller' ] = prng5.factory;\nprngs[ 'cauchy' ] = prng6.factory;\nprngs[ 'chi' ] = prng7.factory;\nprngs[ 'chisquare' ] = prng8.factory;\nprngs[ 'cosine' ] = prng9.factory;\nprngs[ 'discrete-uniform' ] = prng10.factory;\nprngs[ 'erlang' ] = prng11.factory;\nprngs[ 'exponential' ] = prng12.factory;\nprngs[ 'f' ] = prng13.factory;\nprngs[ 'frechet' ] = prng14.factory;\nprngs[ 'gamma' ] = prng15.factory;\nprngs[ 'geometric' ] = prng16.factory;\nprngs[ 'gumbel' ] = prng17.factory;\nprngs[ 'hypergeometric' ] = prng18.factory;\nprngs[ 'improved-ziggurat' ] = prng19.factory;\nprngs[ 'invgamma' ] = prng20.factory;\nprngs[ 'kumaraswamy' ] = prng21.factory;\nprngs[ 'laplace' ] = prng22.factory;\nprngs[ 'levy' ] = prng23.factory;\nprngs[ 'logistic' ] = prng24.factory;\nprngs[ 'lognormal' ] = prng25.factory;\nprngs[ 'minstd' ] = prng26.factory;\nprngs[ 'minstd-shuffle' ] = prng27.factory;\nprngs[ 'mt19937' ] = prng28.factory;\nprngs[ 'negative-binomial' ] = prng29.factory;\nprngs[ 'normal' ] = prng30.factory;\nprngs[ 'pareto-type1' ] = prng31.factory;\nprngs[ 'poisson' ] = prng32.factory;\nprngs[ 'randi' ] = prng33.factory;\nprngs[ 'randn' ] = prng34.factory;\nprngs[ 'randu' ] = prng35.factory;\nprngs[ 'rayleigh' ] = prng36.factory;\nprngs[ 't' ] = prng37.factory;\nprngs[ 'triangular' ] = prng38.factory;\nprngs[ 'uniform' ] = prng39.factory;\nprngs[ 'weibull' ] = prng40.factory;\n\n\n// EXPORTS //\nexport default prngs;\n","import __var_0__ from '@stdlib/assert/is-string';\nimport __var_1__ from '@stdlib/assert/is-plain-object';\nimport __var_2__ from '@stdlib/assert/is-array';\nimport __var_3__ from '@stdlib/assert/contains';\nimport __var_4__ from '@stdlib/array/int32';\nimport __var_5__ from '@stdlib/array/uint32';\nimport __var_6__ from './prngs.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isString = __var_0__.isPrimitive;\nvar isObject = __var_1__;\nvar isArray = __var_2__;\nvar contains = __var_3__;\nvar Int32Array = __var_4__;\nvar Uint32Array = __var_5__;\nvar table = __var_6__;\n\n\n// VARIABLES //\n\nvar TYPED_ARRAY_CTORS = {\n\t'Int32Array': Int32Array,\n\t'Uint32Array': Uint32Array\n};\nvar PRNG_WRAPPERS = [ 'randi', 'randn', 'randu' ];\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized pseudorandom number generator.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Function)} value or PRNG\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n* var mt19937 = require( '@stdlib/random/base/mt19937' );\n*\n* var str = JSON.stringify( mt19937 );\n* var rand = parseJSON( str, reviver );\n* // returns <Function>\n*/\nfunction reviver( key, value ) {\n\tvar factory;\n\tvar opts;\n\tvar args;\n\tvar ctor;\n\tvar tmp;\n\tif (\n\t\tvalue &&\n\t\tvalue.type === 'PRNG' &&\n\t\tisString( value.name ) &&\n\t\tisObject( value.state ) &&\n\t\tisArray( value.params ) &&\n\t\tisString( value.state.type ) &&\n\t\tisArray( value.state.data )\n\t) {\n\t\topts = {};\n\t\tfactory = table[ value.name ];\n\t\tif ( factory === void 0 ) {\n\t\t\ttmp = value.name.split( '-' );\n\t\t\tif ( contains( PRNG_WRAPPERS, tmp[ 0 ] ) ) {\n\t\t\t\tfactory = table[ tmp[ 0 ] ];\n\t\t\t\topts.name = tmp.slice( 1 ).join( '-' );\n\t\t\t}\n\t\t}\n\t\tif ( factory ) {\n\t\t\tctor = TYPED_ARRAY_CTORS[ value.state.type ];\n\t\t\tif ( ctor ) {\n\t\t\t\topts.state = new ctor( value.state.data );\n\n\t\t\t\targs = value.params.slice();\n\t\t\t\targs.push( opts );\n\n\t\t\t\ttry {\n\t\t\t\t\treturn factory.apply( null, args );\n\t\t\t\t} catch ( error ) { // eslint-disable-line no-unused-vars\n\t\t\t\t\t// Return the original JSON value...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\nexport default reviver;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized pseudorandom generator.\n*\n* @module @stdlib/random/base/reviver\n*\n* @example\n* var mt19937 = require( '@stdlib/random/base/mt19937' );\n* var reviver = require( '@stdlib/random/base/reviver' );\n*\n* var str = JSON.stringify( mt19937 );\n* var rand = JSON.parse( str, reviver );\n* // returns <Function>\n*/\n\n// MODULES //\nvar reviver = __var_0__;\n\n\n// EXPORTS //\nexport default reviver;\n"]}