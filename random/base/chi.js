// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import e from"./../../utils/define-nonenumerable-read-only-property.js";import t from"./../../utils/define-nonenumerable-read-only-accessor.js";import n from"./../../utils/define-nonenumerable-read-write-accessor.js";import r from"./../../assert/is-positive-number.js";import o from"./../../assert/is-plain-object.js";import i from"./../../assert/is-function.js";import s from"./../../assert/has-own-property.js";import a from"./../../utils/constant-function.js";import u from"./../../utils/noop.js";import p from"./../../math/base/assert/is-nan.js";import m from"./chisquare.js";import f from"./../../array/to-json.js";import l from"./../../math/base/special/sqrt.js";var g=e,c=t,d=n,h=r.isPrimitive,b=o,j=i,y=s,v=a,w=u,L=p,N=m.factory,E=f,O=l;function P(){var e,t,n,r,o;if(0===arguments.length)e=N();else if(1===arguments.length&&b(arguments[0]))if(y(n=arguments[0],"prng")){if(!j(n.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+n.prng+"`.");e=N({prng:n.prng})}else e=N(n);else{if(!h(o=arguments[0]))throw new TypeError("invalid argument. First argument must be a positive number. Value: `"+o+"`.");if(arguments.length>1){if(!b(n=arguments[1]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+n+"`.");if(y(n,"prng")){if(!j(n.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+n.prng+"`.");e=N(o,{prng:n.prng})}else e=N(o,n)}else e=N(o)}return r=void 0===o?P:l,t=e.PRNG,g(r,"NAME","chi"),n&&n.prng?(g(r,"seed",null),g(r,"seedLength",null),d(r,"state",v(null),w),g(r,"stateLength",null),g(r,"byteLength",null),g(r,"toJSON",v(null))):(c(r,"seed",i),c(r,"seedLength",s),d(r,"state",p,m),c(r,"stateLength",a),c(r,"byteLength",u),g(r,"toJSON",f)),g(r,"PRNG",t),r;function i(){return t.seed}function s(){return t.seedLength}function a(){return t.stateLength}function u(){return t.byteLength}function p(){return t.state}function m(e){t.state=e}function f(){var e={type:"PRNG"};return e.name=r.NAME,e.state=E(t.state),e.params=void 0===o?[]:[o],e}function l(){return O(e())}function P(t){return L(t)||t<=0?NaN:O(e(t))}}var T=P,G=T(),R=e,q=G,A=P;R(q,"factory",A);export default q;
//# sourceMappingURL=chi.js.map