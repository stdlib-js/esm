// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import r from"./../../assert/is-string.js";import o from"./../../assert/is-plain-object.js";import t from"./../../assert/is-array.js";import m from"./../../assert/contains.js";import a from"./../../array/int32.js";import i from"./../../array/uint32.js";import f from"./arcsine.js";import s from"./bernoulli.js";import e from"./beta.js";import p from"./betaprime.js";import c from"./binomial.js";import n from"./box-muller.js";import y from"./cauchy.js";import l from"./chi.js";import j from"./chisquare.js";import u from"./cosine.js";import g from"./discrete-uniform.js";import d from"./erlang.js";import b from"./exponential.js";import h from"./f.js";import v from"./frechet.js";import w from"./gamma.js";import x from"./geometric.js";import k from"./gumbel.js";import q from"./hypergeometric.js";import z from"./improved-ziggurat.js";import A from"./invgamma.js";import P from"./kumaraswamy.js";import G from"./laplace.js";import I from"./levy.js";import N from"./logistic.js";import R from"./lognormal.js";import U from"./minstd.js";import B from"./minstd-shuffle.js";import C from"./mt19937.js";import D from"./negative-binomial.js";import E from"./normal.js";import F from"./pareto-type1.js";import H from"./poisson.js";import J from"./randi.js";import K from"./randn.js";import L from"./randu.js";import M from"./rayleigh.js";import O from"./t.js";import Q from"./triangular.js";import S from"./uniform.js";import T from"./weibull.js";var V=f,W=s,X=e,Y=p,Z=c,$=n,_=y,rr=l,or=j,tr=u,mr=g,ar=d,ir=b,fr=h,sr=v,er=w,pr=x,cr=k,nr=q,yr=z,lr=A,jr=P,ur=G,gr=I,dr=N,br=R,hr=U,vr=B,wr=C,xr=D,kr=E,qr=F,zr=H,Ar=J,Pr=K,Gr=L,Ir=M,Nr=O,Rr=Q,Ur=S,Br=T,Cr={};Cr.arcsine=V.factory,Cr.bernoulli=W.factory,Cr.beta=X.factory,Cr.betaprime=Y.factory,Cr.binomial=Z.factory,Cr["box-muller"]=$.factory,Cr.cauchy=_.factory,Cr.chi=rr.factory,Cr.chisquare=or.factory,Cr.cosine=tr.factory,Cr["discrete-uniform"]=mr.factory,Cr.erlang=ar.factory,Cr.exponential=ir.factory,Cr.f=fr.factory,Cr.frechet=sr.factory,Cr.gamma=er.factory,Cr.geometric=pr.factory,Cr.gumbel=cr.factory,Cr.hypergeometric=nr.factory,Cr["improved-ziggurat"]=yr.factory,Cr.invgamma=lr.factory,Cr.kumaraswamy=jr.factory,Cr.laplace=ur.factory,Cr.levy=gr.factory,Cr.logistic=dr.factory,Cr.lognormal=br.factory,Cr.minstd=hr.factory,Cr["minstd-shuffle"]=vr.factory,Cr.mt19937=wr.factory,Cr["negative-binomial"]=xr.factory,Cr.normal=kr.factory,Cr["pareto-type1"]=qr.factory,Cr.poisson=zr.factory,Cr.randi=Ar.factory,Cr.randn=Pr.factory,Cr.randu=Gr.factory,Cr.rayleigh=Ir.factory,Cr.t=Nr.factory,Cr.triangular=Rr.factory,Cr.uniform=Ur.factory,Cr.weibull=Br.factory;var Dr=r.isPrimitive,Er=o,Fr=t,Hr=m,Jr=a,Kr=i,Lr=Cr,Mr={Int32Array:Jr,Uint32Array:Kr},Or=["randi","randn","randu"];function Qr(r,o){var t,m,a,i,f;if(o&&"PRNG"===o.type&&Dr(o.name)&&Er(o.state)&&Fr(o.params)&&Dr(o.state.type)&&Fr(o.state.data)&&(m={},void 0===(t=Lr[o.name])&&(f=o.name.split("-"),Hr(Or,f[0])&&(t=Lr[f[0]],m.name=f.slice(1).join("-"))),t&&(i=Mr[o.state.type]))){m.state=new i(o.state.data),(a=o.params.slice()).push(m);try{return t.apply(null,a)}catch(r){}}return o}var Sr=Qr;export default Sr;
//# sourceMappingURL=reviver.js.map