{"version":3,"sources":["@stdlib/array/reviver/lib/ctors.js","@stdlib/array/reviver/lib/reviver.js","@stdlib/array/reviver/lib/index.js"],"names":["Float64Array","__var_0__","Float32Array","__var_1__","Int16Array","__var_2__","Int32Array","__var_3__","Int8Array","__var_4__","Uint16Array","__var_5__","Uint32Array","__var_6__","Uint8Array","__var_7__","Uint8ClampedArray","__var_8__","ctors","isArray","reviver","key","value","ctor","type","data"],"mappings":"uRA8BA,IAAIA,EAAeC,EACfC,EAAeC,EACfC,EAAaC,EACbC,EAAaC,EACbC,EAAYC,EACZC,EAAcC,EACdC,EAAcC,EACdC,EAAaC,EACbC,EAAoBC,EAKpBC,EAAQ,CACXlB,aAAgBA,EAChBE,aAAgBA,EAChBI,WAAcA,EACdM,YAAeA,EACfR,WAAcA,EACdM,YAAeA,EACfF,UAAaA,EACbM,WAAcA,EACdE,kBAAqBA,GC7BlBG,EAAUlB,EACViB,EAAQf,EAoBZ,SAASiB,EAASC,EAAKC,GACtB,IAAIC,EACJ,OACCD,GACAA,EAAME,MACNL,EAASG,EAAMG,QAEfF,EAAOL,EAAOI,EAAME,OAEZ,IAAID,EAAMD,EAAMG,MAGlBH,ECnBL,IAACF,EAAUnB","sourcesContent":["import __var_0__ from '@stdlib/array/float64';\nimport __var_1__ from '@stdlib/array/float32';\nimport __var_2__ from '@stdlib/array/int16';\nimport __var_3__ from '@stdlib/array/int32';\nimport __var_4__ from '@stdlib/array/int8';\nimport __var_5__ from '@stdlib/array/uint16';\nimport __var_6__ from '@stdlib/array/uint32';\nimport __var_7__ from '@stdlib/array/uint8';\nimport __var_8__ from '@stdlib/array/uint8c';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar Float64Array = __var_0__;\nvar Float32Array = __var_1__;\nvar Int16Array = __var_2__;\nvar Int32Array = __var_3__;\nvar Int8Array = __var_4__;\nvar Uint16Array = __var_5__;\nvar Uint32Array = __var_6__;\nvar Uint8Array = __var_7__;\nvar Uint8ClampedArray = __var_8__;\n\n\n// MAIN //\n\nvar ctors = {\n\t'Float64Array': Float64Array,\n\t'Float32Array': Float32Array,\n\t'Int32Array': Int32Array,\n\t'Uint32Array': Uint32Array,\n\t'Int16Array': Int16Array,\n\t'Uint16Array': Uint16Array,\n\t'Int8Array': Int8Array,\n\t'Uint8Array': Uint8Array,\n\t'Uint8ClampedArray': Uint8ClampedArray\n};\n\n\n// EXPORTS //\nexport default ctors;\n","import __var_0__ from '@stdlib/assert/is-array';\nimport __var_1__ from './ctors.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArray = __var_0__;\nvar ctors = __var_1__;\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized typed array.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|TypedArray)} value or typed array\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n*\n* var str = '{\"type\":\"Float64Array\",\"data\":[5,3]}';\n*\n* var arr = parseJSON( str, reviver );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*/\nfunction reviver( key, value ) {\n\tvar ctor;\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tisArray( value.data )\n\t) {\n\t\tctor = ctors[ value.type ];\n\t\tif ( ctor ) {\n\t\t\treturn new ctor( value.data );\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\nexport default reviver;\n","import __var_0__ from './reviver.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized typed array.\n*\n* @module @stdlib/array/reviver\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n* var reviver = require( '@stdlib/array/reviver' );\n*\n* var str = '{\"type\":\"Float64Array\",\"data\":[5,3]}';\n*\n* var arr = parseJSON( str, reviver );\n* // returns <Float64Array>[ 5.0, 3.0 ]\n*/\n\n// MODULES //\nvar reviver = __var_0__;\n\n\n// EXPORTS //\nexport default reviver;\n"]}