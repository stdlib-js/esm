{"version":3,"sources":["@stdlib/array/to-circular-iterator/lib/main.js","@stdlib/array/to-circular-iterator/lib/index.js"],"names":["setReadOnly","__var_0__","hasOwnProp","__var_1__","isFunction","__var_2__","isArrayLikeObject","__var_3__","isObject","__var_4__","isNonNegativeInteger","__var_5__","isPrimitive","iteratorSymbol","__var_6__","circarray2iterator","src","thisArg","options","count","opts","iter","FLG","fcn","i","TypeError","dir","arguments","length","next1a","next1b","next2a","next2b","end","factory","done","value","call","iterator"],"mappings":"2VA4BA,IAAIA,EAAcC,EACdC,EAAaC,EACbC,EAAaC,EACbC,EAAoBC,EACpBC,EAAWC,EACXC,EAAuBC,EAAUC,YACjCC,EAAiBC,EAkCrB,SAASC,EAAoBC,GAC5B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMlB,EAAmBU,GACxB,MAAM,IAAIS,UAAW,0EAA4ET,EAAM,MAMxG,GAJAI,EAAO,CACNC,KAAQ,MACRK,IAAO,GAEHC,UAAUC,OAAS,EACvB,GAAKpB,EAAUmB,UAAW,IAAQ,CAEjC,GADAT,EAAUS,UAAW,GAChBA,UAAUC,OAAS,EAAI,CAE3B,IAAMxB,EADNmB,EAAMI,UAAW,IAEhB,MAAM,IAAIF,UAAW,mEAAqEF,EAAM,MAEjGN,EAAUU,UAAW,GAEtB,GAAKzB,EAAYgB,EAAS,UACzBE,EAAKC,KAAOH,EAAQG,MACdX,EAAsBQ,EAAQG,OACnC,MAAM,IAAII,UAAW,yEAA2EP,EAAQG,KAAO,MAGjH,GAAKnB,EAAYgB,EAAS,SACzBE,EAAKM,IAAMR,EAAQQ,IACE,IAAhBR,EAAQQ,MAA8B,IAAjBR,EAAQQ,KACjC,MAAM,IAAID,UAAW,qEAAuEP,EAAQQ,IAAM,UAGtG,CAEN,IAAMtB,EADNmB,EAAMI,UAAW,IAEhB,MAAM,IAAIF,UAAW,6FAA+FF,EAAM,MAE3HN,EAAUU,UAAW,GA4BvB,OAzBAR,EAAQ,EAGRE,EAAO,GACFE,EACc,IAAbH,EAAKM,KACTF,GAAK,EACLxB,EAAaqB,EAAM,OAAQQ,KAE3BL,EAAIR,EAAIY,OACR5B,EAAaqB,EAAM,OAAQS,IAEJ,IAAbV,EAAKM,KAChBF,GAAK,EACLxB,EAAaqB,EAAM,OAAQU,KAE3BP,EAAIR,EAAIY,OACR5B,EAAaqB,EAAM,OAAQW,IAE5BhC,EAAaqB,EAAM,SAAUY,GAGxBpB,GACJb,EAAaqB,EAAMR,EAAgBqB,GAE7Bb,EAQP,SAASQ,IAGR,OAFAL,GAAKA,EAAE,GAAKR,EAAIY,OAChBT,GAAS,EACJG,GAAOH,EAAQC,EAAKC,MAAuB,IAAfL,EAAIY,OAC7B,CACNO,MAAQ,GAGH,CACNC,MAASb,EAAIc,KAAMpB,EAASD,EAAKQ,GAAKA,EAAGL,EAAOH,GAChDmB,MAAQ,GAUV,SAASL,IAMR,OALAN,GAAK,GACI,IACRA,GAAKR,EAAIY,QAEVT,GAAS,EACJG,GAAOH,EAAQC,EAAKC,MAAuB,IAAfL,EAAIY,OAC7B,CACNO,MAAQ,GAGH,CACNC,MAASb,EAAIc,KAAMpB,EAASD,EAAKQ,GAAKA,EAAGL,EAAOH,GAChDmB,MAAQ,GAUV,SAASJ,IAGR,OAFAP,GAAKA,EAAE,GAAKR,EAAIY,OAChBT,GAAS,EACJG,GAAOH,EAAQC,EAAKC,MAAuB,IAAfL,EAAIY,OAC7B,CACNO,MAAQ,GAGH,CACNC,MAASpB,EAAKQ,GACdW,MAAQ,GAUV,SAASH,IAMR,OALAR,GAAK,GACI,IACRA,GAAKR,EAAIY,QAEVT,GAAS,EACJG,GAAOH,EAAQC,EAAKC,MAAuB,IAAfL,EAAIY,OAC7B,CACNO,MAAQ,GAGH,CACNC,MAASpB,EAAKQ,GACdW,MAAQ,GAWV,SAASF,EAAKG,GAEb,OADAd,GAAM,EACDK,UAAUC,OACP,CACNQ,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASD,IACR,OAAKX,EACGR,EAAoBC,EAAKI,EAAMG,EAAKN,GAErCF,EAAoBC,EAAKI,ICrN/B,IAACkB,EAAWrC","sourcesContent":["import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/assert/has-own-property';\nimport __var_2__ from '@stdlib/assert/is-function';\nimport __var_3__ from '@stdlib/assert/is-array-like-object';\nimport __var_4__ from '@stdlib/assert/is-plain-object';\nimport __var_5__ from '@stdlib/assert/is-nonnegative-integer';\nimport __var_6__ from '@stdlib/symbol/iterator';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar hasOwnProp = __var_1__;\nvar isFunction = __var_2__;\nvar isArrayLikeObject = __var_3__;\nvar isObject = __var_4__;\nvar isNonNegativeInteger = __var_5__.isPrimitive;\nvar iteratorSymbol = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which repeatedly iterates over each element in an array-like object.\n*\n* @param {ArrayLikeObject} src - input value\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {integer} [options.dir=1] - iteration direction\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = circarray2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction circarray2iterator( src ) {\n\tvar thisArg;\n\tvar options;\n\tvar count;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar i;\n\tif ( !isArrayLikeObject( src ) ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an array-like object. Value: `' + src + '`.' );\n\t}\n\topts = {\n\t\t'iter': 1e308, // ~infinity\n\t\t'dir': 1       // left to right iteration\n\t};\n\tif ( arguments.length > 1 ) {\n\t\tif ( isObject( arguments[ 1 ] ) ) {\n\t\t\toptions = arguments[ 1 ];\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\tfcn = arguments[ 2 ];\n\t\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\t\tthrow new TypeError( 'invalid argument. Callback argument must be a function. Value: `' + fcn + '`.' );\n\t\t\t\t}\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\t\topts.iter = options.iter;\n\t\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\t\tthrow new TypeError( 'invalid option. `iter` option must be a nonnegative integer. Option: `' + options.iter + '`.' );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'dir' ) ) {\n\t\t\t\topts.dir = options.dir;\n\t\t\t\tif ( options.dir !== 1 && options.dir !== -1 ) {\n\t\t\t\t\tthrow new TypeError( 'invalid option. `dir` option must be either `1` or `-1`. Option: `' + options.dir + '`.' );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( 'invalid argument. Second argument must be either a function or an options object. Value: `' + fcn + '`.' );\n\t\t\t}\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tcount = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tif ( opts.dir === 1 ) {\n\t\t\ti = -1;\n\t\t\tsetReadOnly( iter, 'next', next1a );\n\t\t} else {\n\t\t\ti = src.length;\n\t\t\tsetReadOnly( iter, 'next', next1b );\n\t\t}\n\t} else if ( opts.dir === 1 ) {\n\t\ti = -1;\n\t\tsetReadOnly( iter, 'next', next2a );\n\t} else {\n\t\ti = src.length;\n\t\tsetReadOnly( iter, 'next', next2b );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, src[ i ], i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, src[ i ], i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': src[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': src[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn circarray2iterator( src, opts, fcn, thisArg );\n\t\t}\n\t\treturn circarray2iterator( src, opts );\n\t}\n}\n\n\n// EXPORTS //\nexport default circarray2iterator;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which repeatedly iterates over the elements of an array-like object.\n*\n* @module @stdlib/array/to-circular-iterator\n*\n* @example\n* var circarray2iterator = require( '@stdlib/array/to-circular-iterator' );\n*\n* var iter = circarray2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\nvar iterator = __var_0__;\n\n\n// EXPORTS //\nexport default iterator;\n"]}