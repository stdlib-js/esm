{"version":3,"sources":["@stdlib/assert/is-even/lib/primitive.js","@stdlib/assert/is-even/lib/object.js","@stdlib/assert/is-even/lib/main.js","@stdlib/assert/is-even/lib/index.js"],"names":["isInteger","__var_0__","isPrimitive","isEven","value","isObject","__var_1__","setReadOnly","__var_2__","__var_3__"],"mappings":"oGAsBA,IAAIA,EAAYC,EAAUC,YAmB1B,SAASC,EAAQC,GAChB,OACCJ,EAAWI,IACXA,EAAQ,GAAM,ECtBhB,IAAIJ,EAAYC,EAAUI,SAmB1B,SAASF,EAAQC,GAChB,OACCJ,EAAWI,IACXA,EAAQ,GAAM,ECrBhB,IAAIF,EAAcD,EACdI,EAAWC,EAmCf,SAASH,EAAQC,GAChB,OAASF,EAAaE,IAAWC,EAAUD,GCY5C,IAAIG,EAAcN,EACdE,EAASG,EACTJ,EAAcM,EACdH,EAAWI,EAKfF,EAAaJ,EAAQ,cAAeD,GACpCK,EAAaJ,EAAQ,WAAYE","sourcesContent":["import __var_0__ from '@stdlib/assert/is-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isInteger = __var_0__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive that is an even number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive that is an even number\n*\n* @example\n* var bool = isEven( -4.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( new Number( -4.0 ) );\n* // returns false\n*/\nfunction isEven( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue % 2 === 0\n\t);\n}\n\n\n// EXPORTS //\nexport default isEven;\n","import __var_0__ from '@stdlib/assert/is-integer';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isInteger = __var_0__.isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object that is an even number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object that is an even number\n*\n* @example\n* var bool = isEven( 4.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( new Number( 4.0 ) );\n* // returns true\n*/\nfunction isEven( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue % 2 === 0\n\t);\n}\n\n\n// EXPORTS //\nexport default isEven;\n","import __var_0__ from './primitive.js';\nimport __var_1__ from './object.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPrimitive = __var_0__;\nvar isObject = __var_1__;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an even number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an even number.\n*\n* @example\n* var bool = isEven( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( new Number( 4.0 ) );\n* // returns true\n*\n* @example\n* var bool = isEven( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( new Number( 5.0 ) );\n* // returns false\n*\n* @example\n* var bool = isEven( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isEven( null );\n* // returns false\n*/\nfunction isEven( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\nexport default isEven;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './primitive.js';\nimport __var_3__ from './object.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an even number.\n*\n* @module @stdlib/assert/is-even\n*\n* @example\n* var isEven = require( '@stdlib/assert/is-even' );\n*\n* var bool = isEven( 4.0 );\n* // returns true\n*\n* bool = isEven( new Number( 4.0 ) );\n* // returns true\n*\n* bool = isEven( 3.0 );\n* // returns false\n*\n* bool = isEven( new Number( 5.0 ) );\n* // returns false\n*\n* bool = isEven( -3.14 );\n* // returns false\n*\n* bool = isEven( null );\n* // returns false\n*\n* @example\n* // Use interface to check for even number primitives...\n* var isEven = require( '@stdlib/assert/is-even' ).isPrimitive;\n*\n* var bool = isEven( -4.0 );\n* // returns true\n*\n* bool = isEven( new Number( -4.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for even number objects...\n* var isEven = require( '@stdlib/assert/is-even' ).isObject;\n*\n* var bool = isEven( 4.0 );\n* // returns false\n*\n* bool = isEven( new Number( 4.0 ) );\n* // returns true\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar isEven = __var_1__;\nvar isPrimitive = __var_2__;\nvar isObject = __var_3__;\n\n\n// MAIN //\n\nsetReadOnly( isEven, 'isPrimitive', isPrimitive );\nsetReadOnly( isEven, 'isObject', isObject );\n\n\n// EXPORTS //\nexport default isEven;\n"]}