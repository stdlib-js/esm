{"version":3,"sources":["@stdlib/assert/is-unity-probability-array/lib/main.js","@stdlib/assert/is-unity-probability-array/lib/index.js"],"names":["isTypedArray","__var_0__","isArray","__var_1__","isNumber","__var_2__","isPrimitive","absdiff","__var_3__","FLOAT64_SQRT_EPS","__var_4__","isUnityProbabilityArray","v","sum","i","length"],"mappings":"gNA0BA,IAAIA,EAAeC,EACfC,EAAUC,EACVC,EAAWC,EAAUC,YACrBC,EAAUC,EACVC,EAAmBC,EA2BvB,SAASC,EAAyBC,GACjC,IAAIC,EACAC,EACJ,GAAKZ,EAASU,GAAM,CAEnB,IADAC,EAAM,EACAC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IAAM,CAChC,IACEV,EAAUQ,EAAGE,KACdF,EAAGE,GAAM,GACTF,EAAGE,GAAM,EAET,OAAO,EAERD,GAAOD,EAAGE,GAEX,OAASP,EAASM,EAAK,IAASJ,EAEjC,GAAKT,EAAcY,GAAM,CAExB,IADAC,EAAM,EACAC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IAAM,CAChC,GACCF,EAAGE,GAAM,GACTF,EAAGE,GAAM,EAET,OAAO,EAERD,GAAOD,EAAGE,GAEX,OAASP,EAASM,EAAK,IAASJ,EAEjC,OAAO,EC5CL,IAACE,EAA0BV","sourcesContent":["import __var_0__ from '@stdlib/assert/is-typed-array';\nimport __var_1__ from '@stdlib/assert/is-array';\nimport __var_2__ from '@stdlib/assert/is-number';\nimport __var_3__ from '@stdlib/math/base/utils/absolute-difference';\nimport __var_4__ from '@stdlib/constants/math/float64-sqrt-eps';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isTypedArray = __var_0__;\nvar isArray = __var_1__;\nvar isNumber = __var_2__.isPrimitive;\nvar absdiff = __var_3__;\nvar FLOAT64_SQRT_EPS = __var_4__;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array of probabilities that sum to one.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a probability array\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 0.25, 0.5, 0.25 ] );\n* // returns true\n*\n* @example\n* var bool = isUnityProbabilityArray( new Uint8Array( [ 0, 1 ] ) );\n* // returns true\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 0.4, 0.4, 0.4 ] );\n* // returns false\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 3.14, 0.0 ] );\n* // returns false\n*/\nfunction isUnityProbabilityArray( v ) {\n\tvar sum;\n\tvar i;\n\tif ( isArray( v ) ) {\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < v.length; i++ ) {\n\t\t\tif (\n\t\t\t\t!isNumber( v[ i ] ) ||\n\t\t\t\tv[ i ] > 1.0 ||\n\t\t\t\tv[ i ] < 0.0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsum += v[ i ];\n\t\t}\n\t\treturn ( absdiff( sum, 1.0 ) <= FLOAT64_SQRT_EPS );\n\t}\n\tif ( isTypedArray( v ) ) {\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < v.length; i++ ) {\n\t\t\tif (\n\t\t\t\tv[ i ] > 1.0 ||\n\t\t\t\tv[ i ] < 0.0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsum += v[ i ];\n\t\t}\n\t\treturn ( absdiff( sum, 1.0 ) <= FLOAT64_SQRT_EPS );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\nexport default isUnityProbabilityArray;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of probabilities that sum to one.\n*\n* @module @stdlib/assert/is-unity-probability-array\n*\n* @example\n* var isUnityProbabilityArray = require( '@stdlib/assert/is-unity-probability-array' );\n*\n* var bool = isUnityProbabilityArray( [ 0.25, 0.5, 0.25 ] );\n* // returns true\n*\n* bool = isUnityProbabilityArray( new Uint8Array( [ 0, 1 ] ) );\n* // returns true\n*\n* bool = isUnityProbabilityArray( [ 0.4, 0.4, 0.4 ] );\n* // returns false\n*\n* bool = isUnityProbabilityArray( [ 3.14, 0.0 ] );\n* // returns false\n*/\n\n// MODULES //\nvar isUnityProbabilityArray = __var_0__;\n\n\n// EXPORTS //\nexport default isUnityProbabilityArray;\n"]}