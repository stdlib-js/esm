{"version":3,"sources":["@stdlib/assert/is-square-number/lib/primitive.js","@stdlib/assert/is-square-number/lib/object.js","@stdlib/assert/is-square-number/lib/main.js","@stdlib/assert/is-square-number/lib/index.js"],"names":["isInteger","__var_0__","isPrimitive","sqrt","__var_1__","floor","__var_2__","isSquareNumber","value","n","isObject","x","valueOf","setReadOnly","__var_3__"],"mappings":"iMAwBA,IAAIA,EAAYC,EAAUC,YACtBC,EAAOC,EACPC,EAAQC,EAmBZ,SAASC,EAAgBC,GACxB,IAAIC,EACJ,QAAMT,EAAWQ,KAGjBC,EAAIJ,EAAOF,EAAMK,GAAU,KAClBC,IAAMD,EC3BhB,IAAIR,EAAYC,EAAUS,SACtBP,EAAOC,EACPC,EAAQC,EAmBZ,SAASC,EAAgBC,GACxB,IAAIC,EACAE,EACJ,QAAMX,EAAWQ,KAGjBG,EAAIH,EAAMI,WACVH,EAAIJ,EAAOF,EAAMQ,GAAM,KACdF,IAAME,GC9BhB,IAAIT,EAAcD,EACdS,EAAWN,EA+Bf,SAASG,EAAgBC,GACxB,OAASN,EAAaM,IAAWE,EAAUF,GCW5C,IAAIK,EAAcZ,EACdM,EAAiBH,EACjBF,EAAcI,EACdI,EAAWI,EAKfD,EAAaN,EAAgB,cAAeL,GAC5CW,EAAaN,EAAgB,WAAYG","sourcesContent":["import __var_0__ from '@stdlib/assert/is-integer';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\nimport __var_2__ from '@stdlib/math/base/special/floor';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isInteger = __var_0__.isPrimitive;\nvar sqrt = __var_1__;\nvar floor = __var_2__;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a square number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a square number\n*\n* @example\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isSquareNumber( new Number( 4.0 ) );\n* // returns false\n*/\nfunction isSquareNumber( value ) {\n\tvar n;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tn = floor( sqrt( value ) + 0.5 );\n\treturn n*n === value;\n}\n\n\n// EXPORTS //\nexport default isSquareNumber;\n","import __var_0__ from '@stdlib/assert/is-integer';\nimport __var_1__ from '@stdlib/math/base/special/sqrt';\nimport __var_2__ from '@stdlib/math/base/special/floor';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isInteger = __var_0__.isObject;\nvar sqrt = __var_1__;\nvar floor = __var_2__;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a square number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a square number\n*\n* @example\n* var bool = isSquareNumber( 4.0 );\n* // returns false\n*\n* @example\n* var bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*/\nfunction isSquareNumber( value ) {\n\tvar n;\n\tvar x;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tx = value.valueOf();\n\tn = floor( sqrt( x ) + 0.5 );\n\treturn n*n === x;\n}\n\n\n// EXPORTS //\nexport default isSquareNumber;\n","import __var_0__ from './primitive.js';\nimport __var_1__ from './object.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isPrimitive = __var_0__;\nvar isObject = __var_1__;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a square number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a square number\n*\n* @example\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*\n* @example\n* var bool = isSquareNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isSquareNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isSquareNumber( null );\n* // returns false\n*/\nfunction isSquareNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\nexport default isSquareNumber;\n","import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from './main.js';\nimport __var_2__ from './primitive.js';\nimport __var_3__ from './object.js';\n/**\n\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a square number.\n*\n* @module @stdlib/assert/is-square-number\n*\n* @example\n* var isSquareNumber = require( '@stdlib/assert/is-square-number' );\n*\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*\n* bool = isSquareNumber( 3.14 );\n* // returns false\n*\n* bool = isSquareNumber( -5.0 );\n* // returns false\n*\n* bool = isSquareNumber( null );\n* // returns false\n*\n* @example\n* var isSquareNumber = require( '@stdlib/assert/is-square-number' ).isPrimitive;\n*\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* bool = isSquareNumber( new Number( 4.0 ) );\n* // returns false\n*\n* @example\n* var isSquareNumber = require( '@stdlib/assert/is-square-number' ).isObject;\n*\n* var bool = isSquareNumber( 4.0 );\n* // returns false\n*\n* bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar isSquareNumber = __var_1__;\nvar isPrimitive = __var_2__;\nvar isObject = __var_3__;\n\n\n// MAIN //\n\nsetReadOnly( isSquareNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isSquareNumber, 'isObject', isObject );\n\n\n// EXPORTS //\nexport default isSquareNumber;\n"]}