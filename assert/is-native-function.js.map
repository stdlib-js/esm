{"version":3,"sources":["@stdlib/assert/is-native-function/lib/main.js","@stdlib/assert/is-native-function/lib/index.js"],"names":["isFunction","__var_0__","RE_NATIVE_FUNCTION","__var_1__","fcn2str","Function","prototype","toString","isNativeFunction","value","test","call"],"mappings":"8EAuBA,IAAIA,EAAaC,EACbC,EAAqBC,EAMrBC,EAAUC,SAASC,UAAUC,SAsBjC,SAASC,EAAkBC,GAC1B,OACCT,EAAYS,IACZP,EAAmBQ,KAAMN,EAAQO,KAAMF,ICdtC,IAACD,EAAmBP","sourcesContent":["import __var_0__ from '@stdlib/assert/is-function';\nimport __var_1__ from '@stdlib/regexp/native-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\nvar RE_NATIVE_FUNCTION = __var_1__;\n\n\n// VARIABLES //\n\n// Using `Function#toString` bypasses a value's own `toString` method to provide an extra, but not security proof, precaution to prevent a provided function from impersonating a native function:\nvar fcn2str = Function.prototype.toString;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a native function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a native function\n*\n* @example\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* var bool = isNativeFunction( beep );\n* // returns false\n*\n* bool = isNativeFunction( Date );\n* // returns true\n*/\nfunction isNativeFunction( value ) {\n\treturn (\n\t\tisFunction( value ) &&\n\t\tRE_NATIVE_FUNCTION.test( fcn2str.call( value ) )\n\t);\n}\n\n\n// EXPORTS //\nexport default isNativeFunction;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a native function.\n*\n* @module @stdlib/assert/is-native-function\n*\n* @example\n* var isNativeFunction = require( '@stdlib/assert/is-native-function' );\n*\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* var bool = isNativeFunction( beep );\n* // returns false\n*\n* bool = isNativeFunction( Date );\n* // returns true\n*/\n\n// MODULES //\nvar isNativeFunction = __var_0__;\n\n\n// EXPORTS //\nexport default isNativeFunction;\n"]}