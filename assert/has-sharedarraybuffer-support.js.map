{"version":3,"sources":["@stdlib/assert/has-sharedarraybuffer-support/lib/sharedarraybuffer.js","@stdlib/assert/has-sharedarraybuffer-support/lib/main.js","@stdlib/assert/has-sharedarraybuffer-support/lib/index.js"],"names":["main","SharedArrayBuffer","isSharedArrayBuffer","__var_0__","GlobalSharedArrayBuffer","__var_1__","hasSharedArrayBufferSupport","bool","b1","b2","slice","byteLength","err"],"mappings":"yCAuBA,IAAIA,EAAsC,mBAAtBC,kBAAqCA,kBAAoB,KCAzEC,EAAsBC,EACtBC,EAA0BC,EAc9B,SAASC,IACR,IAAIC,EACAC,EACAC,EAEJ,GAAwC,mBAA5BL,EACX,OAAO,EAGR,IAECK,GADAD,EAAK,IAAIJ,EAAyB,KAC1BM,MAAO,EAAG,GAClBH,EACCL,EAAqBM,IACrBN,EAAqBO,IACH,KAAlBD,EAAGG,YACe,IAAlBF,EAAGE,WAEH,MAAQC,GACTL,GAAO,EAER,OAAOA,ECzBL,IAACD,EAA8BH","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof SharedArrayBuffer === 'function' ) ? SharedArrayBuffer : null; // eslint-disable-line no-undef, stdlib/require-globals\n\n\n// EXPORTS //\nexport default main;\n","import __var_0__ from '@stdlib/assert/is-sharedarraybuffer';\nimport __var_1__ from './sharedarraybuffer.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isSharedArrayBuffer = __var_0__;\nvar GlobalSharedArrayBuffer = __var_1__;\n\n\n// MAIN //\n\n/**\n* Tests for native `SharedArrayBuffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `SharedArrayBuffer` support\n*\n* @example\n* var bool = hasSharedArrayBufferSupport();\n* // returns <boolean>\n*/\nfunction hasSharedArrayBufferSupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar b1;\n\tvar b2;\n\n\tif ( typeof GlobalSharedArrayBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tb1 = new GlobalSharedArrayBuffer( 16 );\n\t\tb2 = b1.slice( 4, 8 );\n\t\tbool = (\n\t\t\tisSharedArrayBuffer( b1 ) &&\n\t\t\tisSharedArrayBuffer( b2 ) &&\n\t\t\tb1.byteLength === 16 &&\n\t\t\tb2.byteLength === 4\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default hasSharedArrayBufferSupport;\n","import __var_0__ from './main.js'; // eslint-disable-line id-length\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `SharedArrayBuffer` support.\n*\n* @module @stdlib/assert/has-sharedarraybuffer-support\n*\n* @example\n* var hasSharedArrayBufferSupport = require( '@stdlib/assert/has-sharedarraybuffer-support' );\n*\n* var bool = hasSharedArrayBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\nvar hasSharedArrayBufferSupport = __var_0__;\n\n\n// EXPORTS //\nexport default hasSharedArrayBufferSupport;\n"]}