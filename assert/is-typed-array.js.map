{"version":3,"sources":["@stdlib/assert/is-typed-array/lib/ctors.js","@stdlib/assert/is-typed-array/lib/main.js","@stdlib/assert/is-typed-array/lib/index.js"],"names":["Int8Array","__var_0__","Uint8Array","__var_1__","Uint8ClampedArray","__var_2__","Int16Array","__var_3__","Uint16Array","__var_4__","Int32Array","__var_5__","Uint32Array","__var_6__","Float32Array","__var_7__","Float64Array","__var_8__","CTORS","ctorName","fcnName","getPrototypeOf","hasFloat64ArraySupport","NAMES","TypedArray","Dummy","isTypedArray","value","v","i","length"],"mappings":"qfA8BA,IAAIA,EAAYC,EACZC,EAAaC,EACbC,EAAoBC,EACpBC,EAAaC,EACbC,EAAcC,EACdC,EAAaC,EACbC,EAAcC,EACdC,EAAeC,EACfC,EAAeC,EAKfC,EAAQ,CACXF,EACAF,EACAJ,EACAE,EACAN,EACAE,EACAR,EACAE,EACAE,wICxBGe,EAAWlB,EACXmB,EAAUjB,EACVkB,EAAiBhB,EACjBiB,EAAyBf,EACzBS,EAAeP,EACfS,EAAQP,EACRY,EAAQV,EAMRW,EAAeF,IAA6BD,EAAgBL,GAAiBS,EAajF,SAASA,KAiBT,SAASC,EAAcC,GACtB,IAAIC,EACAC,EAEJ,GAAsB,iBAAVF,GAAgC,OAAVA,EACjC,OAAO,EAGR,GAAKA,aAAiBH,EACrB,OAAO,EAGR,IAAMK,EAAI,EAAGA,EAAIX,EAAMY,OAAQD,IAC9B,GAAKF,aAAiBT,EAAOW,GAC5B,OAAO,EAIT,KAAQF,GAAQ,CAEf,IADAC,EAAIT,EAAUQ,GACRE,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IAC9B,GAAKN,EAAOM,KAAQD,EACnB,OAAO,EAGTD,EAAQN,EAAgBM,GAGzB,OAAO,EAvDRH,EAAyC,eAA1BJ,EAASI,GAAkCA,EAAaC,ECRpE,IAACC,EAAezB","sourcesContent":["import __var_0__ from '@stdlib/array/int8';\nimport __var_1__ from '@stdlib/array/uint8';\nimport __var_2__ from '@stdlib/array/uint8c';\nimport __var_3__ from '@stdlib/array/int16';\nimport __var_4__ from '@stdlib/array/uint16';\nimport __var_5__ from '@stdlib/array/int32';\nimport __var_6__ from '@stdlib/array/uint32';\nimport __var_7__ from '@stdlib/array/float32';\nimport __var_8__ from '@stdlib/array/float64';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar Int8Array = __var_0__;\nvar Uint8Array = __var_1__;\nvar Uint8ClampedArray = __var_2__;\nvar Int16Array = __var_3__;\nvar Uint16Array = __var_4__;\nvar Int32Array = __var_5__;\nvar Uint32Array = __var_6__;\nvar Float32Array = __var_7__;\nvar Float64Array = __var_8__;\n\n\n// MAIN //\n\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\nexport default CTORS;\n","import __var_0__ from '@stdlib/utils/constructor-name';\nimport __var_1__ from '@stdlib/utils/function-name';\nimport __var_2__ from '@stdlib/utils/get-prototype-of';\nimport __var_3__ from '@stdlib/assert/has-float64array-support';\nimport __var_4__ from '@stdlib/array/float64';\nimport __var_5__ from './ctors.js';\nimport __var_6__ from './names.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar ctorName = __var_0__;\nvar fcnName = __var_1__;\nvar getPrototypeOf = __var_2__;\nvar hasFloat64ArraySupport = __var_3__;\nvar Float64Array = __var_4__;\nvar CTORS = __var_5__;\nvar NAMES = __var_6__;\n\n\n// VARIABLES //\n\n// Abstract `TypedArray` class:\nvar TypedArray = ( hasFloat64ArraySupport() ) ? getPrototypeOf( Float64Array ) : Dummy; // eslint-disable-line max-len\n\n// Ensure abstract typed array class has expected name:\nTypedArray = ( fcnName( TypedArray ) === 'TypedArray' ) ? TypedArray : Dummy;\n\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Dummy() {} // eslint-disable-line no-empty-function\n\n\n// MAIN //\n\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\nfunction isTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for the abstract class...\n\tif ( value instanceof TypedArray ) {\n\t\treturn true;\n\t}\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\nexport default isTypedArray;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a typed array.\n*\n* @module @stdlib/assert/is-typed-array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n* var isTypedArray = require( '@stdlib/assert/is-typed-array' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\n\n// MODULES //\nvar isTypedArray = __var_0__;\n\n\n// EXPORTS //\nexport default isTypedArray;\n"]}