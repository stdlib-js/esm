{"version":3,"sources":["@stdlib/assert/deep-equal/lib/main.js","@stdlib/assert/deep-equal/lib/index.js"],"names":["objectKeys","__var_0__","getPrototypeOf","__var_1__","isDate","__var_2__","isError","__var_3__","isBuffer","__var_4__","isRegExp","__var_5__","deepEqual","a","b","aKeys","bKeys","typeA","typeB","key","i","getTime","source","flags","message","name","length","sort"],"mappings":"4MA2BA,IAAIA,EAAaC,EACbC,EAAiBC,EACjBC,EAASC,EACTC,EAAUC,EACVC,EAAWC,EACXC,EAAWC,EAgCf,SAASC,EAAWC,EAAGC,GACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIJ,GAFAH,SAAeJ,EACfK,SAAeJ,EACJ,OAAND,GAAwB,WAAVI,EAClB,OAAW,OAANH,GAAwB,WAAVI,IACXL,IAAMC,EAKf,GAAe,WAAVI,EACJ,OAAO,EAER,GAAKhB,EAAgBW,KAAQX,EAAgBY,GAC5C,OAAO,EAER,GAAKV,EAAQS,GACZ,OAAOA,EAAEQ,YAAcP,EAAEO,UAE1B,GAAKX,EAAUG,GACd,OAAOA,EAAES,SAAWR,EAAEQ,QAAUT,EAAEU,QAAUT,EAAES,MAE/C,GAAKjB,EAASO,KACRA,EAAEW,UAAYV,EAAEU,SAAWX,EAAEY,OAASX,EAAEW,MAC5C,OAAO,EAGT,GAAKjB,EAAUK,GAAM,CACpB,GAAKA,EAAEa,SAAWZ,EAAEY,OACnB,OAAO,EAER,IAAMN,EAAI,EAAGA,EAAIP,EAAEa,OAAQN,IAC1B,GAAKP,EAAGO,KAAQN,EAAGM,GAClB,OAAO,EAGT,OAAO,EAIR,GAFAL,EAAQf,EAAYa,GACpBG,EAAQhB,EAAYc,GACfC,EAAMW,SAAWV,EAAMU,OAC3B,OAAO,EAMR,IAJAX,EAAMY,OACNX,EAAMW,OAGAP,EAAI,EAAGA,EAAIL,EAAMW,OAAQN,IAC9B,GAAKL,EAAOK,KAAQJ,EAAOI,GAC1B,OAAO,EAIT,IAAMA,EAAI,EAAGA,EAAIL,EAAMW,OAAQN,IAE9B,IAAMR,EAAWC,EADjBM,EAAMJ,EAAOK,IACcN,EAAGK,IAC7B,OAAO,EAGT,OAAOF,IAAUC,EC1Ff,IAACN,EAAYX","sourcesContent":["import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/utils/get-prototype-of';\nimport __var_2__ from '@stdlib/assert/is-date-object';\nimport __var_3__ from '@stdlib/assert/is-error';\nimport __var_4__ from '@stdlib/assert/is-buffer';\nimport __var_5__ from '@stdlib/assert/is-regexp';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar getPrototypeOf = __var_1__;\nvar isDate = __var_2__;\nvar isError = __var_3__;\nvar isBuffer = __var_4__;\nvar isRegExp = __var_5__;\n\n\n// MAIN //\n\n/**\n* Tests for deep equality between two values.\n*\n* @param {*} a - first comparison value\n* @param {*} b - second comparison value\n* @returns {boolean} boolean indicating if `a` is deep equal to `b`\n*\n* @example\n* var bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, 3 ] );\n* // returns true\n*\n* @example\n* var bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, '3' ] );\n* // returns false\n*\n* @example\n* var bool = deepEqual( { 'a': 2 }, { 'a': [ 2 ] } );\n* // returns false\n*\n* @example\n* var bool = deepEqual( [], {} );\n* // returns false\n*\n* @example\n* var bool = deepEqual( null, null );\n* // returns true\n*/\nfunction deepEqual( a, b ) {\n\tvar aKeys;\n\tvar bKeys;\n\tvar typeA;\n\tvar typeB;\n\tvar key;\n\tvar i;\n\n\ttypeA = typeof a;\n\ttypeB = typeof b;\n\tif ( a === null || typeA !== 'object' ) {\n\t\tif ( b === null || typeB !== 'object' ) {\n\t\t\treturn a === b;\n\t\t}\n\t\treturn false;\n\t}\n\t// Case: `a` is of type 'object'\n\tif ( typeB !== 'object' ) {\n\t\treturn false;\n\t}\n\tif ( getPrototypeOf( a ) !== getPrototypeOf( b ) ) {\n\t\treturn false;\n\t}\n\tif ( isDate( a ) ) {\n\t\treturn a.getTime() === b.getTime();\n\t}\n\tif ( isRegExp( a ) ) {\n\t\treturn a.source === b.source && a.flags === b.flags;\n\t}\n\tif ( isError( a ) ) {\n\t\tif ( a.message !== b.message || a.name !== b.name ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ( isBuffer( a ) ) {\n\t\tif ( a.length !== b.length ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < a.length; i++ ) {\n\t\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\taKeys = objectKeys( a );\n\tbKeys = objectKeys( b );\n\tif ( aKeys.length !== bKeys.length ) {\n\t\treturn false;\n\t}\n\taKeys.sort();\n\tbKeys.sort();\n\n\t// Cheap key test:\n\tfor ( i = 0; i < aKeys.length; i++ ) {\n\t\tif ( aKeys[ i ] !== bKeys[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// Possibly expensive deep equality test for each corresponding key:\n\tfor ( i = 0; i < aKeys.length; i++ ) {\n\t\tkey = aKeys[ i ];\n\t\tif ( !deepEqual( a[ key ], b[ key ] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn typeA === typeB;\n}\n\n\n// EXPORTS //\nexport default deepEqual;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for deep equality between two values.\n*\n* @module @stdlib/assert/deep-equal\n*\n* @example\n* var deepEqual = require( '@stdlib/assert/deep-equal' );\n*\n* var bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, '3' ] );\n* // returns false\n*\n* bool = deepEqual( { 'a': 2 }, { 'a': [ 2 ] } );\n* // returns false\n*/\n\n// MODULES //\nvar deepEqual = __var_0__;\n\n\n// EXPORTS //\nexport default deepEqual;\n"]}