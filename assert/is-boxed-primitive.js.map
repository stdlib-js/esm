{"version":3,"sources":["@stdlib/assert/is-boxed-primitive/lib/main.js","@stdlib/assert/is-boxed-primitive/lib/index.js"],"names":["isBoolean","__var_0__","isObject","isNumber","__var_1__","isString","__var_2__","isSymbol","__var_3__","isBoxedPrimitive","value"],"mappings":"yHAyBA,IAAIA,EAAYC,EAAUC,SACtBC,EAAWC,EAAUF,SACrBG,EAAWC,EAAUJ,SACrBK,EAAWC,EAAUN,SAqCzB,SAASO,EAAkBC,GAC1B,MAAsB,iBAAVA,IAIXV,EAAWU,IACXP,EAAUO,IACVL,EAAUK,IACVH,EAAUG,ICpCT,IAACD,EAAmBR","sourcesContent":["import __var_0__ from '@stdlib/assert/is-boolean';\nimport __var_1__ from '@stdlib/assert/is-number';\nimport __var_2__ from '@stdlib/assert/is-string';\nimport __var_3__ from '@stdlib/assert/is-symbol';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isBoolean = __var_0__.isObject;\nvar isNumber = __var_1__.isObject;\nvar isString = __var_2__.isObject;\nvar isSymbol = __var_3__.isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a JavaScript boxed primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a JavaScript boxed primitive\n*\n* @example\n* var bool = isBoxedPrimitive( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isBoxedPrimitive( new Number( 3.21 ) );\n* // returns true\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n* var bool = isBoxedPrimitive( Object( Symbol( 'beep' ) ) );\n* // returns true\n*\n* @example\n* var bool = isBoxedPrimitive( true );\n* // returns false\n*\n* @example\n* var bool = isBoxedPrimitive( {} );\n* // returns false\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n* var bool = isBoxedPrimitive( Symbol( 'beep' ) );\n* // returns false\n*/\nfunction isBoxedPrimitive( value ) {\n\tif ( typeof value !== 'object' ) {\n\t\treturn false;\n\t}\n\treturn (\n\t\tisBoolean( value ) ||\n\t\tisNumber( value ) ||\n\t\tisString( value ) ||\n\t\tisSymbol( value )\n\t);\n}\n\n\n// EXPORTS //\nexport default isBoxedPrimitive;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a JavaScript boxed primitive.\n*\n* @module @stdlib/assert/is-boxed-primitive\n*\n* @example\n* var isBoxedPrimitive = require( '@stdlib/assert/is-boxed-primitive' );\n*\n* var bool = isBoxedPrimitive( new Boolean( true ) );\n* // returns true\n*\n* bool = isBoxedPrimitive( true );\n* // returns false\n*/\n\n// MODULES //\nvar isBoxedPrimitive = __var_0__;\n\n\n// EXPORTS //\nexport default isBoxedPrimitive;\n"]}