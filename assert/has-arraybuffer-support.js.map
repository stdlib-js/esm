{"version":3,"sources":["@stdlib/assert/has-arraybuffer-support/lib/arraybuffer.js","@stdlib/assert/has-arraybuffer-support/lib/main.js","@stdlib/assert/has-arraybuffer-support/lib/index.js"],"names":["main","ArrayBuffer","isArrayBuffer","__var_0__","Float64Array","__var_1__","GlobalArrayBuffer","__var_2__","hasArrayBufferSupport","bool","view","buf","isView","NaN","byteLength","err"],"mappings":"wEAuBA,IAAIA,EAAgC,mBAAhBC,YAA+BA,YAAc,KCC7DC,EAAgBC,EAChBC,EAAeC,EACfC,EAAoBC,EAcxB,SAASC,IACR,IAAIC,EACAC,EACAC,EAEJ,GAAkC,mBAAtBL,EACX,OAAO,EAGR,IACCK,EAAM,IAAIL,EAAmB,KAC7BG,EAASP,EAAeS,IAA6C,mBAA7BL,EAAkBM,WAEzDF,EAAO,IAAIN,EAAcO,IACnB,IAAO,KACbD,EAAM,GAAMG,IACZJ,EACCA,GACAH,EAAkBM,OAAQF,IACP,KAAnBC,EAAIG,aACW,OAAfJ,EAAM,IACNA,EAAM,IAAQA,EAAM,IAGrB,MAAQK,GACTN,GAAO,EAER,OAAOA,ECjCL,IAACD,EAAwBL","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\nexport default main;\n","import __var_0__ from '@stdlib/assert/is-arraybuffer';\nimport __var_1__ from '@stdlib/array/float64';\nimport __var_2__ from './arraybuffer.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isArrayBuffer = __var_0__;\nvar Float64Array = __var_1__;\nvar GlobalArrayBuffer = __var_2__;\n\n\n// MAIN //\n\n/**\n* Tests for native `ArrayBuffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `ArrayBuffer` support\n*\n* @example\n* var bool = hasArrayBufferSupport();\n* // returns <boolean>\n*/\nfunction hasArrayBufferSupport() {\n\tvar bool;\n\tvar view;\n\tvar buf;\n\n\tif ( typeof GlobalArrayBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tbuf = new GlobalArrayBuffer( 16 );\n\t\tbool = ( isArrayBuffer( buf ) && typeof GlobalArrayBuffer.isView === 'function' );\n\t\tif ( bool ) {\n\t\t\tview = new Float64Array( buf );\n\t\t\tview[ 0 ] = -3.14;\n\t\t\tview[ 1 ] = NaN;\n\t\t\tbool = (\n\t\t\t\tbool &&\n\t\t\t\tGlobalArrayBuffer.isView( view ) &&\n\t\t\t\tbuf.byteLength === 16 &&\n\t\t\t\tview[ 0 ] === -3.14 &&\n\t\t\t\tview[ 1 ] !== view[ 1 ]\n\t\t\t);\n\t\t}\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default hasArrayBufferSupport;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `ArrayBuffer` support.\n*\n* @module @stdlib/assert/has-arraybuffer-support\n*\n* @example\n* var hasArrayBufferSupport = require( '@stdlib/assert/has-arraybuffer-support' );\n*\n* var bool = hasArrayBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\nvar hasArrayBufferSupport = __var_0__;\n\n\n// EXPORTS //\nexport default hasArrayBufferSupport;\n"]}