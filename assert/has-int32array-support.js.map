{"version":3,"sources":["@stdlib/assert/has-int32array-support/lib/int32array.js","@stdlib/assert/has-int32array-support/lib/main.js","@stdlib/assert/has-int32array-support/lib/index.js"],"names":["main","Int32Array","isInt32Array","__var_0__","INT32_MAX","__var_1__","INT32_MIN","__var_2__","GlobalInt32Array","__var_3__","hasInt32ArraySupport","bool","arr","err"],"mappings":"kIAuBA,IAAIA,EAA+B,mBAAfC,WAA8BA,WAAa,KCE3DC,EAAeC,EACfC,EAAYC,EACZC,EAAYC,EACZC,EAAmBC,EAcvB,SAASC,IACR,IAAIC,EACAC,EAEJ,GAAiC,mBAArBJ,EACX,OAAO,EAGR,IACCI,EAAM,IAAIJ,EAAkB,CAAE,EAAG,MAAO,KAAMJ,EAAU,IACxDO,EACCT,EAAcU,IACD,IAAbA,EAAK,IACQ,IAAbA,EAAK,KACS,IAAdA,EAAK,IACLA,EAAK,KAAQN,EAEb,MAAQO,GACTF,GAAO,EAER,OAAOA,EC5BL,IAACD,EAAuBP","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\nexport default main;\n","import __var_0__ from '@stdlib/assert/is-int32array';\nimport __var_1__ from '@stdlib/constants/math/int32-max';\nimport __var_2__ from '@stdlib/constants/math/int32-min';\nimport __var_3__ from './int32array.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isInt32Array = __var_0__;\nvar INT32_MAX = __var_1__;\nvar INT32_MIN = __var_2__;\nvar GlobalInt32Array = __var_3__;\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\nexport default hasInt32ArraySupport;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int32Array` support.\n*\n* @module @stdlib/assert/has-int32array-support\n*\n* @example\n* var hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\n*\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\nvar hasInt32ArraySupport = __var_0__;\n\n\n// EXPORTS //\nexport default hasInt32ArraySupport;\n"]}