{"version":3,"sources":["@stdlib/datasets/minard-napoleons-march/lib/validate.js","@stdlib/datasets/minard-napoleons-march/lib/data.js","@stdlib/datasets/minard-napoleons-march/lib/index.js"],"names":["hasOwnProp","__var_0__","isObject","__var_1__","isString","__var_2__","isPrimitive","validate","opts","options","data","TypeError","army","cities","labels","rivers","__var_3__","temperature","__var_4__","objectKeys","copy","minardData","minard","err","arguments","length","RangeError","join"],"mappings":"yMAwBA,IAAIA,EAAaC,EACbC,EAAWC,EACXC,EAAWC,EAAUC,YAwBzB,SAASC,EAAUC,EAAMC,GACxB,OAAMP,EAAUO,GAGXT,EAAYS,EAAS,UACzBD,EAAKE,KAAOD,EAAQC,MACdN,EAAUI,EAAKE,OACb,IAAIC,UAAW,sEAAwEH,EAAKE,KAAO,MAGrG,KARC,IAAIC,UAAW,wDAA0DF,EAAU,s5zDC3BxFC,EAAO,GACXA,EAAKE,KAAOX,EACZS,EAAKG,OAASV,EACdO,EAAKI,OAAST,EACdK,EAAKK,OAASC,EACdN,EAAKO,YAAcC,ECJnB,IAAIC,EAAalB,EACbmB,EAAOjB,EACPH,EAAaK,EACbE,EAAWS,EACXK,EAAaH,EAyBjB,SAASI,EAAQb,GAChB,IAAID,EACAe,EAEJ,GAAKC,UAAUC,OAAS,EAAI,CAG3B,GADAF,EAAMhB,EADNC,EAAO,GACeC,GAErB,MAAMc,EAEP,GAAKf,EAAKE,KAAO,CAChB,IAAMV,EAAYqB,EAAYb,EAAKE,MAClC,MAAM,IAAIgB,WAAY,uEAAuEP,EAAYE,GAAaM,KAAK,KAAK,eAAenB,EAAKE,KAAK,MAE1J,OAAOU,EAAMC,EAAYb,EAAKE,QAGhC,OAAOU,EAAMC","sourcesContent":["import __var_0__ from '@stdlib/assert/has-own-property';\nimport __var_1__ from '@stdlib/assert/is-plain-object';\nimport __var_2__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar hasOwnProp = __var_0__;\nvar isObject = __var_1__;\nvar isString = __var_2__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.data] - dataset name\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'data': 'army'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options must be an object. Value: `' + options + '`.' );\n\t}\n\tif ( hasOwnProp( options, 'data' ) ) {\n\t\topts.data = options.data;\n\t\tif ( !isString( opts.data ) ) {\n\t\t\treturn new TypeError( 'invalid option. `data` option must be a string primitive. Option: `' + opts.data + '`.' );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default validate;\n","import __var_0__ from './../data/army.json';\nimport __var_1__ from './../data/cities.json';\nimport __var_2__ from './../data/labels.json';\nimport __var_3__ from './../data/rivers.geo.json';\nimport __var_4__ from './../data/temperature.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar data = {};\ndata.army = __var_0__;\ndata.cities = __var_1__;\ndata.labels = __var_2__;\ndata.rivers = __var_3__;\ndata.temperature = __var_4__;\n\n\n// EXPORTS //\nexport default data;\n","import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/utils/copy';\nimport __var_2__ from '@stdlib/assert/has-own-property';\nimport __var_3__ from './validate.js';\nimport __var_4__ from './data.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar copy = __var_1__;\nvar hasOwnProp = __var_2__;\nvar validate = __var_3__;\nvar minardData = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns datasets for Charles Joseph Minard's cartographic depiction of Napoleon's Russian campaign of 1812.\n*\n* @param {Options} [options] - options object\n* @param {string} [options.data] - dataset name\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} must provide a recognized dataset name\n* @returns {(Object|ObjectArray)} dataset(s)\n*\n* @example\n* var data = minard();\n* // returns <Object>\n*\n* @example\n* var data = minard({\n*\t'data': 'army'\n* });\n* // returns <ObjectArray>\n*/\nfunction minard( options ) {\n\tvar opts;\n\tvar err;\n\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.data ) {\n\t\t\tif ( !hasOwnProp( minardData, opts.data ) ) {\n\t\t\t\tthrow new RangeError( 'invalid option. `data` option must be one of the following values: `'+objectKeys( minardData ).join(',')+'`. Option: `'+opts.data+'`.' );\n\t\t\t}\n\t\t\treturn copy( minardData[ opts.data ] );\n\t\t}\n\t}\n\treturn copy( minardData );\n}\n\n\n// EXPORTS //\nexport default minard;\n"]}