{"version":3,"sources":["@stdlib/datasets/cmudict/lib/validate.js","@stdlib/datasets/cmudict/lib/data.js","@stdlib/datasets/cmudict/lib/index.js"],"names":["hasOwnProp","__var_0__","isObject","__var_1__","isString","__var_2__","isPrimitive","validate","opts","options","TypeError","data","dict","phones","symbols","vp","__var_3__","objectKeys","copy","dataCMU","__var_4__","cmudict","err","arguments","length","RangeError","join"],"mappings":"2PAwBA,IAAIA,WAAaC,YACjB,IAAIC,SAAWC,YACf,IAAIC,SAAWC,YAAUC,YAwBzB,SAASC,SAAUC,EAAMC,GACxB,IAAMP,SAAUO,GAAY,CAC3B,OAAO,IAAIC,UAAW,wDAA0DD,EAAU,MAE3F,GAAKT,WAAYS,EAAS,QAAW,CACpCD,EAAKG,KAAOF,EAAQE,KACpB,IAAMP,SAAUI,EAAKG,MAAS,CAC7B,OAAO,IAAID,UAAW,sEAAwEF,EAAKG,KAAO,OAG5G,OAAO,8ljhMCpCR,IAAIA,KAAO,GACXA,KAAKC,KAAOX,UACZU,KAAKE,OAASV,UACdQ,KAAKG,QAAUT,UACfM,KAAKI,GAAKC,UCFV,IAAIC,WAAahB,YACjB,IAAIiB,KAAOf,YACX,IAAIH,aAAaK,YACjB,IAAIE,WAAWS,SACf,IAAIG,QAAUC,KAyBd,SAASC,QAASZ,GACjB,IAAID,EACJ,IAAIc,EAEJ,GAAKC,UAAUC,OAAS,EAAI,CAC3BhB,EAAO,GACPc,EAAMf,WAAUC,EAAMC,GACtB,GAAKa,EAAM,CACV,MAAMA,EAEP,GAAKd,EAAKG,KAAO,CAChB,IAAMX,aAAYmB,QAASX,EAAKG,MAAS,CACxC,MAAM,IAAIc,WAAY,uEAAuER,WAAYE,SAAUO,KAAK,KAAK,eAAelB,EAAKG,KAAK,MAEvJ,OAAOO,KAAMC,QAASX,EAAKG,QAG7B,OAAOO,KAAMC","sourcesContent":["import __var_0__ from '@stdlib/assert/has-own-property';\nimport __var_1__ from '@stdlib/assert/is-plain-object';\nimport __var_2__ from '@stdlib/assert/is-string';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar hasOwnProp = __var_0__;\nvar isObject = __var_1__;\nvar isString = __var_2__.isPrimitive;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.data] - dataset name\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'data': 'phones'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( 'invalid argument. Options must be an object. Value: `' + options + '`.' );\n\t}\n\tif ( hasOwnProp( options, 'data' ) ) {\n\t\topts.data = options.data;\n\t\tif ( !isString( opts.data ) ) {\n\t\t\treturn new TypeError( 'invalid option. `data` option must be a string primitive. Option: `' + opts.data + '`.' );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\nexport default validate;\n","import __var_0__ from './../data/dict.json';\nimport __var_1__ from './../data/phones.json';\nimport __var_2__ from './../data/symbols.json';\nimport __var_3__ from './../data/vp.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar data = {};\ndata.dict = __var_0__;\ndata.phones = __var_1__;\ndata.symbols = __var_2__;\ndata.vp = __var_3__;\n\n\n// EXPORTS //\nexport default data;\n","import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/utils/copy';\nimport __var_2__ from '@stdlib/assert/has-own-property';\nimport __var_3__ from './validate.js';\nimport __var_4__ from './data.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar copy = __var_1__;\nvar hasOwnProp = __var_2__;\nvar validate = __var_3__;\nvar dataCMU = __var_4__;\n\n\n// MAIN //\n\n/**\n* Returns datasets from the Carnegie Mellon Pronouncing Dictionary (CMUdict).\n*\n* @param {Options} [options] - options object\n* @param {string} [options.data] - dataset name\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} must provide a recognized dataset name\n* @returns {(Object|ObjectArray)} dataset(s)\n*\n* @example\n* var data = cmudict();\n* // returns <Object>\n*\n* @example\n* var data = cmudict({\n*\t'data': 'phones'\n* });\n* // returns <Object>\n*/\nfunction cmudict( options ) {\n\tvar opts;\n\tvar err;\n\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.data ) {\n\t\t\tif ( !hasOwnProp( dataCMU, opts.data ) ) {\n\t\t\t\tthrow new RangeError( 'invalid option. `data` option must be one of the following values: `'+objectKeys( dataCMU ).join(',')+'`. Option: `'+opts.data+'`.' );\n\t\t\t}\n\t\t\treturn copy( dataCMU[ opts.data ] );\n\t\t}\n\t}\n\treturn copy( dataCMU );\n}\n\n\n// EXPORTS //\nexport default cmudict;\n"]}