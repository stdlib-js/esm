{"version":3,"sources":["@stdlib/time/days-in-year/lib/days_in_year.js","@stdlib/time/days-in-year/lib/index.js"],"names":["isDateObject","__var_0__","isInteger","__var_1__","isPrimitive","isLeapYear","__var_2__","NON_LEAP_YEAR","LEAP_YEAR","daysInYear","value","yr","arguments","length","getFullYear","TypeError","Date"],"mappings":"iIAwBA,IAAIA,EAAeC,EACfC,EAAYC,EAAUC,YACtBC,EAAaC,EAKbC,EAAgB,IAChBC,EAAY,IAwBhB,SAASC,EAAYC,GACpB,IAAIC,EACJ,GAAKC,UAAUC,OACd,GAAKb,EAAcU,GAClBC,EAAKD,EAAMI,kBACL,CAAA,IAAKZ,EAAWQ,GAGtB,MAAM,IAAIK,UAAW,gFAAgFL,EAAM,MAF3GC,EAAKD,OAMNC,GAAK,IAAMK,MAASF,cAErB,OAAKT,EAAYM,GACTH,EAEDD,ECjCL,IAACE,EAAaR","sourcesContent":["import __var_0__ from '@stdlib/assert/is-date-object';\nimport __var_1__ from '@stdlib/assert/is-integer';\nimport __var_2__ from '@stdlib/assert/is-leap-year';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isDateObject = __var_0__;\nvar isInteger = __var_1__.isPrimitive;\nvar isLeapYear = __var_2__;\n\n\n// VARIABLES //\n\nvar NON_LEAP_YEAR = 365;\nvar LEAP_YEAR = 366;\n\n\n// MAIN //\n\n/**\n* Returns the number of days in a year.\n*\n* @param {(integer|Date)} value - year or `Date` object\n* @throws {TypeError} must provide either an integer or a `Date` object\n* @returns {integer} number of days in a year\n*\n* @example\n* var num = daysInYear();\n* // returns <number>\n*\n* @example\n* var num = daysInYear( 2016 );\n* // returns 366\n*\n* @example\n* var num = daysInYear( 2017 );\n* // returns 365\n*/\nfunction daysInYear( value ) {\n\tvar yr;\n\tif ( arguments.length ) {\n\t\tif ( isDateObject( value ) ) {\n\t\t\tyr = value.getFullYear();\n\t\t} else if ( isInteger( value ) ) {\n\t\t\tyr = value;\n\t\t} else {\n\t\t\tthrow new TypeError( 'invalid argument. Must provide either an integer or a `Date` object. Value: `'+value+'`.' );\n\t\t}\n\t} else {\n\t\t// Note: cannot cache as application could cross over into a new year:\n\t\tyr = ( new Date() ).getFullYear();\n\t}\n\tif ( isLeapYear( yr ) ) {\n\t\treturn LEAP_YEAR;\n\t}\n\treturn NON_LEAP_YEAR;\n}\n\n\n// EXPORTS //\nexport default daysInYear;\n","import __var_0__ from './days_in_year.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the number of days in a year according to the Gregorian calendar.\n*\n* @module @stdlib/time/days-in-year\n*\n* @example\n* var daysInYear = require( '@stdlib/time/days-in-year' );\n*\n* var num = daysInYear();\n* // returns <number>\n*\n* num = daysInYear( 2016 );\n* // returns 366\n*\n* num = daysInYear( 2017 );\n* // returns 365\n*/\n\n// MODULES //\nvar daysInYear = __var_0__;\n\n\n// EXPORTS //\nexport default daysInYear;\n"]}