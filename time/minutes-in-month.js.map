{"version":3,"sources":["@stdlib/time/minutes-in-month/lib/minutes_in_month.js","@stdlib/time/minutes-in-month/lib/index.js"],"names":["isDateObject","__var_0__","isString","__var_1__","isPrimitive","isInteger","__var_2__","lowercase","__var_3__","isLeapYear","__var_4__","MINUTES_IN_DAY","__var_5__","MINUTES_IN_MONTH","__var_6__","minutesInMonth","month","year","mins","mon","yr","d","arguments","length","Date","getMonth","getFullYear","TypeError","RangeError","toString","Error"],"mappings":"ytBA4BIA,EAAeC,EACfC,EAAWC,EAAUC,YACrBC,EAAYC,EAAUF,YACtBG,EAAYC,EACZC,EAAaC,EACbC,EAAiBC,EACjBC,EAAmBC,EAgCvB,SAASC,EAAgBC,EAAOC,GAC/B,IAAIC,EACAC,EACAC,EACAC,EACJ,GAA0B,IAArBC,UAAUC,OAGdJ,GADAE,EAAI,IAAIG,MACAC,WAAa,EACrBL,EAAKC,EAAEK,mBACD,GAA0B,IAArBJ,UAAUC,OACrB,GAAKvB,EAAcgB,GAElBG,GADAE,EAAIL,GACIS,WAAa,EACrBL,EAAKC,EAAEK,kBACD,CAAA,IAAKxB,EAAUc,KAAWX,EAAWW,GAK3C,MAAM,IAAIW,UAAW,gGAAgGX,EAAM,MAH3HI,GAAK,IAAMI,MAASE,cACpBP,EAAMH,MAID,CACN,IAAMd,EAAUc,KAAYX,EAAWW,GACtC,MAAM,IAAIW,UAAW,gFAAgFX,EAAM,MAE5G,IAAMX,EAAWY,GAChB,MAAM,IAAIU,UAAW,iEAAiEV,EAAK,MAE5FE,EAAMH,EACNI,EAAKH,EAEN,GAAKZ,EAAWc,KAAUA,EAAM,GAAKA,EAAM,IAC1C,MAAM,IAAIS,WAAY,sFAAsFT,EAAI,MAIjH,GAFAA,EAAMZ,EAAWY,EAAIU,iBAEP,KADdX,EAAOL,EAAkBM,IAExB,MAAM,IAAIW,MAAO,8DAA8DX,EAAI,MAMpF,OAHc,QAATD,GAAkBT,EAAYW,KAClCF,GAAQP,GAEFO,ECnEL,IAACH,EAAiBd","sourcesContent":["import __var_0__ from '@stdlib/assert/is-date-object';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-integer';\nimport __var_3__ from '@stdlib/string/lowercase';\nimport __var_4__ from '@stdlib/assert/is-leap-year';\nimport __var_5__ from '@stdlib/constants/time/minutes-in-day';\nimport __var_6__ from './minutes.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isDateObject = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isInteger = __var_2__.isPrimitive;\nvar lowercase = __var_3__;\nvar isLeapYear = __var_4__;\nvar MINUTES_IN_DAY = __var_5__;\nvar MINUTES_IN_MONTH = __var_6__;\n\n\n// MAIN //\n\n/**\n* Returns the number of minutes in a month.\n*\n* @param {(string|Date|integer)} [month] - month\n* @param {integer} [year] - year\n* @throws {TypeError} first argument must be either a string, integer, or `Date` object\n* @throws {Error} must provide a recognized month\n* @throws {RangeError} an integer month argument must be on the interval `[1,12]`\n* @throws {TypeError} second argument must be an integer\n* @returns {integer} minutes in a month\n*\n* @example\n* var num = minutesInMonth();\n* // returns <number>\n*\n* @example\n* var num = minutesInMonth( 2 );\n* // returns <number>\n*\n* @example\n* var num = minutesInMonth( 2, 2016 );\n* // returns 41760\n*\n* @example\n* var num = minutesInMonth( 2, 2017 );\n* // returns 40320\n*/\nfunction minutesInMonth( month, year ) {\n\tvar mins;\n\tvar mon;\n\tvar yr;\n\tvar d;\n\tif ( arguments.length === 0 ) {\n\t\t// Note: cannot cache as application may cross over into a new year:\n\t\td = new Date();\n\t\tmon = d.getMonth() + 1; // zero-based\n\t\tyr = d.getFullYear();\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isDateObject( month ) ) {\n\t\t\td = month;\n\t\t\tmon = d.getMonth() + 1; // zero-based\n\t\t\tyr = d.getFullYear();\n\t\t} else if ( isString( month ) || isInteger( month ) ) {\n\t\t\t// Note: cannot cache as application may cross over into a new year:\n\t\t\tyr = ( new Date() ).getFullYear();\n\t\t\tmon = month;\n\t\t} else {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be either a string, integer, or `Date` object. Value: `'+month+'`.' );\n\t\t}\n\t} else {\n\t\tif ( !isString( month ) && !isInteger( month ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be either a string or integer. Value: `'+month+'`.' );\n\t\t}\n\t\tif ( !isInteger( year ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be an integer. Value: `'+year+'`.' );\n\t\t}\n\t\tmon = month;\n\t\tyr = year;\n\t}\n\tif ( isInteger( mon ) && (mon < 1 || mon > 12) ) {\n\t\tthrow new RangeError( 'invalid argument. An integer month value must be on the interval `[1,12]`. Value: `'+mon+'`.' );\n\t}\n\tmon = lowercase( mon.toString() );\n\tmins = MINUTES_IN_MONTH[ mon ];\n\tif ( mins === void 0 ) {\n\t\tthrow new Error( 'invalid argument. Must provide a recognized month. Value: `'+mon+'`.' );\n\t}\n\t// Check if February during a leap year...\n\tif ( mins === 40320 && isLeapYear( yr ) ) {\n\t\tmins += MINUTES_IN_DAY;\n\t}\n\treturn mins;\n}\n\n\n// EXPORTS //\nexport default minutesInMonth;\n","import __var_0__ from './minutes_in_month.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the number of minutes in a month.\n*\n* @module @stdlib/time/minutes-in-month\n*\n* @example\n* var minutesInMonth = require( '@stdlib/time/minutes-in-month' );\n*\n* var num = minutesInMonth();\n* // returns <number>\n*\n* num = minutesInMonth( 2 );\n* // returns <number>\n*\n* num = minutesInMonth( 2, 2016 );\n* // returns 41760\n*\n* num = minutesInMonth( 2, 2017 );\n* // returns 40320\n*/\n\n// MODULES //\nvar minutesInMonth = __var_0__;\n\n\n// EXPORTS //\nexport default minutesInMonth;\n"]}