{"version":3,"sources":["@stdlib/time/day-of-year/lib/day_of_year.js","@stdlib/time/day-of-year/lib/index.js"],"names":["isDateObject","__var_0__","isString","__var_1__","isPrimitive","isInteger","__var_2__","daysInMonth","__var_3__","isLeapYear","__var_4__","lowercase","__var_5__","MONTHS","__var_6__","DAYS","__var_7__","dayOfYear","month","day","year","date","days","num","mon","yr","d","i","arguments","length","Date","getMonth","getFullYear","getDate","TypeError","RangeError","toString"],"mappings":"2mBA6BIA,EAAeC,EACfC,EAAWC,EAAUC,YACrBC,EAAYC,EAAUF,YACtBG,EAAcC,EACdC,EAAaC,EACbC,EAAYC,EACZC,EAASC,EACTC,EAAOC,EAmCX,SAASC,EAAWC,EAAOC,EAAKC,GAC/B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,GAA0B,IAArBC,UAAUC,OAGdL,GADAH,EAAO,IAAIS,MACAC,WAAa,EACxBN,EAAKJ,EAAKW,cACVN,EAAIL,EAAKY,eACH,GAA0B,IAArBL,UAAUC,OAAe,CACpC,IAAK7B,EAAckB,GAMlB,MAAM,IAAIgB,UAAW,gGAAgGhB,EAAM,MAJ3HM,GADAH,EAAOH,GACIa,WAAa,EACxBN,EAAKJ,EAAKW,cACVN,EAAIL,EAAKY,cAIJ,CACN,IAAM/B,EAAUgB,KAAYb,EAAWa,GACtC,MAAM,IAAIgB,UAAW,gFAAgFhB,EAAM,MAE5G,IAAMb,EAAWc,GAChB,MAAM,IAAIe,UAAW,iEAAiEf,EAAI,MAE3F,IAAMd,EAAWe,GAChB,MAAM,IAAIc,UAAW,gEAAgEd,EAAK,MAE3FI,EAAMN,EACNQ,EAAIP,EACJM,EAAKL,EAGN,GADAE,EAAOf,EAAaiB,EAAKC,GACpBC,EAAI,GAAKA,EAAIJ,EACjB,MAAM,IAAIa,WAAY,4DAA4Db,EAAK,eAAeI,EAAE,MAKzG,IAHAF,EAAMb,EAAWa,EAAIY,YACrBZ,EAAMX,EAAQW,GACdD,EAAM,EACAI,EAAI,EAAGA,EAAIH,EAAI,EAAGG,IACvBJ,GAAOR,EAAMY,GAGF,IAANA,GAAWlB,EAAYgB,KAC3BF,GAAO,GAIT,OADAA,GAAOG,EChFL,IAACT,EAAYhB","sourcesContent":["import __var_0__ from '@stdlib/assert/is-date-object';\nimport __var_1__ from '@stdlib/assert/is-string';\nimport __var_2__ from '@stdlib/assert/is-integer';\nimport __var_3__ from '@stdlib/time/days-in-month';\nimport __var_4__ from '@stdlib/assert/is-leap-year';\nimport __var_5__ from '@stdlib/string/lowercase';\nimport __var_6__ from './months.json';\nimport __var_7__ from './days.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isDateObject = __var_0__;\nvar isString = __var_1__.isPrimitive;\nvar isInteger = __var_2__.isPrimitive;\nvar daysInMonth = __var_3__;\nvar isLeapYear = __var_4__;\nvar lowercase = __var_5__;\nvar MONTHS = __var_6__;\nvar DAYS = __var_7__;\n\n\n// MAIN //\n\n/**\n* Returns the day of the year.\n*\n* @param {(string|integer|Date)} [month] - month (or Date)\n* @param {integer} [day] - day\n* @param {integer} [year] - year\n* @throws {TypeError} first argument must be either a string, integer, or `Date` object\n* @throws {Error} must provide a recognized month\n* @throws {RangeError} an integer month argument must be on the interval `[1,12]`\n* @throws {TypeError} second argument must be an integer\n* @throws {RangeError} second argument must be greater than `0` and less than or equal to the maximum number of days in a month\n* @throws {TypeError} third argument must be an integer\n* @returns {integer} day of the year\n*\n* @example\n* var day = dayOfYear();\n* // returns <number>\n*\n* @example\n* var day = dayOfYear( new Date() );\n* // returns <number>\n*\n* @example\n* var day = dayOfYear( 12, 31, 2017 );\n* // returns 365\n*\n* @example\n* var day = dayOfYear( 12, 31, 2016 );\n* // returns 366\n*/\nfunction dayOfYear( month, day, year ) {\n\tvar date;\n\tvar days;\n\tvar num;\n\tvar mon;\n\tvar yr;\n\tvar d;\n\tvar i;\n\tif ( arguments.length === 0 ) {\n\t\t// Note: cannot cache as application may cross over into a new year:\n\t\tdate = new Date();\n\t\tmon = date.getMonth() + 1; // zero-based\n\t\tyr = date.getFullYear();\n\t\td = date.getDate();\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isDateObject( month ) ) {\n\t\t\tdate = month;\n\t\t\tmon = date.getMonth() + 1; // zero-based\n\t\t\tyr = date.getFullYear();\n\t\t\td = date.getDate();\n\t\t} else {\n\t\t\tthrow new TypeError( 'invalid argument. If only providing a single argument, must provide a `Date` object. Value: `'+month+'`.' );\n\t\t}\n\t} else {\n\t\tif ( !isString( month ) && !isInteger( month ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. First argument must be either a string or integer. Value: `'+month+'`.' );\n\t\t}\n\t\tif ( !isInteger( day ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Second argument must be an integer. Value: `'+day+'`.' );\n\t\t}\n\t\tif ( !isInteger( year ) ) {\n\t\t\tthrow new TypeError( 'invalid argument. Third argument must be an integer. Value: `'+year+'`.' );\n\t\t}\n\t\tmon = month;\n\t\td = day;\n\t\tyr = year;\n\t}\n\tdays = daysInMonth( mon, yr );\n\tif ( d < 1 || d > days ) {\n\t\tthrow new RangeError( 'invalid argument. Day number must be on the interval `[1,'+days+']`. Value: `'+d+'`.' );\n\t}\n\tmon = lowercase( mon.toString() );\n\tmon = MONTHS[ mon ];\n\tnum = 0;\n\tfor ( i = 0; i < mon-1; i++ ) {\n\t\tnum += DAYS[ i ];\n\n\t\t// Check for February during a leap year...\n\t\tif ( i === 1 && isLeapYear( yr ) ) {\n\t\t\tnum += 1;\n\t\t}\n\t}\n\tnum += d;\n\treturn num;\n}\n\n\n// EXPORTS //\nexport default dayOfYear;\n","import __var_0__ from './day_of_year.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the day of the year.\n*\n* @module @stdlib/time/day-of-year\n*\n* @example\n* var dayOfYear = require( '@stdlib/time/day-of-year' );\n*\n* var day = dayOfYear();\n* // returns <number>\n*\n* day = dayOfYear( new Date() );\n* // returns <number>\n*\n* day = dayOfYear( 12, 31, 2017 );\n* // returns 365\n*\n* day = dayOfYear( 12, 31, 2016 );\n* // returns 366\n*/\n\n// MODULES //\nvar dayOfYear = __var_0__;\n\n\n// EXPORTS //\nexport default dayOfYear;\n"]}