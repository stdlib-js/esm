// This file is a part of stdlib. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
import e from"./../assert/is-date-object.js";import r from"./../assert/is-string.js";import t from"./../assert/is-integer.js";import i from"./../string/lowercase.js";var a=1,n=1,o=1,s=1,m=1,u=1,g=2,l=2,v=2,f=2,j=2,p=3,d=3,h=3,c=3,b=3,w=3,y=4,M=4,E=4,V=4,D=4,P=4,x={1:1,2:1,3:1,4:2,5:2,6:2,7:3,8:3,9:3,10:4,11:4,12:4,jan:a,january:n,feb:o,february:s,mar:m,march:u,apr:g,april:l,may:v,jun:f,june:j,jul:p,july:d,aug:h,august:c,sep:b,september:w,oct:y,october:M,nov:E,november:V,dec:D,december:P},z=e,A=r.isPrimitive,R=t.isPrimitive,S=i,T=x;function k(e){var r,t;if(arguments.length)if(z(e))r=e.getMonth()+1;else{if(!A(e)&&!R(e))throw new TypeError("invalid argument. Must provide either a string, integer, or `Date` object. Value: `"+e+"`.");r=e}else r=(new Date).getMonth()+1;if(R(r)&&(r<1||r>12))throw new RangeError("invalid argument. An integer month value must be on the interval `[1,12]`. Value: `"+r+"`.");if(r=S(r.toString()),void 0===(t=T[r]))throw new Error("invalid argument. Must provide a recognized month. Value: `"+e+"`.");return t}var q=k;export default q;
//# sourceMappingURL=quarter-of-year.js.map