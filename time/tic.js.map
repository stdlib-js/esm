{"version":3,"sources":["@stdlib/time/tic/lib/detect.js","@stdlib/time/tic/lib/polyfill.js","@stdlib/time/tic/lib/now.js","@stdlib/time/tic/lib/index.js"],"names":["isFunction","__var_0__","bool","Date","now","getTime","ts","ns","polyfill","__var_1__","__var_4__","getGlobal","isObject","modf","__var_2__","round","__var_3__","Global","tic","parts","t","performance","bind","mozNow","msNow","oNow","webkitNow"],"mappings":"mNAsBA,IAAIA,EAAaC,EAKbC,EAAOF,EAAYG,KAAKC,KCM5B,SAASA,IAER,OADQ,IAAID,MACHE,UCZV,IAMID,ECOAE,EACAC,EDdAL,EAAOD,EACPO,EAAWC,EAcfC,EAPCN,EADIF,EACEC,KAAKC,IAELI,ECPHG,EAAYV,EACZW,EAAWH,EACXI,EAAOC,EACPC,EAAQC,EACRZ,EAAMM,EAKNO,EAASN,IAyCb,SAASO,IACR,IAAIC,EACAC,EAYJ,OATAA,EAAId,IAAO,KAGXa,EAAQN,EAAMO,IAGP,GAAML,EAAkB,IAAXI,EAAM,IAGnBA,EAlDPZ,EADIK,EAAUK,EAAOI,aAChBJ,EAAOI,YAEP,GAGLf,EADIC,EAAGH,IACFG,EAAGH,IAAIkB,KAAMf,GACPA,EAAGgB,OACThB,EAAGgB,OAAOD,KAAMf,GACVA,EAAGiB,MACTjB,EAAGiB,MAAMF,KAAMf,GACTA,EAAGkB,KACTlB,EAAGkB,KAAKH,KAAMf,GACRA,EAAGmB,UACTnB,EAAGmB,UAAUJ,KAAMf,GAEnBH","sourcesContent":["import __var_0__ from '@stdlib/assert/is-function';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isFunction = __var_0__;\n\n\n// MAIN //\n\nvar bool = isFunction( Date.now );\n\n\n// EXPORTS //\nexport default bool;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the time in milliseconds since the epoch.\n*\n* @private\n* @returns {number} time\n*\n* @example\n* var ts = now();\n* // returns <number>\n*/\nfunction now() {\n\tvar d = new Date();\n\treturn d.getTime();\n}\n\n\n// EXPORTS //\nexport default now;\n","import __var_0__ from './detect.js';\nimport __var_1__ from './polyfill.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar bool = __var_0__;\nvar polyfill = __var_1__;\n\n\n// MAIN //\n\nvar now;\nif ( bool ) {\n\tnow = Date.now;\n} else {\n\tnow = polyfill;\n}\n\n\n// EXPORTS //\nexport default now;\n","import __var_0__ from '@stdlib/utils/global';\nimport __var_1__ from '@stdlib/assert/is-object';\nimport __var_2__ from '@stdlib/math/base/special/modf';\nimport __var_3__ from '@stdlib/math/base/special/round';\nimport __var_4__ from './now.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar getGlobal = __var_0__;\nvar isObject = __var_1__;\nvar modf = __var_2__;\nvar round = __var_3__;\nvar now = __var_4__;\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\nvar ts;\nvar ns;\n\nif ( isObject( Global.performance ) ) {\n\tns = Global.performance;\n} else {\n\tns = {};\n}\nif ( ns.now ) {\n\tts = ns.now.bind( ns );\n} else if ( ns.mozNow ) {\n\tts = ns.mozNow.bind( ns );\n} else if ( ns.msNow ) {\n\tts = ns.msNow.bind( ns );\n} else if ( ns.oNow ) {\n\tts = ns.oNow.bind( ns );\n} else if ( ns.webkitNow ) {\n\tts = ns.webkitNow.bind( ns );\n} else {\n\tts = now;\n}\n\n\n// MAIN //\n\n/**\n* Returns a high-resolution time.\n*\n* ## Notes\n*\n* -   Output format: `[seconds, nanoseconds]`.\n*\n*\n* @private\n* @returns {NumberArray} high-resolution time\n*\n* @example\n* var t = tic();\n* // returns [<number>,<number>]\n*/\nfunction tic() {\n\tvar parts;\n\tvar t;\n\n\t// Get a millisecond timestamp and convert to seconds:\n\tt = ts() / 1000;\n\n\t// Decompose the timestamp into integer (seconds) and fractional parts:\n\tparts = modf( t );\n\n\t// Convert the fractional part to nanoseconds:\n\tparts[ 1 ] = round( parts[1] * 1.0e9 );\n\n\t// Return the high-resolution time:\n\treturn parts;\n}\n\n\n// EXPORTS //\nexport default tic;\n"]}