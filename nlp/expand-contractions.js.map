{"version":3,"sources":["@stdlib/nlp/expand-contractions/lib/expand_contractions.js","@stdlib/nlp/expand-contractions/lib/index.js"],"names":["objectKeys","__var_0__","isCapitalized","__var_1__","uncapitalize","__var_2__","capitalize","__var_3__","tokenize","__var_4__","isString","__var_5__","isPrimitive","CONTRACTIONS","__var_6__","KEYS","expandContractions","str","tokens","token","out","key","i","j","TypeError","length"],"mappings":"22GA4BIA,EAAaC,EACbC,EAAgBC,EAChBC,EAAeC,EACfC,EAAaC,EACbC,EAAWC,EACXC,EAAWC,EAAUC,YACrBC,EAAeC,EAKfC,EAAOf,EAAYa,GAsBvB,SAASG,EAAoBC,GAC5B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAMb,EAAUO,GACf,MAAM,IAAIO,UAAW,8DAA8DP,EAAI,MAIxF,IAFAG,EAAM,GACNF,EAASV,EAAUS,GAAK,GAClBK,EAAI,EAAGA,EAAIJ,EAAOO,OAAQH,IAAM,CAErC,GADAH,EAAQD,EAAQI,GACXpB,EAAeiB,IACnB,IAAMI,EAAI,EAAGA,EAAIR,EAAKU,OAAQF,IAE7B,GADAF,EAAMN,EAAMQ,GACPnB,EAAce,KAAYE,EAAM,CACpCF,EAAQb,EAAYO,EAAcQ,IAClC,YAIF,IAAME,EAAI,EAAGA,EAAIR,EAAKU,OAAQF,IAE7B,GAAKJ,KADLE,EAAMN,EAAMQ,IACS,CACpBJ,EAAQN,EAAcQ,GACtB,MAIHD,GAAOD,EAER,OAAOC,ECxDL,IAACJ,EAAqBf","sourcesContent":["import __var_0__ from '@stdlib/utils/keys';\nimport __var_1__ from '@stdlib/assert/is-capitalized';\nimport __var_2__ from '@stdlib/string/uncapitalize';\nimport __var_3__ from '@stdlib/string/capitalize';\nimport __var_4__ from '@stdlib/nlp/tokenize';\nimport __var_5__ from '@stdlib/assert/is-string';\nimport __var_6__ from './contractions.json';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar objectKeys = __var_0__;\nvar isCapitalized = __var_1__;\nvar uncapitalize = __var_2__;\nvar capitalize = __var_3__;\nvar tokenize = __var_4__;\nvar isString = __var_5__.isPrimitive;\nvar CONTRACTIONS = __var_6__;\n\n\n// VARIABLES //\n\nvar KEYS = objectKeys( CONTRACTIONS );\n\n\n// MAIN //\n\n/**\n* Expands all contractions to their formal equivalents.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a primitive string\n* @returns {string} string with expanded contractions\n*\n* @example\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* @example\n* var str = 'It oughtn\\'t to be my fault, because, you know, I didn\\'t know';\n* var out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\nfunction expandContractions( str ) {\n\tvar tokens;\n\tvar token;\n\tvar out;\n\tvar key;\n\tvar i;\n\tvar j;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid argument. Must provide a primitive string. Value: `'+str+'`.' );\n\t}\n\tout = '';\n\ttokens = tokenize( str, true );\n\tfor ( i = 0; i < tokens.length; i++ ) {\n\t\ttoken = tokens[ i ];\n\t\tif ( isCapitalized( token ) ) {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( uncapitalize( token ) === key ) {\n\t\t\t\t\ttoken = capitalize( CONTRACTIONS[ key ] );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < KEYS.length; j++ ) {\n\t\t\t\tkey = KEYS[ j ];\n\t\t\t\tif ( token === key ) {\n\t\t\t\t\ttoken = CONTRACTIONS[ key ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout += token;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default expandContractions;\n","import __var_0__ from './expand_contractions.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Expand contractions.\n*\n* @module @stdlib/nlp/expand-contractions\n*\n* @example\n* var expandContractions = require( '@stdlib/nlp/expand-contractions' );\n*\n* var str = 'I won\\'t be able to get y\\'all out of this one.';\n* var out = expandContractions( str );\n* // returns 'I will not be able to get you all out of this one.'\n*\n* str = 'It oughtn't to be my fault, because, you know, I didn't know';\n* out = expandContractions( str );\n* // returns 'It ought not to be my fault, because, you know, I did not know'\n*/\n\n// MODULES //\nvar expandContractions = __var_0__;\n\n\n// EXPORTS //\nexport default expandContractions;\n"]}