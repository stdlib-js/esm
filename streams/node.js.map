{"version":3,"sources":["@stdlib/streams/node/lib/index.js"],"names":["setReadOnly","__var_0__","streams","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__","__var_11__","__var_12__","__var_13__","__var_14__","__var_15__","__var_16__"],"mappings":"igDAyCA,IAAAA,EAAAC,EAUAC,EAAA,GASAF,EAAAE,EAAA,cAAAC,GASAH,EAAAE,EAAA,kBAAAE,GASAJ,EAAAE,EAAA,cAAAG,GASAL,EAAAE,EAAA,cAAAI,GASAN,EAAAE,EAAA,sBAAAK,GASAP,EAAAE,EAAA,iBAAAM,GASAR,EAAAE,EAAA,iBAAAO,GASAT,EAAAE,EAAA,qBAAAQ,GASAV,EAAAE,EAAA,gBAAAS,GASAX,EAAAE,EAAA,oBAAAU,GASAZ,EAAAE,EAAA,aAAAW,GASAb,EAAAE,EAAA,cAAAY,GASAd,EAAAE,EAAA,SAAAa,GASAf,EAAAE,EAAA,QAAAc,GASAhB,EAAAE,EAAA,SAAAe,GASAjB,EAAAE,EAAA,kBAAAgB","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/streams/node/debug';\nimport __var_2__ from '@stdlib/streams/node/debug-sink';\nimport __var_3__ from '@stdlib/streams/node/empty';\nimport __var_4__ from '@stdlib/streams/node/from-array';\nimport __var_5__ from '@stdlib/streams/node/from-circular-array';\nimport __var_6__ from '@stdlib/streams/node/from-constant';\nimport __var_7__ from '@stdlib/streams/node/from-iterator';\nimport __var_8__ from '@stdlib/streams/node/from-strided-array';\nimport __var_9__ from '@stdlib/streams/node/inspect';\nimport __var_10__ from '@stdlib/streams/node/inspect-sink';\nimport __var_11__ from '@stdlib/streams/node/join';\nimport __var_12__ from '@stdlib/streams/node/split';\nimport __var_13__ from '@stdlib/streams/node/stderr';\nimport __var_14__ from '@stdlib/streams/node/stdin';\nimport __var_15__ from '@stdlib/streams/node/stdout';\nimport __var_16__ from '@stdlib/streams/node/transform';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace streams\n*/\nvar streams = {};\n\n/**\n* @name debugStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/debug}\n*/\nsetReadOnly( streams, 'debugStream', __var_1__);\n\n/**\n* @name debugSinkStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/debug-sink}\n*/\nsetReadOnly( streams, 'debugSinkStream', __var_2__);\n\n/**\n* @name emptyStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/empty}\n*/\nsetReadOnly( streams, 'emptyStream', __var_3__);\n\n/**\n* @name arrayStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/from-array}\n*/\nsetReadOnly( streams, 'arrayStream', __var_4__);\n\n/**\n* @name circularArrayStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/from-circular-array}\n*/\nsetReadOnly( streams, 'circularArrayStream', __var_5__);\n\n/**\n* @name constantStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/from-constant}\n*/\nsetReadOnly( streams, 'constantStream', __var_6__);\n\n/**\n* @name iteratorStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/from-iterator}\n*/\nsetReadOnly( streams, 'iteratorStream', __var_7__);\n\n/**\n* @name stridedArrayStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/from-strided-array}\n*/\nsetReadOnly( streams, 'stridedArrayStream', __var_8__);\n\n/**\n* @name inspectStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/inspect}\n*/\nsetReadOnly( streams, 'inspectStream', __var_9__);\n\n/**\n* @name inspectSinkStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/inspect-sink}\n*/\nsetReadOnly( streams, 'inspectSinkStream', __var_10__);\n\n/**\n* @name joinStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/join}\n*/\nsetReadOnly( streams, 'joinStream', __var_11__);\n\n/**\n* @name splitStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/split}\n*/\nsetReadOnly( streams, 'splitStream', __var_12__);\n\n/**\n* @name stderr\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/stderr}\n*/\nsetReadOnly( streams, 'stderr', __var_13__);\n\n/**\n* @name stdin\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/stdin}\n*/\nsetReadOnly( streams, 'stdin', __var_14__);\n\n/**\n* @name stdout\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/stdout}\n*/\nsetReadOnly( streams, 'stdout', __var_15__);\n\n/**\n* @name transformStream\n* @memberof streams\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/streams/node/transform}\n*/\nsetReadOnly( streams, 'transformStream', __var_16__);\n\n\n// EXPORTS //\nexport default streams;\n\nexport { __var_1__ as debugStream, __var_2__ as debugSinkStream, __var_3__ as emptyStream, __var_4__ as arrayStream, __var_5__ as circularArrayStream, __var_6__ as constantStream, __var_7__ as iteratorStream, __var_8__ as stridedArrayStream, __var_9__ as inspectStream, __var_10__ as inspectSinkStream, __var_11__ as joinStream, __var_12__ as splitStream, __var_13__ as stderr, __var_14__ as stdin, __var_15__ as stdout, __var_16__ as transformStream};"]}