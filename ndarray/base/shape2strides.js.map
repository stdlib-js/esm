{"version":3,"sources":["@stdlib/ndarray/base/shape2strides/lib/shape2strides.js","@stdlib/ndarray/base/shape2strides/lib/main.js","@stdlib/ndarray/base/shape2strides/lib/index.js"],"names":["shape2strides","out","shape","order","ndims","s","i","length","strides","__var_0__","arguments","Array"],"mappings":"AA4CA,SAASA,EAAeC,EAAKC,EAAOC,GACnC,IAAIC,EACAC,EACAC,EAIJ,GAFAF,EAAQF,EAAMK,OACdF,EAAI,EACW,iBAAVF,EACJ,IAAMG,EAAI,EAAGA,EAAIF,EAAOE,IACvBL,EAAKK,GAAMD,EACXA,GAAKH,EAAOI,QAGb,IAAMA,EAAIF,EAAM,EAAGE,GAAK,EAAGA,IAC1BL,EAAKK,GAAMD,EACXA,GAAKH,EAAOI,GAGd,OAAOL,ECxCR,IAAIO,EAAUC,EAoBd,SAAST,EAAeC,EAAKC,EAAOC,GACnC,OAA0B,IAArBO,UAAUH,OACPC,EAAS,IAAIG,MAAOV,EAAIM,QAAUN,EAAKC,GAExCM,EAASP,EAAKC,EAAOC,GCT1B,IAACH,EAAgBS","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a stride array from an array shape.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output object\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @returns {(Array|TypedArray|Object)} array strides\n*\n* @example\n* var strides = new Array( 2 );\n*\n* var out = shape2strides( strides, [ 3, 2 ], 'row-major' );\n* // returns [ 2, 1 ]\n*\n* var bool = ( out === strides );\n* // returns true\n*\n* out = shape2strides( strides, [ 3, 2 ], 'column-major' );\n* // returns [ 1, 3 ]\n*/\nfunction shape2strides( out, shape, order ) {\n\tvar ndims;\n\tvar s;\n\tvar i;\n\n\tndims = shape.length;\n\ts = 1;\n\tif ( order === 'column-major' ) {\n\t\tfor ( i = 0; i < ndims; i++ ) {\n\t\t\tout[ i ] = s;\n\t\t\ts *= shape[ i ];\n\t\t}\n\t} else { // row-major\n\t\tfor ( i = ndims-1; i >= 0; i-- ) {\n\t\t\tout[ i ] = s;\n\t\t\ts *= shape[ i ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\nexport default shape2strides;\n","import __var_0__ from './shape2strides.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar strides = __var_0__;\n\n\n// MAIN //\n\n/**\n* Generates a stride array from an array shape.\n*\n* @param {(Array|TypedArray|Object)} [out] - output object\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {string} order - specifies whether an array is row-major (C-style) or column-major (Fortran-style)\n* @returns {(Array|TypedArray|Object)} array strides\n*\n* @example\n* var strides = shape2strides( [ 3, 2 ], 'row-major' );\n* // returns [ 2, 1 ]\n*\n* strides = shape2strides( [ 3, 2 ], 'column-major' );\n* // returns [ 1, 3 ]\n*/\nfunction shape2strides( out, shape, order ) {\n\tif ( arguments.length === 2 ) {\n\t\treturn strides( new Array( out.length ), out, shape );\n\t}\n\treturn strides( out, shape, order );\n}\n\n\n// EXPORTS //\nexport default shape2strides;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a stride array from an array shape.\n*\n* @module @stdlib/ndarray/base/shape2strides\n*\n* @example\n* var shape2strides = require( '@stdlib/ndarray/base/shape2strides' );\n*\n* var strides = shape2strides( [ 3, 2 ], 'row-major' );\n* // returns [ 2, 1 ]\n*\n* strides = shape2strides( [ 3, 2 ], 'column-major' );\n* // returns [ 1, 3 ]\n*/\n\n// MODULES //\nvar shape2strides = __var_0__;\n\n\n// EXPORTS //\nexport default shape2strides;\n"]}