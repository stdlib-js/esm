{"version":3,"sources":["@stdlib/ndarray/base/assert/lib/index.js"],"names":["setReadOnly","__var_0__","ns","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","__var_9__","__var_10__","__var_11__","__var_12__","__var_13__","__var_14__","__var_15__"],"mappings":"g3DAwCA,IAAAA,EAAAC,EAUAC,EAAA,GASAF,EAAAE,EAAA,wBAAAC,GASAH,EAAAE,EAAA,2BAAAE,GASAJ,EAAAE,EAAA,gCAAAG,GASAL,EAAAE,EAAA,gBAAAI,GASAN,EAAAE,EAAA,gBAAAK,GASAP,EAAAE,EAAA,0BAAAM,GASAR,EAAAE,EAAA,eAAAO,GASAT,EAAAE,EAAA,aAAAQ,GASAV,EAAAE,EAAA,cAAAS,GASAX,EAAAE,EAAA,UAAAU,GASAZ,EAAAE,EAAA,aAAAW,GASAb,EAAAE,EAAA,uBAAAY,GASAd,EAAAE,EAAA,qBAAAa,GASAf,EAAAE,EAAA,yBAAAc,GASAhB,EAAAE,EAAA,4BAAAe","sourcesContent":["import __var_0__ from '@stdlib/utils/define-read-only-property';\nimport __var_1__ from '@stdlib/ndarray/base/assert/is-allowed-data-type-cast';\nimport __var_2__ from '@stdlib/ndarray/base/assert/is-buffer-length-compatible';\nimport __var_3__ from '@stdlib/ndarray/base/assert/is-buffer-length-compatible-shape';\nimport __var_4__ from '@stdlib/ndarray/base/assert/is-casting-mode';\nimport __var_5__ from '@stdlib/ndarray/base/assert/is-column-major';\nimport __var_6__ from '@stdlib/ndarray/base/assert/is-column-major-contiguous';\nimport __var_7__ from '@stdlib/ndarray/base/assert/is-contiguous';\nimport __var_8__ from '@stdlib/ndarray/base/assert/is-data-type';\nimport __var_9__ from '@stdlib/ndarray/base/assert/is-index-mode';\nimport __var_10__ from '@stdlib/ndarray/base/assert/is-order';\nimport __var_11__ from '@stdlib/ndarray/base/assert/is-row-major';\nimport __var_12__ from '@stdlib/ndarray/base/assert/is-row-major-contiguous';\nimport __var_13__ from '@stdlib/ndarray/base/assert/is-safe-data-type-cast';\nimport __var_14__ from '@stdlib/ndarray/base/assert/is-same-kind-data-type-cast';\nimport __var_15__ from '@stdlib/ndarray/base/assert/is-single-segment-compatible';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name isAllowedDataTypeCast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-allowed-data-type-cast}\n*/\nsetReadOnly( ns, 'isAllowedDataTypeCast', __var_1__);\n\n/**\n* @name isBufferLengthCompatible\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-buffer-length-compatible}\n*/\nsetReadOnly( ns, 'isBufferLengthCompatible', __var_2__);\n\n/**\n* @name isBufferLengthCompatibleShape\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-buffer-length-compatible-shape}\n*/\nsetReadOnly( ns, 'isBufferLengthCompatibleShape', __var_3__);\n\n/**\n* @name isCastingMode\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-casting-mode}\n*/\nsetReadOnly( ns, 'isCastingMode', __var_4__);\n\n/**\n* @name isColumnMajor\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-column-major}\n*/\nsetReadOnly( ns, 'isColumnMajor', __var_5__);\n\n/**\n* @name isColumnMajorContiguous\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-column-major-contiguous}\n*/\nsetReadOnly( ns, 'isColumnMajorContiguous', __var_6__);\n\n/**\n* @name isContiguous\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-contiguous}\n*/\nsetReadOnly( ns, 'isContiguous', __var_7__);\n\n/**\n* @name isDataType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-data-type}\n*/\nsetReadOnly( ns, 'isDataType', __var_8__);\n\n/**\n* @name isIndexMode\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-index-mode}\n*/\nsetReadOnly( ns, 'isIndexMode', __var_9__);\n\n/**\n* @name isOrder\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-order}\n*/\nsetReadOnly( ns, 'isOrder', __var_10__);\n\n/**\n* @name isRowMajor\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-row-major}\n*/\nsetReadOnly( ns, 'isRowMajor', __var_11__);\n\n/**\n* @name isRowMajorContiguous\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-row-major-contiguous}\n*/\nsetReadOnly( ns, 'isRowMajorContiguous', __var_12__);\n\n/**\n* @name isSafeDataTypeCast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-safe-data-type-cast}\n*/\nsetReadOnly( ns, 'isSafeDataTypeCast', __var_13__);\n\n/**\n* @name isSameKindDataTypeCast\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-same-kind-data-type-cast}\n*/\nsetReadOnly( ns, 'isSameKindDataTypeCast', __var_14__);\n\n/**\n* @name isSingleSegmentCompatible\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/ndarray/base/assert/is-single-segment-compatible}\n*/\nsetReadOnly( ns, 'isSingleSegmentCompatible', __var_15__);\n\n\n// EXPORTS //\nexport default ns;\n\nexport { __var_1__ as isAllowedDataTypeCast, __var_2__ as isBufferLengthCompatible, __var_3__ as isBufferLengthCompatibleShape, __var_4__ as isCastingMode, __var_5__ as isColumnMajor, __var_6__ as isColumnMajorContiguous, __var_7__ as isContiguous, __var_8__ as isDataType, __var_9__ as isIndexMode, __var_10__ as isOrder, __var_11__ as isRowMajor, __var_12__ as isRowMajorContiguous, __var_13__ as isSafeDataTypeCast, __var_14__ as isSameKindDataTypeCast, __var_15__ as isSingleSegmentCompatible};"]}