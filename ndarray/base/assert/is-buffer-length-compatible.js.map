{"version":3,"sources":["@stdlib/ndarray/base/assert/is-buffer-length-compatible/lib/main.js","@stdlib/ndarray/base/assert/is-buffer-length-compatible/lib/index.js"],"names":["minmax","__var_0__","BUFFER","isBufferLengthCompatible","len","shape","strides","offset"],"mappings":"gDAsBA,IAAIA,EAASC,EAKTC,EAAS,CAAE,EAAG,GA8BlB,SAASC,EAA0BC,EAAKC,EAAOC,EAASC,GAKvD,OAHAP,EAAQE,EAAQG,EAAOC,EAASC,GAGvBL,EAAQ,IAAO,GAAKA,EAAQ,GAAME,ECdzC,IAACD,EAA2BF","sourcesContent":["import __var_0__ from '@stdlib/ndarray/base/minmax-view-buffer-index';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar minmax = __var_0__;\n\n\n// VARIABLES //\n\nvar BUFFER = [ 0, 0 ]; // WARNING: in C, this would not be thread safe\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a buffer length is compatible with provided ndarray meta data.\n*\n* @param {NonNegativeInteger} len - buffer length\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @returns {boolean} boolean indicating if a buffer length is compatible\n*\n* @example\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns true\n*\n* @example\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns false\n*/\nfunction isBufferLengthCompatible( len, shape, strides, offset ) {\n\t// Determine the minimum and maximum linear indices which are accessible by the array view:\n\tminmax( BUFFER, shape, strides, offset );\n\n\t// If the indices are \"inbounds\", then the buffer length is compatible:\n\treturn ( BUFFER[ 0 ] >= 0 && BUFFER[ 1 ] < len );\n}\n\n\n// EXPORTS //\nexport default isBufferLengthCompatible;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if a buffer length is compatible with provided ndarray meta data.\n*\n* @module @stdlib/ndarray/base/assert/is-stride-offset-buffer-compatible\n*\n* @example\n* var isBufferLengthCompatible = require( '@stdlib/ndarray/base/assert/is-buffer-length-compatible' );\n*\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns true\n*\n* @example\n* var isBufferLengthCompatible = require( '@stdlib/ndarray/base/assert/is-buffer-length-compatible' );\n*\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 2;\n*\n* var bool = isBufferLengthCompatible( 4, shape, strides, offset );\n* // returns false\n*/\n\n// MODULES //\nvar isBufferLengthCompatible = __var_0__;\n\n\n// EXPORTS //\nexport default isBufferLengthCompatible;\n"]}