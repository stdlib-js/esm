{"version":3,"sources":["@stdlib/ndarray/base/assert/is-allowed-data-type-cast/lib/main.js","@stdlib/ndarray/base/assert/is-allowed-data-type-cast/lib/index.js"],"names":["isSafeCast","__var_0__","isSameKindCast","__var_1__","isAllowedCast","from","to","casting"],"mappings":"2FAuBA,IAAIA,EAAaC,EACbC,EAAiBC,EAoBrB,SAASC,EAAeC,EAAMC,EAAIC,GAEjC,MAAiB,WAAZA,IAIAF,IAASC,GAIG,SAAZC,GAAkC,UAAZA,IAIV,SAAZA,EACGP,EAAYK,EAAMC,GAGnBJ,EAAgBG,EAAMC,KCzB3B,IAACF,EAAgBH","sourcesContent":["import __var_0__ from '@stdlib/ndarray/base/assert/is-safe-data-type-cast';\nimport __var_1__ from '@stdlib/ndarray/base/assert/is-same-kind-data-type-cast';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isSafeCast = __var_0__;\nvar isSameKindCast = __var_1__;\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if a provided ndarray data type can be cast to another ndarray data type according to a specified casting mode.\n*\n* @param {string} from - ndarray data type\n* @param {string} to - ndarray data type\n* @param {string} casting - ndarray casting mode\n* @returns {boolean} boolean indicating if a data type can be cast to another data type\n*\n* @example\n* var bool = isAllowedCast( 'float32', 'float64', 'safe' );\n* // returns true\n*\n* bool = isAllowedCast( 'float64', 'int32', 'safe' );\n* // returns false\n*/\nfunction isAllowedCast( from, to, casting ) {\n\t// Anything goes for \"unsafe\" casting...\n\tif ( casting === 'unsafe' ) {\n\t\treturn true;\n\t}\n\t// \"Casting\" to the same data type is always allowed, regardless of the casting mode...\n\tif ( from === to ) {\n\t\treturn true;\n\t}\n\t// No casts between different data types are allowed in \"none\" or \"equiv\" casting modes...\n\tif ( casting === 'none' || casting === 'equiv' ) {\n\t\treturn false;\n\t}\n\t// In \"safe\" casting mode, only casts which preserve values are allowed...\n\tif ( casting === 'safe' ) {\n\t\treturn isSafeCast( from, to );\n\t}\n\t// In \"same-kind\" casting mode, in addition to \"safe\" casts, casts within a \"kind\" (e.g., between signed integers or between floating-point numbers) are allowed...\n\treturn isSameKindCast( from, to );\n}\n\n\n// EXPORTS //\nexport default isAllowedCast;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine if an array data type can be cast to another array data type according to a specified casting rule.\n*\n* @module @stdlib/ndarray/base/assert/is-allowed-data-type-cast\n*\n* @example\n* var isAllowedCast = require( '@stdlib/ndarray/base/assert/is-allowed-data-type-cast' );\n*\n* var bool = isAllowedCast( 'float32', 'float64', 'safe' );\n* // returns true\n*\n* bool = isAllowedCast( 'float64', 'int32', 'safe' );\n* // returns false\n*/\n\n// MODULES //\nvar isAllowedCast = __var_0__;\n\n\n// EXPORTS //\nexport default isAllowedCast;\n"]}