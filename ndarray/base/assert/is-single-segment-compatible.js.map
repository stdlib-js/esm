{"version":3,"sources":["@stdlib/ndarray/base/assert/is-single-segment-compatible/lib/main.js","@stdlib/ndarray/base/assert/is-single-segment-compatible/lib/index.js"],"names":["numel","__var_0__","minmax","__var_1__","BUFFER","isSingleSegmentCompatible","shape","strides","offset","len"],"mappings":"6EAuBA,IAAIA,EAAQC,EACRC,EAASC,EAKTC,EAAS,CAAE,EAAG,GA6BlB,SAASC,EAA2BC,EAAOC,EAASC,GACnD,IAAIC,EAIJ,OAAa,KADbA,EAAMT,EAAOM,MAKbJ,EAAQE,EAAQE,EAAOC,EAASC,GAEvBC,IAAUL,EAAO,GAAGA,EAAO,GAAG,GCrBrC,IAACC,EAA4BJ","sourcesContent":["import __var_0__ from '@stdlib/ndarray/base/numel';\nimport __var_1__ from '@stdlib/ndarray/base/minmax-view-buffer-index';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar numel = __var_0__;\nvar minmax = __var_1__;\n\n\n// VARIABLES //\n\nvar BUFFER = [ 0, 0 ]; // WARNING: in C, this would not be thread safe\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if an array is compatible with a single memory segment.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @param {IntegerArray} strides - stride array\n* @param {NonNegativeInteger} offset - index offset\n* @returns {boolean} boolean indicating if an array is compatible with a single memory segment\n*\n* @example\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var bool = isSingleSegmentCompatible( shape, strides, offset );\n* // returns true\n*\n* @example\n* var shape = [ 10 ];\n* var strides = [ 3 ];\n* var offset = 0;\n*\n* var bool = isSingleSegmentCompatible( shape, strides, offset );\n* // returns false\n*/\nfunction isSingleSegmentCompatible( shape, strides, offset ) {\n\tvar len;\n\n\t// Compute the total number of elements:\n\tlen = numel( shape );\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\t// Determine the minimum and maximum linear indices which are accessible by the array view:\n\tminmax( BUFFER, shape, strides, offset );\n\n\treturn ( len === ( BUFFER[1]-BUFFER[0]+1 ) );\n}\n\n\n// EXPORTS //\nexport default isSingleSegmentCompatible;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if an array is compatible with a single memory segment.\n*\n* @module @stdlib/ndarray/base/assert/is-single-segment-compatible\n*\n* @example\n* var isSingleSegmentCompatible = require( '@stdlib/ndarray/base/assert/is-single-segment-compatible' );\n*\n* var shape = [ 2, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var bool = isSingleSegmentCompatible( shape, strides, offset );\n* // returns true\n*\n* @example\n* var isSingleSegmentCompatible = require( '@stdlib/ndarray/base/assert/is-single-segment-compatible' );\n*\n* var shape = [ 10 ];\n* var strides = [ 3 ];\n* var offset = 0;\n*\n* var bool = isSingleSegmentCompatible( shape, strides, offset );\n* // returns false\n*/\n\n// MODULES //\nvar isSingleSegmentCompatible = __var_0__;\n\n\n// EXPORTS //\nexport default isSingleSegmentCompatible;\n"]}