{"version":3,"sources":["@stdlib/ndarray/base/buffer-dtype/lib/ctor2dtype.js","@stdlib/ndarray/base/buffer-dtype/lib/ctors.js","@stdlib/ndarray/base/buffer-dtype/lib/dtypes.js","@stdlib/ndarray/base/buffer-dtype/lib/main.js","@stdlib/ndarray/base/buffer-dtype/lib/index.js"],"names":["dtypes","Buffer","Float32Array","Float64Array","Array","Int16Array","Int32Array","Int8Array","Object","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","__var_0__","__var_1__","__var_2__","__var_3__","__var_4__","__var_5__","__var_6__","__var_7__","__var_8__","CTORS","DTYPES","isBuffer","isArray","constructorName","ctor2dtype","NTYPES","length","dtype","value","i"],"mappings":"keAwBA,IAAIA,EAAS,CACZC,OAAU,SACVC,aAAgB,UAChBC,aAAgB,UAChBC,MAAS,UACTC,WAAc,QACdC,WAAc,QACdC,UAAa,OACbC,OAAU,UACVC,YAAe,SACfC,YAAe,SACfC,WAAc,QACdC,kBAAqB,UCNlBT,EAAeU,EACfX,EAAeY,EACfJ,EAAcK,EACdT,EAAaU,EACbP,EAAcQ,EACdZ,EAAaa,EACbP,EAAaQ,EACbP,EAAoBQ,EACpBb,EAAYc,EAMZC,EAAQ,CACXnB,EACAD,EACAI,EACAI,EACAL,EACAI,EACAF,EACAI,EACAC,GC7BGW,EAAS,CACZ,UACA,UACA,QACA,SACA,QACA,SACA,OACA,QACA,UCNGC,EAAWX,EACXY,EAAUX,EACVY,EAAkBX,EAClBY,EAAaX,EACbM,EAAQL,EACRM,EAASL,EAKTU,EAASL,EAAOM,OAkBpB,SAASC,EAAOC,GACf,IAAIC,EACJ,GAAKP,EAASM,GACb,MAAO,UAER,GAAKP,EAAUO,GACd,MAAO,SAER,IAAMC,EAAI,EAAGA,EAAIJ,EAAQI,IACxB,GAAKD,aAAiBT,EAAOU,GAC5B,OAAOT,EAAQS,GAIjB,OAAOL,EAAYD,EAAiBK,KAAa,KC1B/C,IAACD,EAAQjB","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Mapping from ndarray data buffer constructors to data types...\nvar dtypes = {\n\t'Buffer': 'binary',\n\t'Float32Array': 'float32',\n\t'Float64Array': 'float64',\n\t'Array': 'generic',\n\t'Int16Array': 'int16',\n\t'Int32Array': 'int32',\n\t'Int8Array': 'int8',\n\t'Object': 'generic',\n\t'Uint16Array': 'uint16',\n\t'Uint32Array': 'uint32',\n\t'Uint8Array': 'uint8',\n\t'Uint8ClampedArray': 'uint8c'\n};\n\n\n// EXPORTS //\nexport default dtypes;\n","import __var_0__ from '@stdlib/array/float64';\nimport __var_1__ from '@stdlib/array/float32';\nimport __var_2__ from '@stdlib/array/uint32';\nimport __var_3__ from '@stdlib/array/int32';\nimport __var_4__ from '@stdlib/array/uint16';\nimport __var_5__ from '@stdlib/array/int16';\nimport __var_6__ from '@stdlib/array/uint8';\nimport __var_7__ from '@stdlib/array/uint8c';\nimport __var_8__ from '@stdlib/array/int8';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar Float64Array = __var_0__;\nvar Float32Array = __var_1__;\nvar Uint32Array = __var_2__;\nvar Int32Array = __var_3__;\nvar Uint16Array = __var_4__;\nvar Int16Array = __var_5__;\nvar Uint8Array = __var_6__;\nvar Uint8ClampedArray = __var_7__;\nvar Int8Array = __var_8__;\n\n\n// MAIN //\n\n// Note: order should match `dtypes` order\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\nexport default CTORS;\n","\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n// Note: order should match `ctors` order\nvar DTYPES = [\n\t'float64',\n\t'float32',\n\t'int32',\n\t'uint32',\n\t'int16',\n\t'uint16',\n\t'int8',\n\t'uint8',\n\t'uint8c'\n];\n\n\n// EXPORTS //\nexport default DTYPES;\n","import __var_0__ from '@stdlib/assert/is-buffer';\nimport __var_1__ from '@stdlib/assert/is-array';\nimport __var_2__ from '@stdlib/utils/constructor-name';\nimport __var_3__ from './ctor2dtype.js';\nimport __var_4__ from './ctors.js';\nimport __var_5__ from './dtypes.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isBuffer = __var_0__;\nvar isArray = __var_1__;\nvar constructorName = __var_2__;\nvar ctor2dtype = __var_3__;\nvar CTORS = __var_4__;\nvar DTYPES = __var_5__;\n\n\n// VARIABLES //\n\nvar NTYPES = DTYPES.length;\n\n\n// MAIN //\n\n/**\n* Returns the data type of an ndarray data buffer.\n*\n* @param {*} value - input value\n* @returns {(string|null)} data type\n*\n* @example\n* var dt = dtype( [ 1, 2, 3 ] );\n* // returns 'generic'\n*\n* var dt = dtype( 'beep' );\n* // returns null\n*/\nfunction dtype( value ) {\n\tvar i;\n\tif ( isArray( value ) ) {\n\t\treturn 'generic';\n\t}\n\tif ( isBuffer( value ) ) {\n\t\treturn 'binary';\n\t}\n\tfor ( i = 0; i < NTYPES; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn DTYPES[ i ];\n\t\t}\n\t}\n\t// If the above failed, fall back to a more robust (and significantly slower) means for resolving underlying data types:\n\treturn ctor2dtype[ constructorName( value ) ] || null;\n}\n\n\n// EXPORTS //\nexport default dtype;\n","import __var_0__ from './main.js';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the data type of an ndarray data buffer.\n*\n* @module @stdlib/ndarray/base/buffer-dtype\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var dtype = require( '@stdlib/ndarray/base/buffer-dtype' );\n*\n* var buf = new Float64Array( 10 );\n*\n* var dt = dtype( buf );\n* // returns 'float64'\n*\n* dt = dtype( {} );\n* // returns 'generic'\n*\n* dt = dtype( 'beep' );\n* // returns null\n*/\n\n// MODULES //\nvar dtype = __var_0__;\n\n\n// EXPORTS //\nexport default dtype;\n"]}