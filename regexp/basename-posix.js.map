{"version":3,"sources":["@stdlib/regexp/basename-posix/lib/index.js"],"names":["RE_BASENAME_POSIX"],"mappings":"AA8GG,IAACA,EAAoB","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture the last part of a POSIX path.\n*\n* @module @stdlib/regexp/basename-posix\n* @type {RegExp}\n*\n* @example\n* var RE_BASENAME_POSIX = require( '@stdlib/regexp/basename-posix' );\n*\n* var base = RE_BASENAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'index.js'\n*/\n\n// MAIN //\n\n/**\n* Captures a POSIX path basename. Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a / literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_BASENAME_POSIX = /^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n\n\n// EXPORTS //\nexport default RE_BASENAME_POSIX;\n"]}