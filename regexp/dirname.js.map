{"version":3,"sources":["@stdlib/regexp/dirname/lib/index.js"],"names":["RE_DIRNAME","setReadOnly","__var_0__","copy","__var_1__","IS_WINDOWS","__var_2__","posix","__var_3__","win32","__var_4__","RE_DIRNAME$1"],"mappings":"sNA+CA,IASIA,EATAC,EAAcC,EACdC,EAAOC,EACPC,EAAaC,EAIbC,EAAQC,EACRC,EAAQC,EAUZT,EAFAD,EAAaG,EAJZH,EADIK,EACSI,EAEAF,GAIW,QAASA,GAClCN,EAAaD,EAAY,QAASS,GAIlC,IAAAE,EAAeX","sourcesContent":["import __var_0__ from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport __var_1__ from '@stdlib/utils/copy';\nimport __var_2__ from '@stdlib/assert/is-windows';\nimport __var_3__ from '@stdlib/regexp/dirname-posix';\nimport __var_4__ from '@stdlib/regexp/dirname-windows';\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture a path dirname.\n*\n* @module @stdlib/regexp/dirname\n* @type {RegExp}\n*\n* @example\n* var RE_DIRNAME = require( '@stdlib/regexp/dirname' );\n*\n* // On a POSIX platform...\n* var dir = RE_DIRNAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '/foo/bar'\n*\n* @example\n* var RE_DIRNAME = require( '@stdlib/regexp/dirname' );\n*\n* // On a Windows platform...\n* var dir = RE_DIRNAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'C:\\\\foo\\\\bar'\n*/\n\n// MODULES //\nvar setReadOnly = __var_0__;\nvar copy = __var_1__;\nvar IS_WINDOWS = __var_2__;\n\n\n// MAIN //\nvar posix = __var_3__;\nvar win32 = __var_4__;\n\nvar RE_DIRNAME;\nif ( IS_WINDOWS ) {\n\tRE_DIRNAME = win32;\n} else {\n\tRE_DIRNAME = posix;\n}\nRE_DIRNAME = copy( RE_DIRNAME );\n\nsetReadOnly( RE_DIRNAME, 'posix', posix );\nsetReadOnly( RE_DIRNAME, 'win32', win32 );\n\n\n// EXPORTS //\nexport default RE_DIRNAME;\n"]}