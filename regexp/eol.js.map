{"version":3,"sources":["@stdlib/regexp/eol/lib/index.js"],"names":["RE_EOL"],"mappings":"AA0DG,IAACA,EAAS","sourcesContent":["\n/**\n\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to match a newline character sequence.\n*\n* @module @stdlib/regexp/eol\n* @type {RegExp}\n*\n* @example\n* var RE_EOL = require( '@stdlib/regexp/eol' );\n*\n* var bool = RE_EOL.test( '\\n' );\n* // returns true\n*\n* bool = RE_EOL.test( '\\r\\n' );\n* // returns true\n*\n* bool = RE_EOL.test( '\\\\r\\\\n' );\n* // returns false\n*/\n\n\n// MAIN //\n\n/**\n* Matches a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /\\r?\\n/\n*/\nvar RE_EOL = /\\r?\\n/;\n\n\n// EXPORTS //\nexport default RE_EOL;\n"]}